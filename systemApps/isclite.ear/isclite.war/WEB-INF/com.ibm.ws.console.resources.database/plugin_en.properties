AliasSelection.global.auth.alias=Global J2C authentication alias
Cloudscape_DataStoreHelper=Cloudscape data store helper
Cloudscape_Network_Server_DataStoreHelper=Cloudscape Network Server data store helper
Config.changes.save=Changes have been made to the configuration. The update RAR action forces a save to your configuration, therefore, you must decide to <a href="/ibm/console/syncworkspace.do?syncaction=list" target="detail">save or discard</a> these changes before performing this action.
Create.New.JDBCProvider=Create new JDBC provider
DB2_DataStoreHelper=DB2 data store helper
DB2_Universal_DataStoreHelper=DB2 Universal data store helper
DB2_for_iSeries_DataStoreHelper=DB2 for iSeries data store helper
DBAdvancedProperties.AdvancedDB2Features.displayName=Advanced DB2 features
DBAdvancedProperties.GetUseClose.displayName=Optimize for get/use/close/connection pattern with heterogenous pooling
DBAdvancedProperties.GetUseClose.error=The property, '{0}', can no longer be defined as a custom property. To configure the get/use/close/connection pattern, navigate to the 'DB2 advanced features' page from the data source page.
DBAdvancedProperties.Reauth.TrustedContext.info=You have enabled database reauthentication. For DB2 data sources, WebSphere supports TrustedConnectionMapping as a better alternative to enabling database reauthentication. To enable TrustedConnectionMapping, first disable database reauthentication and then set the mapping-configuration alias to TrustedConnectionMapping on the data source panel.
DBAdvancedProperties.alternate.jndi.name.displayName=Client reroute server list JNDI name
DBAdvancedProperties.alternate.port.number.displayName=Alternate port numbers
DBAdvancedProperties.alternate.port.number.list.error=The field, {0}, should be an integer or a list of integers separated by commas.
DBAdvancedProperties.alternate.server.name.displayName=Alternate server names
DBAdvancedProperties.alternate.server.name.list.error=The field, {0}, should be a server name or a list of server names separated by commas.
DBAdvancedProperties.cannot.set.reauthentication.error=Database reauthentication cannot be enabled when TrustedConnectionMapping is configured as the mapping-configuration alias. To enable database reauthentication, you must first click <a href="dataSourceDetail.do?EditAction=true&perspective=tab.configuration&context={0}&resourceUri=resources.xml" target="detail">here</a> and select a different mapping-configuration alias.
DBAdvancedProperties.cannot.set.trustedConnectionMapping.error=TrustedConnectionMapping cannot be configured as the mapping-configuration alias when database reauthentication is enabled. To disable database reauthentication click on <a href="com.ibm.ws.console.resources.database.forwardCmd.do?forwardName=RRAProperty.config.view&sfname=propertySet&lastPage=DataSource.config.view&resourceUri=resources.xml&parentRefId={0}&contextId={1}&perspective=tab.configuration" target="detail">WebSphere Application Server data source properties</a> and uncheck {2}.
DBAdvancedProperties.client.reroute.displayName=DB2 automatic client reroute options
DBAdvancedProperties.driverType.cannot.be.2.error={0} cannot be set to type 2 because {1} is set. To change {0}, you must first click on <a href="com.ibm.ws.console.resources.database.forwardCmd.do?forwardName=RRAProperty.config.view&sfname=propertySet&lastPage=DataSource.config.view&resourceUri=resources.xml&parentRefId={2}&contextId={3}&perspective=tab.configuration" target="detail">WebSphere Application Server data source properties</a> and remove the value for {1}.
DBAdvancedProperties.failed.unbind.warning=An attempt was made to unbind the data source from the JNDI namespace, {0}, but it failed to unbind. The likely cause is that the data source was never bound. 
DBAdvancedProperties.max.retries.displayName=Maximum retries for client reroute
DBAdvancedProperties.retries.displayName=retries
DBAdvancedProperties.retry.interval.displayName=Retry interval for client reroute
DBAdvancedProperties.same.number.entries.error={0} and {1} must have the same number of entries.
DBAdvancedProperties.start.with.comma.error=The field, {0}, cannot start with a comma.
DBAdvancedProperties.trusted.context.error=The property, '{0}' is no longer needed to configure trusted context. To use trusted context, select TrustedConnectionMapping as the mapping-configuration alias.
DBAdvancedProperties.unbind.client.reroute.displayName=Unbind client reroute list from JNDI
DBAdvancedProperties.unbind.warning=The data source has been successfully deleted, and the client reroute server list JNDI name has been unbound. If you choose to cancel the deletion by discarding your changes, the JNDI name will not be rebound automatically. To rebind the JNDI name you must either issue a test connection or restart the server.
DataDirect_ConnectJDBC_DataStoreHelper=DataDirect ConnectJDBC data store helper
DataSource.Choose.Provider.displayName=Select an existing JDBC provider
DataSource.create.new=Create a data source
DataSource.datasourceHelper.manualRadioDisplay=Specify a user-defined data store helper
DataSource.datasourceHelper.manualTextDisplay=Enter a package-qualified data store helper class name
DataSource.datasourceHelper.selectRadioDisplay=Select a data store helper class
DataSource.datasourceHelper.selectTextDisplay=Data store helper classes provided by WebSphere Application Server
DataSource.datasourceHelperClassname.displayName=Data store helper class name
DataSource.db2.useTrustedContextWithAuthentication.info=Enabling trusted context with authentication requires an extension of the data store helper class, {0}, to provide the implementation of the getPasswordForUseWithTrustedContextWithAuthentication method. For information on how to extend the class, search the information center for useTrustedContextWithAuthentication.
DataSource.displayName=Data sources
DataSource.error.setting.custom.properties=The data source was successfully created, but the wizard was unable to populate the custom properties. You will need to create the properties required for the data source.
DataSource.genericDatasourceHelperClass.inUse=The GenericDataStoreHelper class does not contain any error exception mapping, so it may not perform as the application expects.
DataSource.invalid.URL=The value for the field, URL, is invalid. Formats such as "jdbc:oracle:thin:@//localhost:1521/sample" for a thin driver or "jdbc:oracle:oci:@//localhost:1521/sample" for a thick driver are valid.
DataSource.isUsedByCmp.label=Use this data source in container managed persistence (CMP)
DataSource.noproperties.message=No data source properties are marked required because the data source was created using WebSphere Application Server V5.x. Use the '{0}' link to configure the properties.
DataSource.properties.duplicate=The resource property, {0}, already exists and duplicate properties are not allowed. If this property does not show up in the list, you can see all properties by setting a preference on the collection.
DataSource.propertyName.URL=URL
DataSource.propertyName.databaseName=Database name
DataSource.propertyName.driverType=Driver type
DataSource.propertyName.ifxIFXHOST=ifxIFXHOST
DataSource.propertyName.informixLockModeWait=Informix lock mode wait
DataSource.propertyName.portNumber=Port number
DataSource.propertyName.serverName=Server name
DataSource.required.properties=Common and required data source properties
DataSource.resolve.classpath.warning=The WebSphere variable, {0} could not be resolved.
DataSource.statementCacheSize.displayName=Statement cache size
DataSource.statementCacheSize.label=statements
DataSourceProperty.include.required.properties=Show all data source properties
Delete.failed=Failed to delete {0}. See the logs for more information.
Derby_DataStoreHelper=Derby data store helper
Derby_Network_Server_DataStoreHelper=Derby Network Server data store helper
Failed.to.create.j2c.factory=Unable to create the {0} factory because the {1} command failed: {2}
Generic_DataStoreHelper=Generic data store helper
Informix_DataStoreHelper=Informix data store helper
Informix_Jcc_DataStoreHelper=Informix JCC Data Store Helper
J2CActivationSpec.activationSpec.displayName=J2C activation specifications
J2CActivationSpec.activationSpecClass.displayName=Message listener type
J2CActivationSpec.authenticationAlias.displayName=Authentication alias
J2CActivationSpec.description.displayName=Description
J2CActivationSpec.destinationJndiName.displayName=Destination JNDI name
J2CActivationSpec.destinationJndiName.manualRadioDisplay=Specify (user-defined destination JNDI name)
J2CActivationSpec.destinationJndiName.manualTextDisplay=Enter JNDI name
J2CActivationSpec.destinationJndiName.selectRadioDisplay=Select an existing destination JNDI name
J2CActivationSpec.destinationJndiName.selectTextDisplay=Available administered object JNDI names
J2CActivationSpec.displayName=J2C activation specification
J2CActivationSpec.jndiName.displayName=JNDI name
J2CActivationSpec.name.displayName=Name
J2CActivationSpec.propertySet.displayName=J2C activation specification custom properties
J2CActivationSpecWarning=This activation specification {0} contains at least one required custom property that does not have a value. You can specify values for the custom properties on the J2C activation specification custom properties panel or as activation configuration properties in the deployment descriptor of the associated message-driven bean.
J2CAdminObject.adminObject.displayName=J2C administered objects
J2CAdminObject.adminObjectClass.displayName=Administered object class
J2CAdminObject.description.displayName=Description
J2CAdminObject.displayName=J2C administered object
J2CAdminObject.jndiName.displayName=JNDI Name
J2CAdminObject.name.displayName=Name
J2CAdminObject.properties.displayName=J2C administered objects custom properties
J2CAdvancedConnectionFactory.advancedConnectionFactory.displayName=Advanced connection factory properties
J2CAdvancedConnectionFactory.diagnoseConnectionUsage.displayName=Detect programming model violations
J2CAdvancedConnectionFactory.diagnoseConnectionUsage.validation.error=If 'Detect programming model violations' is checked then 'Manage cached handles' must also be checked.
J2CAdvancedConnectionFactory.displayName=Advanced connection factory
J2CAdvancedConnectionFactory.logMissingTransactionContext.details1=Log missing transaction context
J2CAdvancedConnectionFactory.logMissingTransactionContext.displayName=Transaction context logging
J2CAdvancedConnectionFactory.manageCachedHandles.displayName=Manage cached handles
J2CAdvancedRAProperties.displayName=Advanced resource adapter properties
J2CAdvancedRAProperties.hACapability.Endpoint=Endpoint failover
J2CAdvancedRAProperties.hACapability.RAInstance=Resource adapter instance failover
J2CAdvancedRAProperties.isEnableHASupport.displayName=Register this resource adapter with the high availability manager
J2CAdvancedRAProperties.singleInstance.displayName=Restrict the JVM to allow only one instance of the resource adapter
J2CAuthMechanismType.BASIC_PASSWORD=BASIC_PASSWORD
J2CAuthMechanismType.KERBEROS=KERBEROS
J2CAuthMechanismType.NONE=None
J2CConnectionFactory.authDataAlias.displayName=Component-managed authentication alias
J2CConnectionFactory.authHeading.displayName=Container-managed authentication
J2CConnectionFactory.authMechanismPreference.description.deprecated=The specification of a login configuration on the component resource reference when res-auth is Container determines the authentication mechanism. In the absence of login configuration information on the resource reference, this field can be used to specify which of the authentication mechanisms that are defined for the corresponding resource adapter applies to this connection factory.  For example, if two auth mechanism entries have been defined for a resource adapter, KerbV5 and Basic Password, this will specify one of those two types.  If the auth mechanism preference specified is not an available auth mechanism on the corresponding resource adapter, it is ignored.  Default=BASIC PASSWORD
J2CConnectionFactory.authMechanismPreference.displayName=Authentication preference
J2CConnectionFactory.authMechanismPreference.displayName.deprecated=Authentication preference
J2CConnectionFactory.category.displayName=Category
J2CConnectionFactory.connectionFactoryInterface.displayName=Connection factory interface
J2CConnectionFactory.description.displayName=Description
J2CConnectionFactory.displayName=J2C connection factory
J2CConnectionFactory.jndiName.displayName=JNDI name
J2CConnectionFactory.mappingModule.authDataAlias.description.deprecated=This field will be used only in the absence of a loginConfiguration on the component resource reference. The specification of a login configuration and associated properties on the component resource reference is the preferred way to define the authentication strategy when the res-auth value is Container. If the 'DefaultPrincipalMapping' login configuration is specified, the associated property will be a JAAS - J2C authentication data entry alias. See related item JAAS - J2C authentication data entry to define a new alias.
J2CConnectionFactory.mappingModule.authDataAlias.displayName=Container-managed authentication alias
J2CConnectionFactory.mappingModule.authDataAlias.displayName.deprecated=Container-managed authentication alias
J2CConnectionFactory.mappingModule.mappingConfigAlias.description.deprecated=This field will be used only in the absence of a loginConfiguration on the component resource reference. The specification of a login configuration and associated properties on the component resource reference determines the container-managed authentication strategy when the res-auth value is Container.
J2CConnectionFactory.mappingModule.mappingConfigAlias.displayName=Mapping-configuration alias
J2CConnectionFactory.mappingModule.mappingConfigAlias.displayName.deprecated=Mapping-configuration alias
J2CConnectionFactory.name.displayName=Name
J2CConnectionFactory.xaRecoveryAlias.applicationRadio=Use component-managed authentication alias
J2CConnectionFactory.xaRecoveryAlias.displayName=Authentication alias for XA recovery
J2CConnectionFactory.xaRecoveryAlias.selectRadio=Specify:
J2CFactory.new.noproviders=A {0} cannot be created in this scope because there are no eligible resource adapters to use as the provider in this scope. Select a different scope or <a href="/ibm/console/com.ibm.ws.console.resources.database.forwardCmd.do?forwardName=J2CResourceAdapter.content.main">create</a> a resource adapter in this scope before trying again.
J2CResourceAdapter.NodeAgent.dmgrnode.error=Resource adapters cannot be created on the deployment manager node. Select a different node.
J2CResourceAdapter.SELECT=Select...
J2CResourceAdapter.adapter.not.found=A resource adapter for archive path {0} cannot be found.
J2CResourceAdapter.archivePath.displayName=Archive path
J2CResourceAdapter.archivePath.required=The archive path is a required field.
J2CResourceAdapter.classpath.displayName=Class path
J2CResourceAdapter.description.displayName=Description
J2CResourceAdapter.displayName=Resource adapters
J2CResourceAdapter.duplicate.name=A resource adapter already exists in this scope with name "{0}". Change the name to be unique.
J2CResourceAdapter.hACapability.displayName=High-availability
J2CResourceAdapter.install.rar.archivePath.choose=Choose an archive path from the list of installed RARs (recommended)
J2CResourceAdapter.install.rar.archivePath.select=List of installed RAR files
J2CResourceAdapter.install.rar.archivePath.specify=Specify the archive path of an installed RAR
J2CResourceAdapter.install.rar.cell.level.warning=You are attempting to configure a resource adapter at the cell level. For this to work on all nodes in the cell, the installed RAR file must exist on each node, and the archive paths must be identical.
J2CResourceAdapter.installRARTask.error=Errors occurred during installation of the RAR file. Refer to the log files on node {0} for more information.<BR>{1}
J2CResourceAdapter.name.displayName=Name
J2CResourceAdapter.name.required=Name is a required field.
J2CResourceAdapter.nativepath.displayName=Native path
J2CResourceAdapter.no.nativepath.on.isolated.warning=The native library path of "{0}" has been discarded because the resource adapter instance is isolated. Isolated resource adapters cannot have a native library path specified.
J2CResourceAdapter.no.new.on.node.error=You clicked the New button, but you cannot create a copy of a resource adapter at the node scope. If you wish to create a copy of an installed resource adapter, specify a different scope and click the New button again. If you wish to install a new resource adapter, click the Install RAR button.
J2CResourceAdapter.resourceAdapter.displayName=Resource adapter
J2CResourceAdapter.scope.displayName=Scope
J2CResourceAdapter.threadPoolAlias.displayName=Thread pool alias
J2CResourceAdapter.updateRAR.RARTable.displayName=The following RARs will be updated:
J2CResourceAdapter.updateRAR.RARs.installed=RARs to be installed:
J2CResourceAdapter.updateRAR.button=Update RAR
J2CResourceAdapter.updateRAR.class=Class:
J2CResourceAdapter.updateRAR.command.error=An error occurred while executing the command {0}. View JVM logs for further details.
J2CResourceAdapter.updateRAR.copy.error=An error occurred while comparing a copy resource adapter to the new RAR file.
J2CResourceAdapter.updateRAR.corr.RAR=Corresponding RAR:
J2CResourceAdapter.updateRAR.currentVersion=Current RAR version
J2CResourceAdapter.updateRAR.displayName=Update a resource adapter
J2CResourceAdapter.updateRAR.edit.props=Edit resource properties
J2CResourceAdapter.updateRAR.existing.resources=Select a resource
J2CResourceAdapter.updateRAR.incompatible.copy.error=A resource adapter factory class, interface, or message listener type has been deleted in the new version of the RAR, but is currently in use by a configured factory. To proceed, delete the administered object, activation specification, or connection factory referenced in the error message on this page. Cancel the wizard and try again after the factory is removed.
J2CResourceAdapter.updateRAR.incompatible.error=At least two of the selected resource adapters are incompatible with each other based on their contents and can not be updated at the same time. You will have to update these resource adapters separately. Deselect one or more of your choices and try again.
J2CResourceAdapter.updateRAR.incompatibleRAR.error=Incompatibilities were found when comparing the new RAR with the selected resource adapter or resource adapters. The following incompatibilities were found:
J2CResourceAdapter.updateRAR.interface=Interface:
J2CResourceAdapter.updateRAR.mesgListener=Message listener:
J2CResourceAdapter.updateRAR.newProperties=New properties
J2CResourceAdapter.updateRAR.newResourceAdapters=New resource adapters
J2CResourceAdapter.updateRAR.newVersion=New RAR version
J2CResourceAdapter.updateRAR.no.new.props=No new properties
J2CResourceAdapter.updateRAR.nodeOnly.error=Only node scoped resource adapters may be selected for this action.
J2CResourceAdapter.updateRAR.nodeVersion.error=The Update RAR operation is not allowed on resource adapters that are installed on a node with a version prior to 7.0.
J2CResourceAdapter.updateRAR.notSpecified=Not specified
J2CResourceAdapter.updateRAR.pathToNewRAR=Path to new resource adapter
J2CResourceAdapter.updateRAR.reset=Reset to Default
J2CResourceAdapter.updateRAR.resource=Resource
J2CResourceAdapter.updateRAR.resource.info=Information for selected resource
J2CResourceAdapter.updateRAR.resource.type=Resource type:
J2CResourceAdapter.updateRAR.scope=Scope:
J2CResourceAdapter.updateRAR.server.stop.error=All servers on node {0} must be stopped. The following servers must be stopped: {1}.
J2CResourceAdapter.updateRAR.setForAll=Set for all
J2CResourceAdapter.updateRAR.sourceResourceAdapters=Existing resource adapters
J2CResourceAdapter.updateRAR.specVersion.error=The Update RAR operation is not allowed on resource adapters with a specification version prior to 1.5.
J2CResourceAdapter.updateRAR.successful=Update was successful for {0} at {1}.
J2CResourceAdapter.updateRAR.summary=The following resources will be updated:
J2CResourceAdapter.updateRAR.summaryRARs=Resource adapters to be updated:
J2CResourceAdapter.updateRAR.warning=Clicking the Finish button automatically saves the changes to the configuration. If you later want to undo the RAR update, you must use this wizard to update to the previous version of the RAR.
J2CResourceAdapter.updateRAR.x.more.errors=more errors...
J2CResourceAdapter.upload.select.node=Node
J2CResourceAdapter.upload.title=Install RAR File
J2CResourceAdapterTask.step1=Select a new RAR file
J2CResourceAdapterTask.step2=List all resource adapter configurations
J2CResourceAdapterTask.step3=Configure new resource properties
J2CResourceAdapterTask.step4=Summary
JCALifeCycleSelect.button.manage=Manage state...
JCALifeCycleSelect.button.pause=Pause
JCALifeCycleSelect.button.purge=Purge
JCALifeCycleSelect.button.resume=Resume
JCALifeCycleSelect.coll.instanceName=Name (JNDI name)
JCALifeCycleSelect.name.displayName=JCA lifecycle management
JCALifeCycleSelect.pause.failure=Pause operation failed for {0} : {1}
JCALifeCycleSelect.pause.successful=Pause operation successful for {0}
JCALifeCycleSelect.purge.failure=Purge operation failed for {0} : {1}
JCALifeCycleSelect.purge.successful=Purge operation successful for {0}
JCALifeCycleSelect.resume.failure=Resume operation failed for {0} : {1}
JCALifeCycleSelect.resume.successful=Resume operation successful for {0}
JCALifeCycleSelect.scope.displayName=Running object scope
JCALifeCycleSelect.status.active=Active
JCALifeCycleSelect.status.error=Error
JCALifeCycleSelect.status.mixed=Mixed
JCALifeCycleSelect.status.paused=Paused
JCALifeCycleSelect.status.req_failed=Request failed
JCALifeCycleSelect.status.stopped=Stopped
JCALifeCycleSelect.status.unknown=Not accessed
JDBCProvider.JCC4.warning=This JDBC provider requires Java SE Development Kit 6. This provider's data sources will only be visible to version 7.0 servers and later.
JDBCProvider.cannot.isolate.was40.datasources.present=You cannot isolate a JDBC provider when it has WebSphere Application Server V4 data sources defined.
JDBCProvider.classpath.contains.variable=The classpath attribute contains a variable that begins with a dollar sign ($). Verify that this variable is defined, by clicking Environment > WebSphere Variables, for each physical machine that the Java Database Connectivity (JDBC) provider is used on.
JDBCProvider.displayName=JDBC providers
JDBCProvider.implementationClassName.displayName=Implementation class name
JDBCProvider.missing.providertype=The JDBC provider object, {0}, is missing a providerType attribute. The system could not automatically update the JDBC provider. The data source wizard will prompt for the provider type when a data source is created for this JDBC provider. 
JDBCProvider.no.change.impl.class=Modifying the implementation class name will eliminate the ability to create data sources and data sources version 4 from templates.
JDBCProvider.notsupported.drivertype=Select a different driver type.
JDBCProvider.set.providertype.info=The JDBC provider object, {0}, was missing a providerType attribute. The system has automatically updated the JDBC provider with the correct providerType attribute. 
JDBCProviderTemplate.dbDriver.displayName=Provider type
JDBCProviderTemplate.dbType.displayName=Database type
JDBCProviderTemplate.dbType.userdefined=User-defined
JDBCProviderTemplate.tranType.connectionpool=Connection pool data source
JDBCProviderTemplate.tranType.displayName=Implementation type
JDBCProviderTemplate.tranType.xa=XA data source
ManageMessageEndpoints.coll.instanceName=Name (Activation Specification)
ManageMessageEndpoints.description=Use this page to manage situations where messaging providers fail to deliver messages to their intended destinations. For example, a provider might fail to deliver messages to a message endpoint when its underlying Message Driven Bean attempts to commit transactions against a database server that is not responding. To temporarily deactivate a message endpoint from handling messages, select the appropriate endpoint and click Pause. After the message endpoint is inactive, repair the underlying cause of the message delivery failures. To reactivate the message endpoint, select the appropriate endpoint and click Resume. To view the configuration binding for the underlying endpoint message Driven Bean and Activation Specification, click the name of the message endpoint.
ManageMessageEndpoints.endpoint.already.active=Endpoint {0} is already active.
ManageMessageEndpoints.endpoint.already.paused=Endpoint {0} is already paused (deactivated).
ManageMessageEndpoints.name.description=Manage specific message endpoints of this application whenever one or more endpoint Message Driven Beans are handling messages that cannot be delivered.
ManageMessageEndpoints.name.displayName=Manage message endpoints
ManageMessageEndpoints.pause.failure=The pause (deactivate) operation failed for {0} : {1}
ManageMessageEndpoints.pause.successful={0} was successfully paused (deactivated).
ManageMessageEndpoints.resume.failure=The resume (activate) operation failed for {0} : {1}
ManageMessageEndpoints.resume.successful={0} was successfully resumed (activated).
Microsoft_SQL_Server_DataStoreHelper=Microsoft SQL Server data store helper
Nodeagent.NotRunning.error=The system is unable to connect to node {0}.  Ensure that the node agent is running and retry the update RAR operation.
Oracle10g_DataStoreHelper=Oracle10g data store helper
Oracle11g_DataStoreHelper=Oracle11g data store helper
Oracle9i_and_prior_DataStoreHelper=Oracle9i and prior data store helper
RRAProperty.ErrorDetectionModel.displayName=Error detection model
RRAProperty.ExceptionCheckingModel.displayName=Use WebSphere Application Server exception checking model
RRAProperty.ExceptionMappingModel.displayName=Use WebSphere Application Server exception mapping model
RRAProperty.PretestValidationOptions.displayName=Validation options
RRAProperty.Query.displayName=Query
RRAProperty.Timeout.displayName=Timeout
RRAProperty.ValidationByJDBCDriver.displayName=Validation by JDBC driver
RRAProperty.ValidationBySQLQuery.displayName=Validation by SQL query (deprecated in V7)
RRAProperty.disableWebSphereConnectionPooling.displayName=Use database connection pooling instead of WebSphere Application Server connection pooling
RRAProperty.displayName=WebSphere Application Server data source properties
RRAProperty.enableDatabaseReAuthentication.displayName=Enable database reauthentication
RRAProperty.enableMultithreadedAccessDetection.displayName=Enable multithreaded access detection
RRAProperty.jmsOnePhaseOptimization.displayName=Enable JMS one-phase optimization support
RRAProperty.nonTransactionalDataSource.displayName=Non-transactional data source
RRAProperty.preTestConnectionHeading.displayName=Connection validation properties
RRAProperty.preTestConnectionRetryInterval.displayName=Retry interval
RRAProperty.preTestConnectionRetryInterval.units=seconds
RRAProperty.preTestConnections.displayName=Validate existing pooled connections
RRAProperty.preTestSQLString.displayName=Pretest SQL string
RRAProperty.property.moved=The property, {0}, has been deprecated due to the new property, {1}.  It can now be found under the link, WebSphere Application Server data source properties, as {2}.
RRAProperty.property.override.warning=You have checked the {0} checkbox which now overrides some deprecated custom properties. To avoid runtime warnings, click on the Custom properties link on the Data source settings page, and delete the {1}, {2}, and {3} properties. 
RRAProperty.property.override.warning2=You have deprecated custom properties set that will cause runtime warnings. To avoid the warnings, delete the dbFailOverEnabled, connRetriesDuringDBFailover, and connRetryIntervalDuringDBFailover properties.
RRAProperty.validateNewConnection.displayName=Validate new connections
RRAProperty.validateNewConnectionRetryCount.displayName=Number of retries
Select.auth.alias=Note: You can create a new J2C authentication alias by accessing one of the following links. Clicking on a link will cancel the wizard and your current wizard selections will be lost.
Sybase_DataStoreHelper=Sybase data store helper
WAS40ConnectionPool.connectionTimeout.displayName=Connection timeout
WAS40ConnectionPool.connectionTimeout.label=seconds
WAS40ConnectionPool.disableAutoConnectionCleanup.label=Disable auto connection cleanup
WAS40ConnectionPool.displayName=Connection pool (version 4)
WAS40ConnectionPool.idleTimeout.displayName=Idle timeout
WAS40ConnectionPool.idleTimeout.label=seconds
WAS40ConnectionPool.maximumPoolSize.displayName=Maximum pool size
WAS40ConnectionPool.maximumPoolSize.label=connections
WAS40ConnectionPool.minimumPoolSize.displayName=Minimum pool size
WAS40ConnectionPool.minimumPoolSize.label=connections
WAS40ConnectionPool.orphanTimeout.displayName=Orphan timeout
WAS40ConnectionPool.orphanTimeout.label=seconds
WAS40ConnectionPool.statementCacheSize.displayName=Statement cache size
WAS40ConnectionPool.statementCacheSize.label=statements
WAS40DataSource.cannot.create.cuz.provider.is.isolated=You cannot create a WebSphere Application Server V4 data source under JDBC provider "{0}", because the provider is set to be isolated. WebSphere Application Server V4 data sources are not supported for isolated JDBC providers.
WAS40DataSource.connectionPool.displayName=Connection pool properties
WAS40DataSource.databaseName.displayName=Database name
WAS40DataSource.defaultPassword.displayName=Default password
WAS40DataSource.defaultUser.displayName=Default user ID
WAS40DataSource.displayName=Data sources (WebSphere Application Server V4)
WAS40DataSource.noproviders.error=A WebSphere Application Server Version 4 data source cannot be created in this scope because there are no eligible JDBC providers available in this scope. Select a different scope or <a href="/ibm/console/com.ibm.ws.console.resources.database.forwardCmd.do?forwardName=JDBCProvider.content.main">create</a> a JDBC provider in this scope before trying again.
WebSphere_Branded_ConnectJDBC_DataStoreHelper=WebSphere Branded ConnectJDBC data store helper
datasource.jdbcprovider.new.step1=Create new JDBC provider
datasource.jdbcprovider.new.step2=Enter database class path information
datasource.new.parent.is.known.step1=Enter basic data source information
datasource.new.parent.is.known.step3=Enter database specific properties for the data source
datasource.new.parent.is.known.step4=Setup security aliases
datasource.new.parent.is.known.step5=Summary
datasource.new.step1=Enter basic data source information\t
datasource.new.step2=Select JDBC provider
datasource.new.step3=Enter database specific properties for the data source
datasource.new.step4=Setup security aliases
datasource.new.step5=Summary
datasource.set.security.alias=Select a J2C authentication alias
jdbcprovider.classpath.ddconnect3=DataDirect Connect for JDBC, version 3.x
jdbcprovider.classpath.ddconnect4=DataDirect Connect for JDBC, version 4.x
jdbcprovider.create.new=Create a new JDBC Provider
jdbcprovider.deprecated=Deprecated
jdbcprovider.hide.deprecated.providers=Hide deprecated drivers...
jdbcprovider.invalid.providerType.choice=The provider type you have chosen is not supported by the current node version. Choose a different provider type.
jdbcprovider.invalid.selection='Select...' is not a valid selection. Choose a different entry in the list.
jdbcprovider.name.displayName=JDBC provider name
jdbcprovider.native.variable.displayName=Directory location which is saved as WebSphere variable {0}
jdbcprovider.new.step1=Create new JDBC provider
jdbcprovider.new.step2=Enter database class path information
jdbcprovider.new.step3=Summary
jdbcprovider.show.deprecated.providers=Show deprecated drivers...
jdbcprovider.step1.database.type.error=database type
jdbcprovider.step1.implementation.type.error=implementation type
jdbcprovider.step1.provider.type.error=provider type
jdbcprovider.step2.driver.version=JDBC driver version
jdbcprovider.variable.displayName=Directory location for "{0}" which is saved as WebSphere variable {1}
label.supportedby=supported by
nav.view.data.sources=Data Sources
nav.view.j2c.resource.adapter=Resource Adapters
nav.view.jdbc.provider=JDBC providers
rarInstall.failed.annotation.error=The specified RAR file failed to install because of an annotation processing error: {0} You must correct the error before installing this RAR.
rarInstall.failed.annotation.warning=The specified RAR file may fail to install because of an annotation processing warning: {0} You may continue attempting to install this RAR but it may fail.
rarInstall.failed.mbean.not.found=Failed to create a new resource adapter on node {0} because the mbean {1} was not found.
rarInstall.failed.no.nodeagents.cell=Failed to create a new resource adapter because there are no node agents running in the cell. Start any of the node agents and try again.
rarInstall.failed.no.nodeagents.cluster=Failed to create a new resource adapter because none of the node agents are running for cluster {0}. Start one of the cluster's node agents and try again.
rarInstall.failed.nodeagent.error=Failed to create a new resource adapter on node {0} because the node agent is not running.
rarInstall.failed.to.read.rar.info=Exception caught while extracting the RAR information: {0}. It is recommended you continue with the RAR install, because it may succeed despite this error.
rarInstall.failed.transfer.file=Failed to transfer the rar from {0} to {1} on node {2}.
rarInstall.file.exists.on.node=The RAR file that you are attempting to install has been found in the configuration for node {0} in the following location: {1}. The RAR file will be overwritten if you continue.
rarInstall.file.notfound=The file was not found.
rarInstall.file.specify=Specify a RAR file.
rarInstall.invalid.archive=The specified file is not a valid RAR archive.
rarInstall.label=Install RAR
rarInstall.rar.info.not.available=Unable to populate this panel with the information from the RAR file because the version of node {0} is prior to 6.1. If you do not enter values on this panel, the values will be defaulted from the deployment descriptor in the RAR file. You may edit the values after the resource adapter is installed.


DBAdvancedProperties.GetUseClose.description=The get/use/close/connection pattern allows connection pooling for the application server to share connections that are in the same transaction. This optimization pattern allows one connection to be shared during a transaction even when connections use different connection properties. The heterogeneous pooling feature allows you to extend the datasource definition so that you can specify different connection properties for the datasource. You must use the heterogeneous pooling feature for the application server to share connections.
DBAdvancedProperties.alternate.jndi.name.description=The JNDI name used to bind the DB2 client reroute server list into the JNDI name space. DB2 will use the name to lookup the alternate server name list when the alternate server information is not already in memory. This option is not supported for type 2 datasources.
DBAdvancedProperties.alternate.port.number.displayName.description=The list of alternate server port or ports for the DB2 server. If more than one alternate server port is specified, the ports must be separated by commas. For example, 5000,50001.
DBAdvancedProperties.alternate.server.name.description=The list of alternate server name or names for the DB2 server. If more than one alternate server name is specified, the names must be separated by commas. For example, host1,host2.
DBAdvancedProperties.client.reroute.description=DB2 client reroute will automatically try alternate server locations if the primary server fails.
DBAdvancedProperties.max.retries.description=The maximum number of connection retries attempted by automatic client reroute if the primary connection to the server fails. This property is only used when the 'Retry interval for client reroute' property is also set.
DBAdvancedProperties.retry.interval.description=The amount of time between automatic client reroute retries. This property is only used if the 'Maximum retries for client reroute' property is also set.  
DBAdvancedProperties.unbind.client.reroute.description=Used with test connection only. When set to true, the Client reroute server list JNDI name will be unbound from the JNDI name space after a test connection is issued.
DataSource.CreateNew.Provider.description=Click to create a new JDBC provider for the datasource.
DataSource.SelectExisting.Provider.description=Click to select an existing JDBC provider from a drop-down list.
DataSource.datasourceHelperClassname.description=Specifies the data store helper class, an interface through which a datasource is triggered by a database to perform functions specific to that database vendor.
DataSource.description=Use this page to edit the settings of a datasource that is associated with your selected JDBC provider. The datasource object supplies your application with connections for accessing the database.
DataSource.isUsedByCmp.description=Specifies that the datasource is used for container-managed persistence (CMP) of enterprise beans. This option triggers creation of a CMP connection factory, which corresponds to the datasource, for the relational resource adapter.
DataSource.jndiName.description=Specifies the JNDI name for the new datasource.
DataSource.name.description=Specifies the name for referencing the datasource in administrative tasks.
DataSource.panel.description=Use this page to edit the settings of a datasource that is associated with your selected JDBC provider. The datasource object supplies your application with connections for accessing the database. Learn more about this task in a <a href="/ibm/console/navigatorCmd.do?forwardName=guidedactivity.resource">guided activity</a>. A guided activity provides a list of task steps and more general information about the topic.
DataSource.propertyName.URL.description=Specifies the URL of the database from which the datasource obtains connections, such as jdbc:oracle:thin:@//localhost:1521/sample for thin driver and jdbc:oracle:oci:@//localhost:1521/sample for thick driver.
DataSource.propertyName.attribute.description=This property corresponds to the database attribute, {0}. 
DataSource.propertyName.databaseName.description=Specifies the name of the database to which the datasource connects. This property corresponds with the database name property in the datasource class. 
DataSource.propertyName.driverType.description=Specifies the JDBC connectivity type of the datasource. This property corresponds with the driver type property in the datasource class. If you want to use the type 4 JDBC driver, set the value to 4. If you want to use the type 2 JDBC driver, set the value to 2. On the z/OS(R) platform, a driver type of 2 uses RRS and supports two-phase commit processing.
DataSource.propertyName.ifxIFXHOST.description=Specifies the physical machine name of the server hosting the Informix(R) instance. A host name or IP address can be entered. An IPv6 address may also be entered if the host database supports it.
DataSource.propertyName.informixLockModeWait.description=Specifies the connection wait time for obtaining a lock in the database. By default, Informix(R) throws an exception when it cannot acquire a lock, rather than wait for the current owner of the lock to release it. To modify the behavior, set the property to the number of seconds to wait for a lock. The default is 2 seconds. Any negative value translates into an unlimited wait time.
DataSource.propertyName.portNumber.description=Specifies the port number on which the database server listens. This property corresponds with the port number property in the datasource class.
DataSource.propertyName.serverName.description=Specifies the name of the server to which the datasource connects. This property corresponds with the server name property in the datasource class.
DataSource.statementCacheSize.description=Specifies the number of cachable statements per connection. WebSphere(R) Application Server optimizes the processing of prepared statements and callable statements by caching those that are not being used in an active connection. Both statement types help maximize the performance of transactions between your application and datastore; caching the statements makes them more readily available.
DataSourceProperty.show.all.properties.description=By default, this panel does not list the custom properties that are configurable by different administrative console pages. Select the option to show all datasource custom properties, including properties required by the datasource and WebSphere configuration properties. Selecting this option does not affect what is displayed on other panels.
J2CActivationSpec.activationSpec.description=Specifies the activation specification definitions for the resource adapter.
J2CActivationSpec.activationSpecClass.description=Specifies the message listener type the activation specification uses. The list of available classes is provided by the resource adapter.
J2CActivationSpec.authenticationAlias.description=Specifies the alias used to bind the J2C activation specification to an authentication alias (configured through the security JAAS screens). This alias is used to access the user name and password that are set on the configured J2C activation specification.
J2CActivationSpec.description=Use this page to configure a J2C activation specification, which is used by the resource adapter when configuring a specific endpoint instance. Each application that configures one or more endpoints must specify the resource adapter that sends messages to the endpoint, and it must use the activation specification to provide the configuration properties for processing the inbound message.
J2CActivationSpec.description.description=Specifies an optional description of the J2C activation specification instance.
J2CActivationSpec.destinationJndiName.description=Specifies the destination JNDI name that is used to bind a configured destination queue or topic (normally a J2C administered object) to the configured J2C activation specification. Use this field only if the type of the destination property on the J2C activation specification is considered a complex type (such as javax.jms.Destination).
J2CActivationSpec.jndiName.description=Specifies the JNDI name for the J2C activation specification instance.
J2CActivationSpec.name.description=Specifies the display name of the J2C activation specification instance.
J2CActivationSpec.propertySet.description=Specifies any additional properties that may be required by the resource adapter for an activation specification.
J2CAdminObject.adminObject.description=Specifies the administered objects for the resource adapter.
J2CAdminObject.adminObjectClass.description=For new objects, the list of available classes is provided by the resource adapter. After you create the administered object, you cannot modify the value.
J2CAdminObject.description=Use this page to configure J2C administered objects (AOs), which are provided by resource adapters. Some messaging styles might need applications to use special administered objects for sending and synchronously receiving messages (through connection objects using messaging style-specific APIs). It is also possible that AOs might be used to perform transformations on an asynchronously received message in a message provider-specific way. You can access administered objects by a component by using either a resource-env-ref or a message-destination-ref (preferred).
J2CAdminObject.description.description=Specifies the description of the J2C administered object instance.
J2CAdminObject.jndiName.description=Specifies the JNDI name under which the administered object is bound.
J2CAdminObject.name.description=Specifies the name of the J2C administered object instance.
J2CAdminObject.properties.description=Specifies any additional properties that a resource adapter may require for an administered object.
J2CAdvancedConnectionFactory.advancedConnectionFactory.description=Use this page to set optional properties for a connection factory.
J2CAdvancedConnectionFactory.description=Use this page to set optional properties for a connection factory.
J2CAdvancedConnectionFactory.diagnoseConnectionUsage.description=Specifies whether the container tracks connection handle usage patterns. Before you activate the property, select the Cached handles setting, which is a prerequisite.
J2CAdvancedConnectionFactory.logMissingTransactionContext.description=Specifies whether the container issues an entry to the activity log when an application obtains a connection without a transaction context.
J2CAdvancedConnectionFactory.manageCachedHandles.description=Specifies whether the container tracks cached handles, which are connection handles that an application component holds active across transaction and method boundaries. Use this property for debugging purposes.
J2CAdvancedRAProperties.RAInstance.description=Resource adapter instance failover allows only one resource adapter in an HA group at a time to be started across multiple servers. The result is that only one runtime resource adapter instance may exist at a time.
J2CAdvancedRAProperties.description=Use this page to manage advanced resource adapter properties.
J2CAdvancedRAProperties.endpoint.description=Endpoint failover allows only one resource adapter in an HA group at a time to receive messages across multiple servers. The result is that only one resource adapter can have endpoints active at a time.
J2CAdvancedRAProperties.isEnableHASupport.description=Selection of the checkbox is not recommended without first consulting the product documentation for the resource adapter, because the checkbox requires the resource adapter to support high availability of inbound messaging.
J2CAdvancedRAProperties.singleInstance.description=Selection of this checkbox is not recommended without first consulting the product documentation. Checking this box prevents more than one resource adapter JavaBean instance with the same resource adapter implementation class name from existing in the same JVM. This is an extremely restrictive environment. For example, if two applications have embedded the same resource adapter, only the first application to start will be able to access resources through its embedded resource adapter. If a stand-alone resource adapter is configured for a single instance then no applications which embed that same resource adapter will be able to access resources.
J2CConnectionFactory.authDataAlias.description=Specifies an authentication alias for use when the component resource reference res-auth value is Application. See Related Items -> J2EE Connector Architecture (J2C) authentication data entries to define a new alias.
J2CConnectionFactory.connectionFactoryInterface.description=Specifies the fully qualified class name of the connection factory interfaces that are supported by the resource adapter.
J2CConnectionFactory.description=Use this page to create a connection factory for use with the resource adapter. The connection factory is a collection of configuration values that define a WebSphere(R) Application Server connection to your Enterprise Information System (EIS). The connection pool manager uses these properties as directions for allocating connections during runtime. You can configure multiple connection factories for each resource adapter.
J2CConnectionFactory.jndiName.description=Specifies the JNDI name for the connection factory, including any naming sub-contexts. To make important resource reference data for the connection factory available to the connection management runtime library, enter the JNDI name as an indirect JNDI name. An indirect JNDI name begins with the prefix of java:comp/env. 
J2CConnectionFactory.mappingModule.authDataAlias.description=References authentication data for container-managed sign-on to the resource. See related item J2EE Connector Architecture (J2C) authentication data entries to define a new alias.
J2CConnectionFactory.mappingModule.mappingConfigAlias.description=Specifies the JAAS login configuration from the security-JAAS configuration panel to map the user identity and credentials to a resource principal and credentials that are required to open a connection to the back-end server.
J2CConnectionFactory.xaRecoveryAlias.description=Specifies the alias that the connection factory uses to authenticate with the EIS for transaction recovery.
J2CResourceAdapter.archivePath.description=Specifies the path to the installed RAR file that contains the module for the resource adapter.
J2CResourceAdapter.description=Use this page to manage resource adapters, which provide the fundamental interface for connecting applications to an Enterprise Information System (EIS). The WebSphere(R) Relational Resource Adapter is embedded within the product to provide access to relational databases. To access another type of EIS, use this page to install a stand-alone resource adapter archive (RAR) file. You can configure multiple resource adapters for each installed RAR file.
J2CResourceAdapter.install.rar.archivePath.description=Specifies the path where the RAR file is to be installed. If you do not set the property, the application server extracts the RAR file to the absolute path that is represented by the variable CONNECTOR_INSTALL_ROOT.
J2CResourceAdapter.install.rar.name.description=Specifies the name of the resource adapter. If you do not set the property, WebSphere(R) Application Server uses the display name in the deployment descriptor.
J2CResourceAdapter.scope.description=Specifies the highest topological level at which application servers can use the adapter.
J2CResourceAdapter.threadPoolAlias.description=Specifies the name of a thread pool that is part of the server configuration for the resource adapter. Set this property only if the resource adapter uses the work manager service. If you input a thread pool name that does not exist in the server configuration, WebSphere(R) Application Server uses the name DEFAULT.
J2CResourceAdapter.updateRAR.asterisk.descrition=Note: The asterisk (*) indicates resource adapter configurations that are copies of one of the selected resource adapters. These configurations will also be updated.
J2CResourceAdapter.updateRAR.description=Use the wizard to update a resource adapter
J2CResourceAdapter.updateRAR.editProps.description=Use the following table to set values for the selected resource's new properties. Select the 'Set for all' checkbox to apply the property value to all resources of the same type. Click the Reset to Default button to reset all properties to the default values defined in the RAR file; this only affects the selected resource.
J2CResourceAdapter.updateRAR.editProps.note.description=Note: you must click the Apply button to save your changes before continuing to the next step or selecting a different resource.
J2CResourceAdapter.updateRAR.exisingResources.description=Displays the list of resources that will be updated.
J2CResourceAdapter.updateRAR.newProperties.description=Displays a list of new properties for the selected resource. Enter a value in the table to set the new property.
J2CResourceAdapter.updateRAR.no.properties=No new properties were added by the new version of the resource adapter. Click the Next button to finish updating the resource adapter.
J2CResourceAdapter.upload.browse.description=Prompts WebSphere(R) Application Server to browse the local machine or a remote server.
J2CResourceAdapter.upload.description=Use this page to install a RAR file in one of two ways. You can either upload a RAR file from the local file system, or specify an existing RAR file on a server. The RAR file must be installed at the node level, and you can select the node below.
J2CResourceAdapter.upload.local=Select the local path if the RAR file resides on the same machine as the browser.
J2CResourceAdapter.upload.nodeName.description=Specifies the node on which the RAR file will be extracted and installed. A resource adapter will be configured at the scope.
J2CResourceAdapter.upload.remote=Select the server path if the RAR file resides on any of the nodes in your cell context.
J2CResourceAdapter.upload.step.description=Specify a RAR file to upload, or an existing RAR file.
J2CResourceAdapter.upload.step.help.description=Choose the local path if the RAR file resides on the same machine as the browser. Choose the server path if the RAR file resides on any of the nodes in your cell context.
J2CResourceAdapterTask.step1.instruction=Updating a RAR will overlay the existing binaries with the binaries in the new version of the RAR. This operation will also update the configuration by removing obsolete properties and giving you the option to set values for new properties. Properties refer to any resource adapter, connection factory, activation specification, and administered object properties. This operation can be undone by performing another update with the old RAR version.
J2CResourceAdapterTask.step1.instruction2=Specify the target RAR file to update the selected resource adapters. You can either upload a RAR file from the local file system or specify an existing RAR file on a server.
J2CResourceAdapterTask.step2.instruction=The following table indicates all resource adapter configurations that will be updated.
J2CResourceAdapterTask.step3.instruction=This is an optional step that allows you to edit any properties that were added by the new version of the resource adapter. Select a resource in the list to edit the new properties. Only resources with new properties are included in the list.
J2CResourceAdapterTask.step4.instruction=This panel displays the summary of actions that will be taken. Review it carefully before continuing. Click the Finish button to begin the update.
JCALifeCycleSelect.description=Use this page to perform J2EE Connector Architecture (JCA) Lifecycle operations on MBeans that correspond to the resources of your previous selection. These MBeans are compatible with Version 6.0.2 or later of the application server. An MBean is listed for each running server that is in the scope of the configured resource. Pause or resume only those MBeans that are in the active state. Pausing an MBean halts outbound communication to the back end. This action also affects all applications that use the resource on the selected server.
JDBCProvider.description=Use this page to edit properties of a Java Database Connectivity (JDBC) provider. The JDBC provider object encapsulates the specific JDBC driver implementation class for access to the specific vendor database of your environment.
JDBCProvider.implementationClassName.description=Specifies the Java(TM) class name of the JDBC driver's datasource implementation. You can specify either a javax.sql.XADataSource or javax.sql.ConnectionPoolDataSource implementation class name.
JDBCProvider.panel.description=Use this page to edit properties of a JDBC provider. The JDBC provider object encapsulates the specific JDBC driver implementation class for access to the specific vendor database of your environment. Learn more about this task in a <a href="/ibm/console/navigatorCmd.do?forwardName=guidedactivity.resource">guided activity</a>. A guided activity provides a list of task steps and more general information about the topic.
RRAProperty.ErrorDetectionModel.description=The error detection model determines how fatal connection and statement errors are detected, including which type of exceptions are raised to the application. The exception mapping setting is not compliant with JDBC 4.0 and above, but is still available for applications coded according to that model.
RRAProperty.ExceptionCheckingModel.description=The application server uses the error mapping facility defined in the Data Store Helper only to identify errors. The application server does not replace exceptions thrown by the JDBC driver with exceptions defined in the error map of the Data Store Helper.
RRAProperty.ExceptionMappingModel.description=The application server uses the error mapping facility defined in the Data Store Helper to detect fatal connection and statement errors. The application server overrides exceptions thrown by the JDBC driver with exceptions defined in the error map of the Data Store Helper. This setting is not compliant with JDBC 4.0 and above, but might be necessary for applications written according to the WebSphere Application Server exception mapping model.
RRAProperty.description=Use this page to set WebSphere(R) Application Server connection management-specific properties that affect a connection pool.
RRAProperty.disableWebSphereConnectionPooling.description=Triggers the application server to disable the WebSphere(R) connection pooling mechanism and use DB2(R) connection pooling in its place. This option applies only to DB2(R).
RRAProperty.enableDatabaseReAuthentication.description=Specifies whether to activate re-authentication of connections. This option requires implementation of the doConnectionSetupPerTransaction method on the data store helper class for the JDBC provider that supports the datasource. If your datasource is DB2, you can re-authenticate connections in a better way by using TrustedConnectionMapping as the mapping-configuration alias instead of enabling database reauthentication.
RRAProperty.enableMultithreadedAccessDetection.description=Specifies whether to detect multithreaded access to a connection and the corresponding statements, result sets, and metaData objects.
RRAProperty.jmsOnePhaseOptimization.description=Specifies whether JMS gets optimized connections from the datasource. This option prevents JDBC applications from getting connections.
RRAProperty.nonTransactionalDataSource.description=Setting the flag to true will cause the Application Server to never enlist the connections from the datasource in global or local transactions. Applications must explicitly call setAutoCommit(false) on the connection if they want to start a local transaction on the connection, and they must commit or rollback the transaction that they started. Note: this property should rarely be set to true, however the Java Persistence API (JPA) requires both JTA and non-JTA datasources.
RRAProperty.preTestConnectionRetryInterval.description=Specifies, after the first pretest operation fails, the frequency for retesting an existing pooled connection.
RRAProperty.preTestConnections.description=Specifies whether the connection manager tests the validity of pooled connections before returning them to applications.
RRAProperty.preTestSQLString.description=Specifies the SQL statement that the application server uses for pretesting either an existing pooled connection or the first requested connection to a database.
RRAProperty.rraPropertyHelperClassname.description=Use these settings to activate and configure the pretest operation for either an existing pooled connection or a new connection to a database.
RRAProperty.validateNewConnection.description=Specifies whether the connection manager tests newly created connections to the database.
RRAProperty.validateNewConnectionRetryCount.description=Specifies, after the first test operation fails, the number of times you want to retest the initial connection to a database.
RRAProperty.validateNewConnectionRetryInterval.description=Specifies, after the first test operation fails, the frequency for retesting the initial connection to a database.
RRAProperty.validateNewConnectionTimeout.description=Specifies the timeout in seconds for testing connections (either new or pooled by the application server) to the database. If the timeout expires before validating then the connection is considered unusable. If retries are configured, the full value of the timeout applies to each retry. A value of 0 indicates the JDBC driver does not impose a timeout on validation attempts. This datasource attribute applies to JDBC 4.0 drivers and above.
RRAProperty.validationByJDBCDriver.description=Select the radio button if you want the JDBC driver to validate the connections. The JDBC provider must support JDBC 4.0 or greater to use this option.
RRAProperty.validationBySQLQuery.description=Select the radio button if your database does not support JDBC 4.0 or greater or you want to validate connections by executing an SQL query on the database.
WAS40ConnectionPool.connectionTimeout.description=Specifies the number of seconds that a connection request remains active, after which WebSphere(R) Application Server issues a ConnectionWaitTimeout exception. The application server acts on the value only if you set the maximum pool size property.
WAS40ConnectionPool.description=Use this page to set properties that can be used by the connection pool manager to potentially maximize the performance of your application. Consider the default values carefully; your application requirements might warrant changing these values.
WAS40ConnectionPool.disableAutoConnectionCleanup.description=Specifies whether the connection pooling software automatically closes connections from the datasource at the end of a transaction. Set the property if you want to maintain and reuse the same connection across multiple transactions.
WAS40ConnectionPool.idleTimeout.description=Specifies the maximum number of seconds that an idle (unallocated) connection can remain in the pool before being removed to free resources.
WAS40ConnectionPool.maximumPoolSize.description=Specifies the maximum number of connections to maintain in the pool. If the maximum number of connections is reached and all connections are in use, additional requests for connections can wait up to the number of seconds that you specify in the connection timeout value.
WAS40ConnectionPool.minimumPoolSize.description=Specifies the minimum number of connections to maintain in the pool.
WAS40ConnectionPool.orphanTimeout.description=Specifies the maximum number of seconds that an application can hold a connection, without using it, before the pool manager returns the connection to the pool.
WAS40ConnectionPool.statementCacheSize.description=Specifies the maximum number of prepared statements to cache per connection for the datasource.
WAS40DataSource.connectionPool.description=Use this page to edit the default values of optional connection pool properties that are used by a WebSphere(R) Application Server Version 4 datasource.
WAS40DataSource.databaseName.description=Specifies the name of the database to which your WebSphere(R) Application Server Version 4 datasource instance must get a connection.
WAS40DataSource.defaultPassword.description=Specifies the password for connecting to the database.
WAS40DataSource.defaultUser.description=Specifies the user ID for connecting to the database.
WAS40DataSource.description=Use this page to configure a WebSphere(R) Application Server Version 4 datasource that uses the previous connection manager architecture. All EJB1.x modules must use the datasource.
datasource.wizard.step1.description=Set the basic configuration values of a datasource for association with your JDBC provider. A datasource supplies the physical connections between the application server and the database.
datasource.wizard.step1.description.note=Requirement: Use the Datasources (WebSphere(R) Application Server V4) console pages if your applications are based on the Enterprise JavaBeans(TM) (EJB) 1.0 specification or the Java(TM) Servlet 2.2 specification.
datasource.wizard.step2.description=Specify a JDBC provider to support the datasource. If you choose to create a new JDBC provider, it will be created at the same scope as the datasource. If you are selecting an existing JDBC provider, only those providers at the current scope are available from the list.
datasource.wizard.step3.description=Set these database-specific properties, which are required by the database vendor JDBC driver to support the connections that are managed through the datasource.
datasource.wizard.step3.userdefined.description=For your user-defined datasource, specify the properties that are required by the database vendor JDBC driver. If the wizard page does not prompt you for all of the necessary properties, configure them later as custom properties in the administrative console. The datastore helper class field generally displays a default value that is appropriate for your driver type. However, for some driver installations, WebSphere(R) Application Server supplies only a generic datastore helper class name. You must type a specific value. Otherwise, set the datastore helper class after you exit the wizard; go to the settings page for the new datasource in the administrative console.
jdbcprovider.database.type.description=Select User-Defined from the drop-down list if you do not see your database type. Consult your database documentation for the JDBC class files and datasource properties that are necessary to access the database. You must type that data in the wizard pages that follow.
jdbcprovider.implementation.type.description=Select Connection Pool datasource if your application does not require connections that support two-phase commit transactions. Select XA datasource if your application requires two-phase commit transactions. Some provider types do not support both transaction types.
jdbcprovider.nativepath.description=Specifies any native libraries (*.dll, *.so) that the JDBC provider might require to function properly on your WebSphere(R) Application Server platform. Type the full file path names.
jdbcprovider.provider.type.description=You can select the Show Deprecated option as an alternative to the specific provider type choices. If you cannot find your provider in the deprecation list, then select User-Defined from the database type list. This selection triggers the wizard to guide you through steps for configuring a user-defined JDBC provider.
jdbcprovider.select.providertype.description=The selected JDBC provider is missing a provider type. Without a provider type, the system will not be able to create a datasource.
jdbcprovider.step2.driver.version.description=WebSphere supports multiple versions of the selected JDBC driver. Each version of the JDBC driver has a unique class path. Select the appropriate version of the JDBC driver so the class path is populated correctly.
jdbcprovider.variablepath.Help.description=Specifies the full path name of the files {0}. Do not use trailing slash file separators.
jdbcprovider.wizard.classpath.userdefined.description=A list of paths or JAR file names that, together, form the location for the resource provider classes.
jdbcprovider.wizard.step1.description=Set the basic configuration values of a JDBC provider, which encapsulates the specific vendor JDBC driver implementation classes that are required to access the database. The wizard fills in the name and the description fields, but you can type different values.
jdbcprovider.wizard.step2.description=Set the class path for the JDBC driver class files, which WebSphere(R) Application Server uses to define your JDBC provider. This wizard page displays a default list of jars and allows you to set the environment variables that define the directory locations of the files. Use complete directory paths when you type the JDBC driver file locations. For example: C:\\SQLLIB\\java on Windows(R) or /home/db2inst1/sqllib/java on Linux(TM). 
jdbcprovider.wizard.step2.second.description=Entries are separated by using the ENTER key and must not contain path separator characters (such as ';' or ':'). If a value is specified for you, you may click Next to accept the value.
jdbcprovider.wizard.step2.userdefined.description=To configure your user-defined JDBC provider, specify the full path names of the JDBC driver class files that you installed. Type the file path names as the values of the WebSphere(R) variables that are displayed in the field. Do not use path separator characters (such as ';' or ': '). Use Enter to separate your class path entries.
