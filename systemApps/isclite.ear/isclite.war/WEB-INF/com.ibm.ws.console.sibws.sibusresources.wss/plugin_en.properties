AddTimestamp.dialect.displayName=Dialect
AddTimestamp.displayName=Add time stamp
AddTimestamp.enabled.displayName=Enabled
AddTimestamp.expires.displayName=Expires
AddTimestamp.keyword.displayName=Keyword
AddTimestamp.properties.displayName=Properties
Caller.displayName=Caller
Caller.localName.displayName=Local name
Caller.name.displayName=Name
Caller.part.displayName=Part
Caller.properties.displayName=Properties
Caller.trustMethod.displayName=Trust method
Caller.uri.displayName=URI
ClientServiceConfig.actorURI.displayName=Actor URI
ClientServiceConfig.properties.displayName=Properties
Confidentiality.displayName=Confidentiality
Confidentiality.messageParts.displayName=Message parts
Confidentiality.name.displayName=Name
Confidentiality.nonce.displayName=Nonce
Confidentiality.order.displayName=Order
Confidentiality.timestamp.displayName=Time stamp
Draft13Actor.actor.displayName=Actor
Draft13Actor.displayName=Actor
Draft13AddCreatedTimestamp.displayName=Add created time stamp
Draft13AddReceivedTimestamp.displayName=Add received time stamp
Draft13AddTimestamp.enabled.displayName=Enabled
Draft13AddTimestamp.expires.displayName=Expires
Draft13Confidentiality.BodyContent.displayName=Body content
Draft13Confidentiality.UsernameToken.displayName=Username token
Draft13Confidentiality.displayName=Confidentiality
Draft13IDAssertion.SignatureMethod.displayName=Signature method
Draft13IDAssertion.TrustMode.displayName=Trust mode
Draft13IDAssertion.displayName=ID assertion
Draft13InboundLoginConfig.BasicAuthNonceSettings.displayName=Basic authentication Nonce settings
Draft13InboundLoginConfig.BasicAuthentication.displayName=Basic authentication
Draft13InboundLoginConfig.CustomAuthMethods.displayName=Custom authentication methods
Draft13InboundLoginConfig.CustomAuthMethods.name.displayName=Name
Draft13InboundLoginConfig.CustomAuthMethods.standardNameError={0} is a standard authentication method. To use {0} please select the appropriate checkbox under the Login configuration general properties.
Draft13InboundLoginConfig.IDAssertion.displayName=ID assertion
Draft13InboundLoginConfig.LTPA.displayName=LTPA
Draft13InboundLoginConfig.NonceTimeStampRequired.displayName=Nonce time stamp required
Draft13InboundLoginConfig.Signature.displayName=Signature
Draft13InboundLoginConfig.UseNonce.displayName=Use Nonce
Draft13InboundLoginConfig.displayName=Login configuration
Draft13Integrity.Body.displayName=Body
Draft13Integrity.SecurityToken.displayName=Security token
Draft13Integrity.Timestamp.displayName=Time stamp
Draft13Integrity.displayName=Integrity
Draft13OutboundLoginConfig.AuthenticationMethod.displayName=Authentication method
Draft13OutboundLoginConfig.CustomAuthMethod.displayName=Custom authentication method
Draft13OutboundLoginConfig.displayName=Login configuration
Draft13OutboundLoginConfig.error.AuthMethodSelection=A custom authentication method has not been provided
Draft13RequiredConfidentiality.displayName=Required confidentiality
Draft13RequiredIntegrity.displayName=Required integrity
Integrity.displayName=Integrity
Integrity.messageParts.displayName=Message parts
Integrity.name.displayName=Name
Integrity.nonce.displayName=Nonce
Integrity.order.displayName=Order
Integrity.timestamp.displayName=Time stamp
MessageParts.Dialect.displayName=Dialect
MessageParts.displayName=Message Parts
MessageParts.keyword.displayName=Keyword
MessageParts.name.displayName=Name
Nonce.Dialect.displayName=Dialect
Nonce.displayName=Nonce
Nonce.keyword.displayName=Keyword
Nonce.name.displayName=Name
RequestGeneratorActor.actor.displayName=Actor
RequestGeneratorActor.displayName=Actor
RequiredConfidentiality.displayName=Required confidentiality
RequiredConfidentiality.messageParts.displayName=Message parts
RequiredConfidentiality.name.displayName=Name
RequiredConfidentiality.nonce.displayName=Nonce
RequiredConfidentiality.timestamp.displayName=Time stamp
RequiredConfidentiality.usage.displayName=Usage
RequiredIntegrity.displayName=Required integrity
RequiredIntegrity.messageParts.displayName=Message parts
RequiredIntegrity.name.displayName=Name
RequiredIntegrity.nonce.displayName=Nonce
RequiredIntegrity.timestamp.displayName=Time stamp
RequiredIntegrity.usage.displayName=Usage
RequiredSecurityToken.displayName=Required security token
RequiredSecurityToken.localName.displayName=Local name
RequiredSecurityToken.name.displayName=Name
RequiredSecurityToken.uri.displayName=URI
RequiredSecurityToken.usage.displayName=Usage
ResponseGeneratorActor.actor.displayName=Actor
ResponseGeneratorActor.displayName=Actor
SIBWSSecurity.deleteError.inbound=inbound
SIBWSSecurity.deleteError.outbound=outbound
SIBWSSecurity.deleteError.referencedByPort={0} could not be deleted because it is referenced by {1} port: {2} on {1} service: {3}
SIBWSSecurityInboundConfig.displayName=Inbound WS-Security configuration
SIBWSSecurityInboundConfig.name.displayName=Name
SIBWSSecurityInboundConfig.requestConsumerConfig.displayName=Request consumer
SIBWSSecurityInboundConfig.responseGeneratorConfig.displayName=Response generator
SIBWSSecurityInboundConfigDraft13.requestReceiverConfig.displayName=Request receiver
SIBWSSecurityInboundConfigDraft13.responseSenderConfig.displayName=Response sender
SIBWSSecurityOutboundConfig.displayName=Outbound WS-Security configuration
SIBWSSecurityOutboundConfig.name.displayName=Name
SIBWSSecurityOutboundConfig.requestGeneratorConfig.displayName=Request generator
SIBWSSecurityOutboundConfig.responseConsumerConfig.displayName=Response consumer
SIBWSSecurityOutboundConfigDraft13.requestSenderConfig.displayName=Request sender
SIBWSSecurityOutboundConfigDraft13.responseReceiverConfig.displayName=Response receiver
SIBWSSecurityRequestConsumerBindingConfig.displayName=Request consumer binding
SIBWSSecurityRequestConsumerBindingConfig.name.displayName=Name
SIBWSSecurityRequestGeneratorBindingConfig.displayName=Request generator binding.
SIBWSSecurityRequestGeneratorBindingConfig.name.displayName=Name
SIBWSSecurityResponseConsumerBindingConfig.displayName=Response consumer binding
SIBWSSecurityResponseConsumerBindingConfig.name.displayName=Name
SIBWSSecurityResponseGeneratorBindingConfig.displayName=Response generator binding configuration
SIBWSSecurityResponseGeneratorBindingConfig.name.displayName=Name
SIBWSSecurityServiceBindings.bindingType.displayName=Binding Type
SIBWSSecurityServiceBindings.bindingType.label.reqcon=Request consumer
SIBWSSecurityServiceBindings.bindingType.label.reqgen=Request generator
SIBWSSecurityServiceBindings.bindingType.label.rescon=Response consumer
SIBWSSecurityServiceBindings.bindingType.label.resgen=Response generator
SIBWSSecurityServiceBindings.bindingType.reqcon.name.displayName=Name
SIBWSSecurityServiceBindings.bindingType.reqgen.name.displayName=Name
SIBWSSecurityServiceBindings.bindingType.reqrec.name.displayName=Request receiver
SIBWSSecurityServiceBindings.bindingType.reqsen.name.displayName=Request sender
SIBWSSecurityServiceBindings.bindingType.rescon.name.displayName=Name
SIBWSSecurityServiceBindings.bindingType.resgen.name.displayName=Name
SIBWSSecurityServiceBindings.bindingType.resrec.name.displayName=Response receiver
SIBWSSecurityServiceBindings.bindingType.ressen.name.displayName=Response sender
SIBWSSecurityServiceBindings.create.new=New WS-Security binding
SIBWSSecurityServiceBindings.displayName=WS-Security bindings
SIBWSSecurityServiceBindings.name.displayName=Name
SIBWSSecurityServiceBindings.new.step0=Select security version
SIBWSSecurityServiceBindings.new.step1=Specify binding type
SIBWSSecurityServiceBindings.new.step2.reqcon=Specify WS-Security binding.
SIBWSSecurityServiceBindings.new.step2.reqgen=Specify WS-Security binding.
SIBWSSecurityServiceBindings.new.step2.rescon=Specify WS-Security binding.
SIBWSSecurityServiceBindings.new.step2.resgen=Specify WS-Security binding.
SIBWSSecurityServiceBindings.new.step3=Summary
SIBWSSecurityServiceConfigs.WSSecVersion.displayName=WS-Security version
SIBWSSecurityServiceConfigs.configType.displayName=Service type
SIBWSSecurityServiceConfigs.configType.inbound.name.displayName=Name
SIBWSSecurityServiceConfigs.configType.label.inbound=Inbound
SIBWSSecurityServiceConfigs.configType.label.outbound=Outbound
SIBWSSecurityServiceConfigs.configType.outbound.name.displayName=Name
SIBWSSecurityServiceConfigs.create.new=New WS-Security configuration
SIBWSSecurityServiceConfigs.displayName=WS-Security configurations
SIBWSSecurityServiceConfigs.invalidActorURI=The actor URI "{0}" is invalid.
SIBWSSecurityServiceConfigs.name.displayName=Name
SIBWSSecurityServiceConfigs.new.step0=Select security version
SIBWSSecurityServiceConfigs.new.step1=Specify service type
SIBWSSecurityServiceConfigs.new.step2.inbound=Specify WS-Security configuration type.
SIBWSSecurityServiceConfigs.new.step2.outbound=Specify WS-Security configuration type.
SIBWSSecurityServiceConfigs.new.step3=Summary
SIBWSSecurityServiceConfigs.nonAbsoluteActorURI=The actor URI must be in absolute format. The relative URI format is not supported.
SIBWSSecurityServiceConfigs.version.displayName=Security version
SIBWSSecurityVersion.Draft13.brackets.displayName=(Draft 13)
SIBWSSecurityVersion.Draft13.displayName=Draft 13
SIBWSSecurityVersion.v1.brackets.displayName=(1.0)
SIBWSSecurityVersion.v1.displayName=1.0
SecurityToken.displayName=Security Token
SecurityToken.localName.displayName=Local Name
SecurityToken.name.displayName=Name
SecurityToken.uri.displayName=URI
ServerServiceConfig.actorURI.displayName=Actor URI
ServerServiceConfig.properties.displayName=Properties
Timestamp.Dialect.displayName=Dialect
Timestamp.displayName=Time stamp
Timestamp.expires.displayName=Expires
Timestamp.keyword.displayName=Keyword
Timestamp.name.displayName=Name
TrustMethod.displayName=Trust Method
TrustMethod.localName.displayName=Local Name
TrustMethod.name.displayName=Name
TrustMethod.part.displayName=Part
TrustMethod.properties.displayName=Properties
TrustMethod.trustAny.displayName=Trust any
TrustMethod.uri.displayName=URI
UsageType.Ignored=Ignored
UsageType.Observed=Observed
UsageType.Optional=Optional
UsageType.Rejected=Rejected
UsageType.Required=Required
error.invalid.keyword=The value of Keyword must be one of {0}
error.invalid.order=A value of {0} has already been set by another integrity or confidentiality constraint.
error.invalid.order.range=The value of Order must be an integer between {0} and {1}
error.nonunique.reqint.reqcon.name=The name is already used by an existing Required Integrity or Required Confidentiality object
error.sibwsinboundserviceconfig.not.found=The inbound service configuration could not be found
error.sibwsoutboundserviceconfig.not.found=The outbound service configuration could not be found
error.sibwssecurityrequestconsumerbindingconfig.not.found=The request consumer binding configuration could not be found
error.sibwssecurityrequestgeneratorbindingconfig.not.found=The request generator binding configuration could not be found
error.sibwssecurityresponseconsumerbindingconfig.not.found=The response consumer binding configuration could not be found
error.sibwssecurityresponsegeneratorbindingconfig.not.found=The response generator binding configuration could not be found
warning.duplicate.securitybinding.name=A WS-Security binding configuration with this name already exists
warning.duplicate.securityconfig.name=A WS-Security configuration with this name already exists


AddTimestamp.description=When add time stamp is specified for a consumer, a time stamp is added indicating when the message was consumed. For a generator, a time stamp is added indicating when the message was generated.
AddTimestamp.dialect.description=The expression dialect to use.
AddTimestamp.enabled.description=If selected, a time stamp will be added to the message.
AddTimestamp.expires.description=The expiration time of the time stamp, defined as an xsd:Duration type.
AddTimestamp.keyword.description=The message part to attach the time stamp element to, specified in a way defined by the chosen dialect.
AddTimestamp.properties.description=Properties associated with the added time stamp.
Caller.description=Specifies the security token, signed part or encrypted part used for authentication. If a signed or encrypted part is used, the value of the part attribute must be the name of a defined required integrity or required confidentiality constraint. If a stand-alone security token is used for authentication, then the URI and local name attributes must define the type of security token used for authentication.
Caller.localName.description=Specifies the local name of the security token to be used for authentication.
Caller.name.description=The name of the caller.
Caller.part.description=Specifies the name of the required integrity or required confidentiality part within the message to be used for authentication.
Caller.properties.description=Properties associated with the caller.
Caller.trustMethod.description=The trust method associated with this caller if IDAssertion is in use for verifying an asserted ID from an intermediary.
Caller.uri.description=Specifies the namespace URI of the security token to be used for authentication.
ClientServiceConfig.actorURI.description=WS-Security headers within the consumed response message will only be processed if they have the specified actor URI.
ClientServiceConfig.properties.description=General properties for the outbound WS-Security configuration.
Confidentiality.description=Specifies the confidentiality constraints applied to generated messages. This includes specifying which message parts within the generated message must be encrypted, and the message parts to attach encrypted Nonce and time stamp elements to.
Confidentiality.messageParts.description=Specifies parts of the message affected by this confidentiality constraint.
Confidentiality.name.description=The name of the confidentiality constraint.
Confidentiality.nonce.description=Specifies the encrypted Nonce elements which must be inserted into the generated message, and what parts of the message they must be attached to. Nonce is a randomly generated value.
Confidentiality.order.description=Specifies the processing order of this confidentiality element.
Confidentiality.timestamp.description=Specifies the encrypted time stamp elements which must be inserted in the generated message, and what parts of the message they must be attached to.
Draft13Actor.actor.description=Defines the Actor URI to be included in the WS-Security headers of a generated message.
Draft13Actor.description=Defines the Actor URI to be included in the WS-Security headers of a generated message.
Draft13AddCreatedTimestamp.description=Specifies whether a time stamp will be added to any sent message. The time stamp may also contain an expires value.
Draft13AddReceivedTimestamp.description=Specifies whether a time stamp will be added to any received message.
Draft13AddTimestamp.enabled.description=When selected, a time stamp will be added to the message.
Draft13AddTimestamp.expires.description=The expiration time of the time stamp, defined as an xsd:Duration type.
Draft13Confidentiality.BodyContent.description=Specifies that the body of the message must be encrypted.
Draft13Confidentiality.UsernameToken.description=Specifies that the username token header must be encrypted.
Draft13Confidentiality.description=Specifies the confidentiality constraints applied to sent messages. Indicates which parts of the message will be encrypted.
Draft13IDAssertion.SignatureMethod.description=Specifies the method by which the identity will be asserted.
Draft13IDAssertion.TrustMode.description=Specifies the method by which the identity of the trusted party will be provided.
Draft13IDAssertion.description=Specifies the signature method and trust mode to use when ID Assertion is set as an authentication method.
Draft13InboundLoginConfig.BasicAuthNonceSettings.description=Specifies Nonce settings for when Basic Authentication is used. Nonce is a randomly generated value.
Draft13InboundLoginConfig.BasicAuthentication.description=Specifies that a username and password is used as an authentication method.
Draft13InboundLoginConfig.CustomAuthMethods.description=Specifies custom authentication methods this service will accept.
Draft13InboundLoginConfig.CustomAuthMethods.name.description=The name of the custom authentication method to accept.
Draft13InboundLoginConfig.IDAssertion.description=Specifies that ID Assertion is used as an authentication method. An ID Assertion configuration must also be set.
Draft13InboundLoginConfig.LTPA.description=Specifies that Lightweight Third Party Authentication is used as an authentication method.
Draft13InboundLoginConfig.NonceTimeStampRequired.description=Specifies that the username token should contain a Nonce time stamp element. Nonce is a randomly generated value.
Draft13InboundLoginConfig.Signature.description=Specifies that digital signature is used as an authentication method.
Draft13InboundLoginConfig.UseNonce.description=Specifies that the username token should contain a Nonce element. Nonce is a randomly generated value.
Draft13InboundLoginConfig.description=Specifies the authentication methods this service supports. Custom authentication methods can also be defined.
Draft13Integrity.Body.description=Specifies that the body of the message must be digitally signed.
Draft13Integrity.SecurityToken.description=Specifies that the security token header must be digitally signed.
Draft13Integrity.Timestamp.description=Specifies that the time stamp header must be digitally signed.
Draft13Integrity.description=Specifies the integrity constraints applied to sent messages. Indicates which parts of the message will be digitally signed.
Draft13OutboundLoginConfig.AuthenticationMethod.description=Specifies the predefined authentication method to use.
Draft13OutboundLoginConfig.CustomAuthMethod.description=Specifies the custom authentication method to use. If a custom authentication method is specified, no predefined method can be used.
Draft13OutboundLoginConfig.description=Specifies the authentication method to use in the request. May be a predefined or custom authentication method.
Draft13RequiredConfidentiality.description=Specifies the confidentiality constraints applied to sent messages. Indicates which parts of the message will be encrypted.
Draft13RequiredIntegrity.description=Specifies the integrity constraints received messages must meet. Indicates which parts of the message must be digitally signed.
Integrity.description=Specifies the integrity constraints applied to generated messages. This includes specifying which message parts within the generated message must be digitally signed, and the message parts to attach digitally signed Nonce and time stamp elements to.
Integrity.messageParts.description=Specifies parts of the message affected by this integrity constraint.
Integrity.name.description=The name of the integrity constraint.
Integrity.nonce.description=Specifies the digitally signed Nonce elements which must be inserted into the generated message, and what parts of the message they must be attached to. Nonce is a randomly generated value.
Integrity.order.description=Specifies the processing order of this integrity constraint.
Integrity.timestamp.description=Specifies the digitally signed time stamp elements which must be inserted in the generated message, and what parts of the message they must be attached to.
MessageParts.Dialect.description=The expression dialect to use.
MessageParts.description=Identifies a specific message part according to the specified dialect and keyword.
MessageParts.keyword.description=Identifies the message part in a way defined by the chosen dialect.
MessageParts.name.description=The name of the message part definition.
Nonce.Dialect.description=The expression dialect to use.
Nonce.description=Attaches a Nonce element to the message part specified by the dialect and keyword attributes. Nonce is a randomly generated value.
Nonce.keyword.description=The message part to attach the Nonce element to, specified in a way defined by the chosen dialect.
Nonce.name.description=The name of the Nonce element.
RequestGeneratorActor.actor.description=Defines the Actor URI to be included in WS-Security headers of generated request.
RequestGeneratorActor.description=Defines the Actor URI to be included in the WS-Security headers of a generated message.
RequiredConfidentiality.description=Specifies the confidentiality constraints consumed messages must meet. This includes specifying which message parts within the incoming message must be encrypted, and the message parts to which attached encrypted Nonce and time stamp elements are expected.
RequiredConfidentiality.messageParts.description=Specifies parts of the message affected by this required confidentiality constraint.
RequiredConfidentiality.name.description=The name of the required confidentiality element.
RequiredConfidentiality.nonce.description=Specifies the encrypted Nonce elements which must be present in the consumed message, and what parts of the message they must be attached to. Nonce is a randomly generated value.
RequiredConfidentiality.timestamp.description=Specifies the encrypted time stamp elements which must be present in the consumed message, and what parts of the message they must be attached to.
RequiredConfidentiality.usage.description=Indicates the assertion of the required confidentiality constraint.
RequiredIntegrity.description=Specifies the integrity constraints consumed messages must meet. This includes specifying which message parts within the incoming message must be digitally signed, and the message parts to which attached digitally signed Nonce and time stamp elements are expected.
RequiredIntegrity.messageParts.description=Specifies parts of the message affected by this required integrity constraint.
RequiredIntegrity.name.description=The name of the required integrity element.
RequiredIntegrity.nonce.description=Specifies the digitally signed Nonce elements which must be present in the consumed message, and what parts of the message they must be attached to. Nonce is a randomly generated value.
RequiredIntegrity.timestamp.description=Specifies the digitally signed time stamp elements which must be present in the consumed message, and what parts of the message they must be attached to.
RequiredIntegrity.usage.description=Indicates the assertion of the required integrity constraint.
RequiredSecurityToken.description=Specifies accepted stand-alone security tokens within a consumed message. Stand-alone security tokens are those not already used for signature or encryption. Defining a required security token means that messages containing a token of that type will be processed according to the usage assertion. The security token will not be used for authentication unless it is also specified within a caller.
RequiredSecurityToken.localName.description=Specifies the local name of the security token.
RequiredSecurityToken.name.description=The name of the security token.
RequiredSecurityToken.uri.description=Specifies the namespace URI of the security token.
RequiredSecurityToken.usage.description=Indicates the assertion of the required security token constraint.
ResponseGeneratorActor.actor.description=Defines the Actor URI to be included in WS-Security headers of generated response.
ResponseGeneratorActor.description=Defines the Actor URI to be included in WS-Security headers of generated response.
SIBWSSecurityInboundConfig.description=WS-Security configuration for an inbound request. This defines WS-Security requirements for the request consumed from the client and the response generated. The objects created may be applied to one or more inbound ports.
SIBWSSecurityInboundConfig.name.description=The name of the inbound WS-Security configuration.
SIBWSSecurityOutboundConfig.description=WS-Security configuration for an outbound request. This defines WS-Security requirements for the request generated and response consumed from the target. The objects created may be applied to one or more outbound ports.
SIBWSSecurityOutboundConfig.name.description=The name of the outbound WS-Security configuration.
SIBWSSecurityRequestConsumerBindingConfig.description=WS-Security binding for the consumption of inbound requests from the caller.
SIBWSSecurityRequestConsumerBindingConfig.name.description=The name of the binding.
SIBWSSecurityRequestGeneratorBindingConfig.description=WS-Security binding for the generation of outbound request to a target.
SIBWSSecurityRequestGeneratorBindingConfig.name.description=The name of the binding.
SIBWSSecurityResponseConsumerBindingConfig.description=WS-Security binding for consumption of responses from outbound target.
SIBWSSecurityResponseConsumerBindingConfig.name.description=The name of the binding.
SIBWSSecurityResponseGeneratorBindingConfig.description=WS-Security binding for generation of responses to caller.
SIBWSSecurityResponseGeneratorBindingConfig.name.description=The name of the binding.
SIBWSSecurityServiceBindings.bindingType.description=The type of binding. This is one of request consumer, request generator, response consumer and response generator.
SIBWSSecurityServiceBindings.bindingType.reqcon.name.description=Name of the request consumer binding.
SIBWSSecurityServiceBindings.bindingType.reqgen.name.description=Name of the binding.
SIBWSSecurityServiceBindings.bindingType.reqrec.name.description=Draft 13 WS-Security binding for the consumption of inbound requests from the caller.
SIBWSSecurityServiceBindings.bindingType.reqsen.name.description=Draft 13 WS-Security binding for the generation of requests to an outbound target.
SIBWSSecurityServiceBindings.bindingType.rescon.name.description=Name of the response consumer binding.
SIBWSSecurityServiceBindings.bindingType.resgen.name.description=Name of the response generator binding.
SIBWSSecurityServiceBindings.bindingType.resrec.name.description=Draft 13 WS-Security binding for consumption of responses from a target.
SIBWSSecurityServiceBindings.bindingType.ressen.name.description=Draft 13 WS-Security binding for generation of responses to a caller.
SIBWSSecurityServiceBindings.create.new.description=Use this wizard to configure a new WS-Security binding.
SIBWSSecurityServiceBindings.description=WS-Security bindings for consumption and generation of requests and responses.
SIBWSSecurityServiceBindings.draft13.bindingType.description=The type of binding. This is one of request receiver, request sender, response receiver and response sender.
SIBWSSecurityServiceBindings.name.description=The name of the WS-Security binding.
SIBWSSecurityServiceConfigs.configType.description=The type of service the WS-Security configuration applies to.
SIBWSSecurityServiceConfigs.configType.inbound.name.description=Name of the inbound WS-Security configuration.
SIBWSSecurityServiceConfigs.configType.outbound.name.description=Name of the outbound WS-Security configuration.
SIBWSSecurityServiceConfigs.create.new.description=Use this wizard to create a new inbound or outbound WS-Security configuration.
SIBWSSecurityServiceConfigs.description=WS-Security configurations for inbound and outbound services.
SIBWSSecurityServiceConfigs.name.description=The name of the WS-Security configuration.
SIBWSSecurityServiceConfigs.version.description=Identifies the version of the WS-Security specification this configuration uses.
SecurityToken.description=Specifies stand-alone security tokens to insert into the generated message. Stand-alone security tokens are those not already used for signature or encryption. Standard and custom security tokens may be defined by URI and local name.
SecurityToken.localName.description=Specifies the local name of the security token to insert.
SecurityToken.name.description=The name of the security token
SecurityToken.uri.description=Specifies the namespace URI of the security token to insert.
ServerServiceConfig.actorURI.description=WS-Security headers within the consumed request message will only be processed if they have the specified Actor URI.
ServerServiceConfig.properties.description=General properties for the inbound WS-Security configuration.
Timestamp.Dialect.description=The expression dialect to use.
Timestamp.description=Attaches a time stamp element to the message part specified by the dialect and keyword attributes.
Timestamp.expires.description=The expiration time of the time stamp, defined as an xsd:Duration type.
Timestamp.keyword.description=The message part to attach the time stamp element to, specified in a way defined by the chosen dialect.
Timestamp.name.description=The name of the time stamp element.
TrustMethod.description=Defines a trust method used to validate the identity of a trusted intermediary asserting an ID on a downstream message. When a trust method is configured, the security token defined by the caller is expected to contain an identity to be asserted.
TrustMethod.localName.description=Specifies the local name of the security token to use to validate the intermediary.
TrustMethod.name.description=The name of the trust method.
TrustMethod.part.description=Specifies the name of the required integrity or required confidentiality part within the message to be used to validate the intermediary.
TrustMethod.properties.description=Properties associated with the trust method.
TrustMethod.trustAny.description=If trust any is selected then all upstream intermediaries will be trusted by this consumer. This should only be selected if you are certain that all upstream intermediaries are trusted. Selecting trust any will automatically override all other attributes of this trust method.
TrustMethod.uri.description=Specifies the URI of the security token to use to validate the intermediary.
