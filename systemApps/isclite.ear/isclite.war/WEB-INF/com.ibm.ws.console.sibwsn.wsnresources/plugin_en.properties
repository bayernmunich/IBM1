ValidationForm.NameNotUniqueError="{0}" already exists
WS-Notification.navigator.category=WS-Notification
WSNAdminSub.topicNamespace.createNew=Specify a new topic namespace
WSNAdminSub.topicNamespace.select=Select a topic namespace defined on this WS-Notification service or specify a new value
WSNAdminSub.topicNamespace.selectDescription=Configure a topic namespace for this administered subscriber
WSNAdminSub.topicNamespace.useExisting=Select a topic namespace configured on this WS-Notification service
WSNAdministeredSubscriber.dialect.CONCRETE=Concrete
WSNAdministeredSubscriber.dialect.FULL=Full
WSNAdministeredSubscriber.dialect.SIMPLE=Simple
WSNAdministeredSubscriber.dialect.displayName=Dialect
WSNAdministeredSubscriber.displayName=Administered subscribers
WSNAdministeredSubscriber.endpoint.displayName=External web service endpoint
WSNAdministeredSubscriber.invalidTopic.ERROR=<span class='validation-error'><img alt="Error" align="baseline" height="16" width="16" src="/ibm/console/images/Error.gif"/>The topic supplied is not compatible with the selected dialect. When using the SIMPLE dialect only root topics may be specified. When using the CONCRETE dialect wildcards may not be used.</span><br>
WSNAdministeredSubscriber.remoteSubscriptionTimeout.displayName=Remote subscription timeout
WSNAdministeredSubscriber.topic.displayName=Topic
WSNAdministeredSubscriber.topicNamespace.displayName=Topic namespace
WSNAdministeredSubscriberRT.producerEPR.displayName=Producer EPR
WSNAdministeredSubscriberRT.state.displayName=State
WSNAdministeredSubscriberRT.subscriptionReference.displayName=Subscription reference
WSNAdministeredSubscriberRT.topic.displayName=Topic
WSNInstanceDocument.description.displayName=Description
WSNInstanceDocument.displayName=Topic namespace document
WSNInstanceDocument.filecontents.displayName=Document contents
WSNInstanceDocument.filename.displayName=Document name
WSNInstanceDocument.topicnamespace.displayName=Associated permanent topic namespace
WSNInstanceDocument.url.displayName=URL of topic namespace document
WSNPublisherRegistrations.creationTime.displayName=Creation time
WSNPublisherRegistrations.demandBased.displayName=Demand based
WSNPublisherRegistrations.displayName=Publisher registrations
WSNPublisherRegistrations.publisherID.displayName=Publisher ID
WSNPublisherRegistrations.publisherRefData.displayName=Producer EPR
WSNPublisherRegistrations.terminationTime.displayName=Termination time
WSNPublisherRegistrations.topic.displayName=Topic
WSNPullPoints.creationTime.displayName=Creation time
WSNPullPoints.displayName=Pull points
WSNPullPoints.pullPointID.displayName=Pull point id
WSNPullPoints.subscriptionID.displayName=Subscription id
WSNPullPoints.terminationTime.displayName=Termination time
WSNService.JAXRPCHandlerList.displayName=JAX-RPC handler list
WSNService.JAXWSHandlerList.displayName=JAX-WS handler list
WSNService.NotificationBrokerServiceLink.displayName=Notification broker inbound service settings
WSNService.OutboundRequestPolicySets.displayName=Outbound request policy sets and bindings
WSNService.PubRegManagerServiceLink.displayName=Publisher registration manager inbound service settings
WSNService.SIBus.displayName=Service integration bus name
WSNService.SubscriptionManagerServiceLink.displayName=Subscription manager inbound service settings
WSNService.bus.existing.displayName=Use an existing service integration bus
WSNService.bus.new.displayName=Create a new service integration bus called:
WSNService.button.new=New
WSNService.deleteConfirmation.displayName=Delete service integration bus topic spaces where possible as well?
WSNService.deletionList.displayName=The following WS-Notification services have been selected for deletion.
WSNService.description.displayName=Description
WSNService.displayName=WS-Notification services
WSNService.dynamicTopicSpace.displayName=Dynamic topic space name
WSNService.enableDynamicTopicNamespaces.displayName=Enable dynamic topic namespaces?
WSNService.endpoint.select.displayName=Select a bus member
WSNService.epl.displayName=Endpoint listener
WSNService.epl.existing.displayName=Use an existing endpoint listener
WSNService.epl.new.displayName=Create a new endpoint listener using:
WSNService.fixedTopicSet.displayName=Fixed topic set
WSNService.instancesLink.displayName=WS-Notification service points
WSNService.name.displayName=Name
WSNService.nameInUse.error=A WS-Notification service called {0} already exists on service integration bus {1}.
WSNService.navigator.displayName=Services
WSNService.queryWSDL.displayName=Query WSDL
WSNService.requestBinding.displayName=Outbound security request binding
WSNService.requiresRegistration.displayName=Requires registration
WSNService.responseBinding.displayName=Outbound security response binding
WSNService.securityConfig.displayName=Outbound security configuration
WSNService.topicDialects.displayName=Topic expression dialects
WSNService.topicSpacesLink.displayName=Permanent topic namespaces
WSNService.type.displayName=Type
WSNService.typeDependantAttrs.displayName=WSN Service attributes
WSNService.wizard.blankMessage=
WSNService.wizard.defaultBusSuffix=_Bus
WSNService.wizard.defaultInstanceSuffix=_Instance
WSNService.wizard.defaultTopicSpaceSuffix=_TopicNamespace
WSNService.wizard.step1=Name and describe the WS-Notification service
WSNService.wizard.step1.error.NoName=Please supply a name for the WS-Notification service
WSNService.wizard.step1.error.WhiteSpace=White spaces are not permitted in WS-Notification service names.
WSNService.wizard.step1.instruction=Supply a name and description for the WS-Notification service
WSNService.wizard.step1a=Select WS-Notification service type
WSNService.wizard.step1a.instruction=Please select the type of WS-Notification service to create
WSNService.wizard.step1a.v61=<B>Version 6.1</B><BR><BR>Select this type of service to expose the web service using the same technology provided in WebSphere Application Server version 6.1, including the ability to apply JAX-RPC handlers to the service.
WSNService.wizard.step1a.v70=<B>Version 7.0</B><BR><BR>Select this type of service if you wish to use policy set to compose your new WS-Notification service with other web service standards, such as WS-ReliableMessaging.<BR><BR> Additionally select this type of service if you wish to apply JAX-WS handlers to your new WS-Notification service.<BR><BR> This is the recommended type of service for new deployments.
WSNService.wizard.step2=Select a service integration bus
WSNService.wizard.step2.error.NameInUse=A WS-Notification service called "{0}" already exists on service integration bus "{1}"
WSNService.wizard.step2.error.NoEndpoints=There are no bus members available for use on service integration bus "{0}"
WSNService.wizard.step2.instruction=Select an existing (or provide a name for a new) service integration bus
WSNService.wizard.step3=Select bus member
WSNService.wizard.step3.instruction=Select an existing member of the selected bus to associate with a service point
WSNService.wizard.step4=Select the service point endpoint listener
WSNService.wizard.step4.SOAP.instruction=Select the SOAP version used by the service point
WSNService.wizard.step4.httpProxy.instruction=Service point accessed via HTTP proxy
WSNService.wizard.step4.httpProxy.label=HTTP proxy
WSNService.wizard.step4.instruction=Select an existing endpoint listener that has been previously configured on the selected endpoint or create a new one
WSNService.wizard.step4.transportSettings.instruction=Select the transport settings for the new service point.
WSNService.wizard.step4.transportSettings.label=<B>SOAP over HTTP settings</B>
WSNService.wizard.step5=Configure a permanent topic namespace
WSNService.wizard.step5.createTopicNamespace.displayName=Create a permanent topic namespace?
WSNService.wizard.step5.error.NoNamespace=Please supply a namespace for the permanent topic namespace
WSNService.wizard.step5.instruction=Supply a namespace and select a service integration bus topic space to associate with this permanent topic namespace
WSNService.wizard.title=New WS-Notification service
WSNServicePoint.JAXWSHandlerListSettings.displayName=<B>JAX-WS handler list settings</B>
WSNServicePoint.NotificationBrokerPortLink.displayName=Notification broker inbound port settings
WSNServicePoint.PolicySetConfiguration.displayName=Policy set configuration
WSNServicePoint.PubRegManagerPortLink.displayName=Publisher registration manager inbound port settings
WSNServicePoint.PublishWSDLToZip.displayName=Publish WSDL files to zip
WSNServicePoint.ServicePointApplication.displayName=Service point application
WSNServicePoint.SubscriptionManagerPortLink.displayName=Subscription manager instance inbound port settings
WSNServicePoint.appNotFound.error=An application with name "{0}" could not be found.
WSNServicePoint.binding.SOAPHTTP=SOAP/HTTP
WSNServicePoint.binding.SOAPJMS=SOAP/JMS
WSNServicePoint.binding.displayName=Binding type
WSNServicePoint.button.copy=Copy
WSNServicePoint.button.new=New
WSNServicePoint.channel.CHANNEL1=Channel 1
WSNServicePoint.channel.CHANNEL2=Channel 2
WSNServicePoint.channel.displayName=Channel
WSNServicePoint.copy.error=Please select one (and only one) WS-Notification service point to copy the advanced service integration bus inbound port settings from.
WSNServicePoint.description.displayName=Description
WSNServicePoint.displayName=WS-Notification service points
WSNServicePoint.endpoint.NotSet=Bus member not defined
WSNServicePoint.endpoint.displayName=Associated bus member
WSNServicePoint.hostname.displayName=Host name 
WSNServicePoint.hostport.displayName=Host port 
WSNServicePoint.jaxwsHandlerListNB.displayName=NotificationBroker JAX-WS handler list
WSNServicePoint.jaxwsHandlerListPRM.displayName=PublisherRegistrationManager JAX-WS handler list
WSNServicePoint.jaxwsHandlerListSM.displayName=SubscriptionManager JAX-WS handler list
WSNServicePoint.name.displayName=Name
WSNServicePoint.nameInUse.error=A WS-Notification service point called {0} already exists on WS-Notification service {1}.
WSNServicePoint.singular.displayName=WS-Notification service point
WSNServicePoint.soapVersion.displayName=SOAP Version
WSNServicePoint.typeDependantAttrs.displayName=WSN Service attributes
WSNServicePoint.wizard.step1=Name, describe and select a bus member for the WS-Notification service point
WSNServicePoint.wizard.step1.error.NoName=Please supply a name for the WS-Notification service point
WSNServicePoint.wizard.step1.error.WhiteSpace=White spaces are not permitted in WS-Notification service names.
WSNServicePoint.wizard.step1.instruction=Supply a name and description and select a bus member for the WS-Notification service point. When creating a service point on a Version 7.0 WSN Service, only Websphere Application Server v7.0 and above bus members will be available for selection.
WSNServicePoint.wizard.step2=Select the service point endpoint listener
WSNServicePoint.wizard.step2.instruction=Select an existing endpoint listener that has been previously configured on the selected bus member or create a new one
WSNServicePoint.wizard.title=New WS-Notification service point
WSNServicePointTask.create.summary=The WS-Notification service point called "{0}" was created on bus member "{2}". Endpoint listener "{1}" on that bus member was selected to expose the service.
WSNServicePointTask.noEPL.error=Please select an existing endpoint listener or use the button provided to create a new one.
WSNServicePointTask.noHTTPProxy.error=Please supply an HTTP proxy value if the service point is to be accessed via an HTTP proxy.
WSNServicePointTask.step1=Configure name, description and select a bus member
WSNServicePointTask.step2=Define transport settings
WSNServicePointTask.step3.createNew=Create a new endpoint listener
WSNServiceTask.configUpdate.success=A new WS-Notification service was successfully created - further configuration of service points and namespaces are required to make it functional.
WSNServiceTask.configUpdate.warning=Proceeding to the next step will result in a new WS-Notification service being created (the configuration will be modified and subsequent cancellation actions will not delete it)
WSNServiceTask.create.summary=The WS-Notification service called "{0}" was created on service integration bus "{1}".
WSNServiceTask.noBuses.error=A WS-Notification service cannot be created because there are no service integration buses configured. Please create at least one service integration bus before attempting to create a WS-Notification service.
WSNServiceTask.noDynamicTopicSpace.error=Please supply a dynamic topic space name for this WS-Notification service.
WSNServiceTask.noServicePoints.error=At least one WS-Notification service point must be created.
WSNServiceTask.step1=Configure name, description, service integration bus and dynamic topic namespace settings
WSNServiceTask.step1a=Select WS-Notification service type
WSNServiceTask.step1a.instruction=Please select which type of WS-Notification service to create
WSNServiceTask.step2=Configure handler and web service policy settings
WSNServiceTask.step2.instruction=Optionally choose a JAX-RPC handler list and security configuration and bindings
WSNServiceTask.step2.jaxws.instruction1=Optionally choose a JAX-WS handler list to apply to outbound requests made by the Version 7.0 WSN service.
WSNServiceTask.step2.jaxws.instruction2=Select whether the WSDL of notification consumers is queried prior to the broker delivering notifications.
WSNServiceTask.step2.jaxws.instruction3=Note: the web service policy settings required for Version 6.1 WS-Notification services are not required for V7.0 WS-Notification services.
WSNServiceTask.step3=Create WS-Notification service points
WSNServiceTask.step3.instruction=A WS-Notification must have at least one service point. Review the collection of WS-Notification service points and then select "Yes" to create a new instance or "No" once all the required instances have been created.
WSNServiceTask.step4=Create permanent topic namespaces
WSNServiceTask.step4.instruction=A WS-Notification may optionally have one or more permanent topic namespaces. Review the collection of permanent topic namespaces and then select "Yes" to create a new instance or "No" once all the required instances have been created.
WSNServiceTask.step5=Summary
WSNServiceTask.step5.instruction=Summary of actions
WSNServiceTask.updateForbidden.warning=It will not be possible to update the bus and dynamic topic space settings now that the WS-Notification service has been created.
WSNSubscriptions.consumerEPR.displayName=Consumer EPR
WSNSubscriptions.creationTime.displayName=Creation time
WSNSubscriptions.deliveryState.displayName=Delivery state
WSNSubscriptions.displayName=Subscriptions
WSNSubscriptions.publicationPointNotFound.error=Unable to locate publication point {0}.
WSNSubscriptions.pullType.displayName=Pull type
WSNSubscriptions.subscriptionID.displayName=Subscription id
WSNSubscriptions.subscriptionsNotFound.error=Unable to locate subscription {0}.
WSNSubscriptions.terminationTime.displayName=Termination time
WSNSubscriptions.topics.displayName=Topic(s)
WSNSubscriptions.wpmSubscriptions.displayName=Service integration bus subscriptions
WSNSubscriptionsMultiple.displayName=Service integration bus subscriptions
WSNSubscriptionsMultiple.namespace.displayName=Topic namespace
WSNTopicNamespace.createTopicSpace.option=Create a new topic space (please specify name)
WSNTopicNamespace.deleteConfirmation.displayName=Delete service integration bus topic spaces where possible as well?
WSNTopicNamespace.deletionList.displayName=The following WS-Notification topic namespaces have been selected for deletion.
WSNTopicNamespace.displayName=Permanent topic namespace
WSNTopicNamespace.instanceDocs.countSuffix=applied
WSNTopicNamespace.instanceDocs.displayName=Topic namespace documents
WSNTopicNamespace.messageReliability.ASSURED_PERSISTENT=Assured persistent
WSNTopicNamespace.messageReliability.BEST_EFFORT_NONPERSISTENT=Best effort non-persistent
WSNTopicNamespace.messageReliability.EXPRESS_NONPERSISTENT=Express non-persistent
WSNTopicNamespace.messageReliability.RELIABLE_NONPERSISTENT=Reliable non-persistent
WSNTopicNamespace.messageReliability.RELIABLE_PERSISTENT=Reliable persistent
WSNTopicNamespace.messageReliability.displayName=Message reliability
WSNTopicNamespace.namespace.displayName=Namespace
WSNTopicNamespace.namespaceInUse.error=A permanent topic namespace "{0}" already exists on this WS-Notification service.
WSNTopicNamespace.noTopicNamespace.error=Please supply a topic namespace
WSNTopicNamespace.noTopicSpace.error=Please supply a topic space
WSNTopicNamespace.sibTopicSpaceDeleted.error=The associated service integration bus topic space "{0}" cannot be found and may have previously been deleted by some other action - this means that the configuration for this permanent topic namespace is corrupt.
WSNTopicNamespace.wpmTopicSpace.displayName=Service integration bus topic space
WSNTopicNamespace.wpmTopicSpace.existing.displayName=Use an existing service integration bus topic space
WSNTopicNamespace.wpmTopicSpace.new.displayName=Create a new service integration bus topic space called:
WSNTopicNamespaceTask.create.summary=The permanent topic namespace "{0}" was created using service integration topic space "{1}".
WSNTopicNamespaceTask.step1=Configure namespace and select service integration bus topic space
WSNTopicNamespaceTask.title=Create a new permanent topic namespace


WSNAdministeredSubscriber.description=An administered subscriber provides a mechanism for the WS-Notification service point to subscribe to an external notification producer at server startup time.
WSNAdministeredSubscriber.dialect.description=The dialect in which the topic is expressed.
WSNAdministeredSubscriber.endpoint.description=The URL of the external web service to which the service should subscribe.
WSNAdministeredSubscriber.remoteSubscriptionTimeout.description=The length of time in hours after which the remote subscription will expire if not renewed by the server.
WSNAdministeredSubscriber.topic.description=The topic on which the service should subscribe.
WSNAdministeredSubscriber.topicNamespace.description=The URI that describes the topic namespace in which the specified topic is defined.
WSNAdministeredSubscriberRT.producerEPR.description=The endpoint reference of the remote web service application from which event notifications are received.
WSNAdministeredSubscriberRT.state.description=The current runtime state of the administered subscriber.
WSNAdministeredSubscriberRT.topic.description=The topic for which event notifications have been requested.
WSNInstanceDocument.description=A topic namespace can optionally have topic namespace documents applied to it that define the structure of the topics that are permitted within the namespace.
WSNInstanceDocument.description.description=An optional description of the topic namespace document.
WSNInstanceDocument.filecontents.description=The contents of the topic namespace document.
WSNInstanceDocument.filename.description=The name of the file from which the topic namespace document was originally loaded.
WSNInstanceDocument.topicnamespace.description=The topic namespace to which this document is applied.
WSNInstanceDocument.url.description=The URL of the topic namespace document that should be loaded.
WSNPublisherRegistrations.creationTime.description=The time at which the registration was created.
WSNPublisherRegistrations.demandBased.description=Indicates whether this is a demand based publisher.
WSNPublisherRegistrations.description=The set of applications that are currently registered as publishers with the notification broker.
WSNPublisherRegistrations.publisherID.description=The unique identifier of this publisher registration.
WSNPublisherRegistrations.publisherRefData.description=Additional publisher related data.
WSNPublisherRegistrations.terminationTime.description=The time at which the registration will be deleted.
WSNPublisherRegistrations.topic.description=The topic on which the publisher is registered to publish.
WSNPullPoints.creationTime.description=The time at which the pull point was created.
WSNPullPoints.description=This collection lists the pull points that have been created on the associated bus member or members by WS-Notification applications. Use this panel to view the information about a pull point, such as the subscription with which it is associated and the time at which it is currently set to expire. You can also delete a pull point using the button provided.
WSNPullPoints.pullPointID.description=The unique identifier of the pull point.
WSNPullPoints.subscriptionID.description=The unique identifier of the subscription associated with the pull point.
WSNPullPoints.terminationTime.description=The time at which the pull point will be deleted.
WSNService.JAXRPCHandlerList.description=The JAX-RPC handler list that is applied to outbound requests from the WS-Notification service - for example the broker delivering notifications to a consumer.
WSNService.JAXWSHandlerList.description=The JAX-WS handler list that is applied to outbound requests from the WS-Notification service.
WSNService.NotificationBrokerServiceLink.description=The inbound service defined for the notification broker role of this WS-Notification service.
WSNService.OutboundRequestPolicySets.description=The outbound request policy sets and bindings associated this WS-Notification service.
WSNService.PubRegManagerServiceLink.description=The inbound service defined for the publisher registration manager role of this WS-Notification service.
WSNService.SIBus.description=The name of the service integration bus with which the WS-Notification service is associated.
WSNService.SubscriptionManagerServiceLink.description=The inbound service defined for the subscription manager role of this WS-Notification service.
WSNService.customProperties.description=Select this link to configure additional custom properties for this WS-Notification service.
WSNService.deleteConfirmation.description=Select whether or not the service integration bus topic spaces associated with the WS-Notification service (including those associated with all the WS-Notification topic namespaces) should also be deleted where possible as well.
WSNService.description=A WS-Notification service provides access to service integration bus resources for web services publish and subscribe clients.
WSNService.description.description=An optional description of the WS-Notification service.
WSNService.dynamicTopicSpace.description=The name of the service integration bus topic space to be used as the dynamic topic space for this WS-Notification service.
WSNService.enableDynamicTopicNamespaces.description=Indicates whether dynamic topic namespaces can be used within the WS-Notification service.
WSNService.endpoint.select.description=The bus member associated with the WS-Notification service point. When creating a service point on a Version 7.0 WSN Service, only Websphere Application Server v7.0 and above bus members will be available for selection.
WSNService.epl.description=An endpoint listener receives requests from service requester applications within a specific application server or cluster.
WSNService.fixedTopicSet.description=Indicates whether the list of topics supported by the notification broker is fixed or may vary at runtime.
WSNService.instancesLink.description=Select this link to configure the deployment of WS-Notification service points on one or more servers.
WSNService.name.description=The name of the WS-Notification service.
WSNService.queryWSDL.description=Defines whether WSN will or will not query the WSDL of other WSN web services when interacting with them. The default is 'on' as this is the standard web service programming model. Turning this option off can offer a performance improvement. Turning the option off affects web service requests made by WSN, e.g. notifications to consumers. A consequence of this is that WSN will attempt to discover binding information (which would normally be discovered via the WSDL) using other means. When WSDL querying is disabled, there are some circumstances when WSN may be unable to determine binding information. Under these circumstances WSN will make a 'best guess' at binding information.
WSNService.requestBinding.description=The security binding to be used with consumer notifications and remote publisher requests sent by this WS-Notification service.
WSNService.requiresRegistration.description=Indicates whether publisher applications are required to register with the broker before they can publish notifications.
WSNService.responseBinding.description=The security binding to be used with remote publisher responses received by this WS-Notification service.
WSNService.securityConfig.description=Specifies the details of how security is applied to requests and responses.
WSNService.topicDialects.description=List of topic dialects supported by this WS-Notification service.
WSNService.topicSpacesLink.description=Select this link to configure permanent topic namespaces for the WS-Notification service.
WSNService.type.description=The type of the WS-Notification service.
WSNService.wizard.step5.createTopicNamespace.description=REQUIRED
WSNServicePoint.NotificationBrokerPortLink.description=The inbound port defined for the notification broker role of this WS-Notification service point.
WSNServicePoint.PolicySetConfiguration.description=The policy set configuration associated with this WS-Notification service point.
WSNServicePoint.PubRegManagerPortLink.description=The inbound port defined for the publisher registration manager role of this WS-Notification service point.
WSNServicePoint.PublishWSDLToZip.description=Publish the WSDL files to a zip file.
WSNServicePoint.ServicePointApplication.description=The application associated with this WS-Notification service point.
WSNServicePoint.SubscriptionManagerPortLink.description=The inbound port defined for the subscription manager role of this WS-Notification service point.
WSNServicePoint.customProperties.description=Select this link to configure additional custom properties for this WS-Notification service point.
WSNServicePoint.description=A WS-Notification service point defines access to a WS-Notification service on a given bus member through a specified web service binding (for example SOAP over HTTP). Applications use the bus members associated with the WS-Notification service point to connect to the WS-Notification service.
WSNServicePoint.description.description=An optional description of the WS-Notification service point.
WSNServicePoint.endpoint.description=The name of the bus member on which this WS-Notification service point is deployed.
WSNServicePoint.httpProxy.description=The root of the externally visible endpoint address URL for web services accessed using this endpoint listener.
WSNServicePoint.jaxwsHandlerListNB.description=The JAX-WS handler list that is applied to inbound requests from an application to the NotificationBroker endpoint of the WS-Notification service point.
WSNServicePoint.jaxwsHandlerListPRM.description=The JAX-WS handler list that is applied to inbound requests from an application to the PublisherRegistrationManager endpoint of the WS-Notification service point.
WSNServicePoint.jaxwsHandlerListSM.description=The JAX-WS handler list that is applied to inbound requests from an application to the SubscriptionManager endpoint of the WS-Notification service point.
WSNServicePoint.name.description=The name of the WS-Notification service point. This appears as part of the address of the web service that is exposed on the chosen server.
WSNServicePoint.servicePointAccessedViaProxy.description=Specify whether the service point is accessed via an HTTP proxy address.
WSNServicePoint.soapVersion.description=Defines the version of SOAP supported by the service point. This affects the WSDL definition that will be exposed by the web service.
WSNServicePoint.wizard.description=Create a new WS-Notification service point.
WSNSubscriptions.consumerEPR.description=The endpoint reference to which event notifications matching the subscription are sent.
WSNSubscriptions.creationTime.description=The time at which the subscription was created.
WSNSubscriptions.deliveryState.description=The current runtime state of the subscription.
WSNSubscriptions.description=This collection lists the subscriptions that have been created on the associated bus member or members by WS-Notification applications. Use this panel to view the information about a subscription, such as the topic on which the subscription is registered and the time at which it is currently set to expire. You can also delete a subscription using the button provided.
WSNSubscriptions.pullType.description=Indicates whether the subscription is being used in pull mode.
WSNSubscriptions.subscriptionID.description=The unique identifier of the subscription.
WSNSubscriptions.terminationTime.description=The time at which the subscription will be deleted.
WSNSubscriptions.wpmSubscriptions.description=The service integration bus durable subscription or subscriptions that are associated with the WS-Notification subscription.
WSNSubscriptionsMultiple.description=This collection lists the service integration bus subscriptions associated with the previously selected WS-Notification subscription.
WSNTopicNamespace.deleteConfirmation.description=The following WS-Notification topic namespaces have been selected for deletion. At least one of the WS-Notication topic namespaces selected is associated with a service integration topic space that was created as a result of creating that WS-Notification topic namespace. Should associated service integration bus topic spaces that were created with a WS-Notification topic namespace also be deleted?
WSNTopicNamespace.description=A topic namespace is a grouping of topics that allows information to be shared between applications.
WSNTopicNamespace.instanceDocs.description=The collection of topic namespace documents that define the structure of the topic namespace.
WSNTopicNamespace.messageReliability.description=The service integration bus reliability to apply to messages published to this topic namespace.
WSNTopicNamespace.namespace.description=The URI string by which this topic namespace is known.
WSNTopicNamespace.wpmTopicSpace.description=The service integration bus topic space with which this namespace is associated.
WSNTopicNamespace.wpmTopicSpace.existing.description=Choose an existing service integration bus topic space.
WSNTopicNamespace.wpmTopicSpace.new.description=Create a new service integration bus topic space associated with this topic namespace.
WSNTopicNamespaceTask.description=Configure a new permanent topic namespace for the current WS-Notification service.
