#  Note to Translators:
#  Translate words on the right hand side of the = sign.
#  Do not translate {0}, {1}, %1, %2 etc.
#  Preserve all spaces after a backslash (\) even at the end of a line.
#
#  Whenever an apostrophe is needed within this file, please do not double it. It has
#  been determined that the code that uses this file expects only a single
#  apostrophe, and should work properly when a single apostrophe is provided.

#CMVCPATHNAME XD/ws/code/webui.healthconfig/src/healthconfig/WEB-INF/plugin.nlsprops
#ISMESSAGEFILE FALSE
# NLS_MESSAGEFORMAT_NONE
# NLS_ENCODING=ASCII
# Comment

#Navigational Tree node
healthClasses=Health Policies
healthclass.topology.root=Health Policy
healthCustomAction=Custom Action


#Health Class Collection Page and Detail Page
desc.healthclass.text=A health policy defines runtime behaviors to monitor and take corrective actions when these behaviors are determined to be present.
healthclass.name=Name
healthclass.description=Description
healthclass.reactionMode=Reaction mode
healthclass.cellpolicy=Cell-wide policy
healthclass.age=Maximum age
healthclass.requests=Total requests
healthclass.responsetime=Response time
healthclass.memory=JVM heap size
healthclass.timeoverthreshold=Offending time period
healthclass.percentile=Percentile
healthclass.type=Health condition
healthclass.gcpercentage=Percentage of time spent in garbage collection
healthclass.samplingperiod=Sampling time period
healthclass.name.description=The name of this health policy
healthclass.description.description=The optional description for this health policy
healthclass.cellpolicy.description=Defines if this condition should be associated cell-wide.   While membership is implicit in a cell level policy and is not mandatory, it can to toggle between a cell-wide policy and a limited subset.
healthclass.reactionMode.description=Reaction mode defines the human intervention mode.  If a violation is detected, what level of human interaction is desired.
healthclass.age.description=The amount of time that the server instance is allowed to 'live' before corrective action.
healthclass.requests.description=The total number of requests that the server instance serves before corrective action.
healthclass.responseTime.description=The request response time used in monitoring for various corrective actions.
#healthclass.memory.description=The threshold for total memory usage for the application server instance process.
healthclass.healthcondition.description=The health condition defines the properties to monitor for to determine when corrective action is needed.
healthclass.age.healthcondition.description=The age-based condition will detect once a server that is a member of the policy reaches a configured age threshold.
healthclass.workload.healthcondition.description=The workload condition will detect once a server that is a member of the policy has serviced a configured number or requests.
healthclass.response.healthcondition.description=The excessive response time condition will detect when the average response time, measured at the On Demand Router, of all requests from a server that is a member of the policy exceed the configured threshold value.
healthclass.memory.healthcondition.description=The memory condition: excessive memory usage will look for excessive memory utilization for each server that is a member of the policy.  It detects general memory consumption by detecting if a JVM's heap size has grown over a configured percentage of the maximum heap size for a configured period of time.
healthclass.memoryleak.healthcondition.description=The memory condition: memory leak will look for memory leaks for each server that is a member of the policy.  It profiles the JVM heap size after a garbage collection has occurred and looks for trends of increased consumption.  When an increasing trend is detected, the condition is triggered.
healthclass.memory.memoryleak.recommended.description=It is recommended that policies be defined for both the excessive memory usage condition and the memory leak condition in order to effectively address memory problems.
healthclass.stuckrequest.healthcondition.description=The excessive request timeout condition will detect, for each server that is a member of the policy, the percentage of requests directed at that server which has timed out (over 60 Seconds period) after being routed from the On Demand Router.
healthclass.stormdrain.healthcondition.description=The storm drain condition is applicable to only to dynamic clusters and will detect, for each cluster member, a significant drop in the average response time, measured at the On Demand Router, for a member of the cluster coupled with increased in the dWLM weights for the cluster members.
healthclass.gcpercentage.healthcondition.description=The garbage collection percentage condition: This policy calculates the amount of time spent in garbage collection as a percentage over a configured amount of time. The policy will breach when the percentage returned is higher than the defined threshold.
healthclass.timeoutpercent=Timed out requests
healthclass.detectionlevel=Detection level
healthclass.stormdrain.detection.description=The detection level specifies how aggressively to monitor for storm drain scenarios.  A standard detection policy will be able to detect a potential storm drain scenarios quickly, however will have a greater propensity for falsely identifying a storm drain scenarios than a slower detection policy.  Conversely, a slower detection policy will have less propensity for false alarms, however will not detect a potential storm drain scenarios as quickly as the standard defection policy would.
healthclass.stormdrain.normallevel=Standard (some false alarms)
healthclass.stormdrain.conservativelevel=Slow (fewer false alarms)
healthclass.memoryleak.detection.description=The detection level specifies how aggressively to monitor for memory leaks.  A faster detection policy will be able to detect a potential memory leak quickly, however will have a greater propensity for falsely identifying a memory leak than a slower detection policy.  Conversely, a slower detection policy will have less propensity for false alarms, however will not detect a potential memory leak as quickly as the faster defection policy would.
healthclass.memoryleak.aggressivelevel=Fast (more false alarms)
healthclass.memoryleak.normallevel=Standard (some false alarms)
healthclass.memoryleak.conservativelevel=Slow (fewer false alarms)
healthclass.conditionproperties=Health condition properties
#healthclass.timeoutpercent.description=The threshold for timed out requests to cause a breach of condition.
healthclass.monitorreaction=Health management monitor reaction
healthclass.monitorreaction.description=Choose the reaction mode and actions to take on health conditon breach.
healthclass.healthaction.select=Select actions:
healthclass.healthaction.select.description=Select actions to take on a health condition breach.
healthclass.custom.expression=Custom expression


#Health Class Wizard
healthclass.wizard.title=Create a new health policy
healthclass.wizard.description=Create a new health policy.  Define the general properties, including the health condition, and the servers, clusters, and dynamic clusters to be monitored.
healthclass.wizard.steps.properties=Define health policy general properties
healthclass.wizard.steps.conditionproperties=Define health policy health condition properties
healthclass.wizard.steps.configuremembers=Specify members to be monitored
healthclass.wizard.steps.appservers=Specify servers to be monitored
healthclass.wizard.steps.odrs=Specify on demand routers to be monitored
healthclass.wizard.steps.clusters=Specify clusters to be monitored
healthclass.wizard.steps.dynclusters=Specify dynamic clusters to be monitored
healthclass.wizard.steps.confirm=Confirm health policy creation
healthclass.wizard.description.description=The description for this health policy.  The description is optional.
healthclass.wizard.name.description=The name of this health policy.  The name is required and must be unique within the cell.
healthclass.wizard.reactionMode.description=The reaction mode defines the level of user-interaction when the health condition determines corrective action is needed.  In supervised mode when the condition on breaches, a task will be submitted with a suggested plan of action which can be automatically carried out if the task is approved.
healthclass.wizard.healthcondition.description=The health condition defines the properties to monitor for to determine when corrective action is needed.
healthclass.wizard.age.description=The age to allow the server instance to 'live' prior to corrective action.  This integer value can go from 1 hour to 8760 hours (365 days).
healthclass.wizard.memory.description=The threshold value for the percentage of the max heap size used for the JVM process.  This value can go from 1 to 99.
healthclass.wizard.timeoverthreshold.description=Time period over which the JVM heap threshold must breach.  The time that the total memory must be over the threshold value prior to corrective action.  This value can go from 1 second to 60 minutes.
healthclass.wizard.responsetime.description=The average time that requests can take prior to corrective action.  This value can go from 1 millisecond to 1 hour.
healthclass.wizard.percentile.description=The percentile value to use in the monitoring.  This value can go from 1 to 99.
healthclass.wizard.requests.description=The total number of requests that the server instance serves before corrective action.  It must be between 1000 or greater.
healthclass.wizard.cellpolicy.description=Defines if this condition should be associated cell-wide.  You can use this instead of defining all servers in the cell.  As new servers are added, a cell-wide policy would include them.
healthclass.wizard.timeoutpercent.description=The threshold value for the percentage of the timed out requests to cause a breach of condition.  This value can go from 1 to 99.
healthclass.wizard.gcpercentage.description=The threshold value for the percentage of time spent in garbage collection. This value can be between 1 and 99. 
healthclass.wizard.samplingperiod.description=Sampling period over which garbage collection data is collected. The total time spent in garbage collection during the sampling time period must be over the threshold value prior to corrective action. This value can go from 1 second to 60 minutes.
healthclass.wizard.age.units=Age Units
healthclass.wizard.time.units=Time Units
healthclass.wizard.sampling.units=Sampling Units

healthclass.confirm.msg1=The following is a summary of your selections. Click Finish to complete the health policy creation.
healthclass.confirm.msg2=If there are settings you want to change, click Previous to review the health policy settings.
healthclass.confirm.msg3=The following actions will  be performed:
#{0} is a user-defined name, and {1} is the selected reaction mode string translated below (like REACTION_MODE_DETECT_ONLY).
healthclass.confirm.msg4=A new heath policy, \"{0}\", will be created with a reaction mode of \"{1}\".
#{0} is a user-defined name, {1} is a user-defined description, and {2} is the selected reaction mode string translated below (like REACTION_MODE_DETECT_ONLY).
healthclass.confirm.msg4desc=A new heath policy, \"{0}\", will be created with a description of \"{1}\" and a reaction mode of \"{2}\".
#{0} is a comma-separated list of server members (server:!:node, server:!:node)
healthclass.confirm.appservers=The health policy will have the following servers as members: {0}
#{0} is a comma-separated list of cluster members (cluster1, cluster2)
healthclass.confirm.clusters=The health policy will have the following clusters as members: {0}
#{0} is a comma-separated list of dynamic cluster members (dynCluster1, dynCluster2)
healthclass.confirm.dynclusters=The health policy will have the following dynamic clusters as members: {0}
#{0} is a comma-separated list of generic server cluster members (gsCluster1, gsCluster2)
healthclass.confirm.genericserverclusters=The health policy will have the following generic server clusters as members: {0}
#{0} is an integer number and the {1} is a translated units, example,  10 days  or  3 hours.  "days" and "hours" translated below
healthclass.confirm.cells=The health policy will have the following Cell as a member: \"{0}\".
#{0} is the name of a cell
healthclass.confirm.odrs=The health policy will have the following on demand routers as members: {0}
#{0} is a comma-separated list of on demand routers
healthclass.confirm.agecondition=The health policy will have an age-based health condition of {0} {1}.
#{0} is an integer number
healthclass.confirm.workloadcondition=The health policy will have a workload health condition of {0} total requests.
#{0} is an integer number, {1} is a time value and the {2} is a translated units, example,  75% of the max heap size for 45 minutes.
healthclass.confirm.memorycondition=The health policy will have an memory condition: excessive memory usage health condition of {0}% of the max heap size for {1} {2}.
#{0} is an integer number, {1} is a time value and the {2} is a translated units, example,  80% for 10 seconds.
healthclass.confirm.responsecondition=The health policy will have an excessive response time health condition of {0} {1}.
healthclass.confirm.celllevel=The health policy will be defined as a cell-wide policy.
healthclass.confirm.stuckrequestcondition=The health policy will have an excessive request timeout health condition of {0}% of timed out request.
healthclass.confirm.stormdraincondition=The health policy will have a storm drain health condition of \"{0}\" detection level.
healthclass.confirm.memoryleakcondition=The health policy will have an memory condition: memory leak health condition of \"{0}\" detection level.
healthclass.summary.options=Options
healthclass.summary.values=Values


#Error messages
error.name.required=The name field is required.
error.name.invalid.chars=The name field contains invalid characters.  Please enter a valid name.
error.name.unique=The name must be unique.  Please enter a unique name.
error.percentile.outofrange=The percentile is out of range.  Please enter an integer value between  1 to 99.
error.responsetime.outofrange=The value for the response time is out of range.  It must be between 1 and 2,147,483,647.
error.threshold.outofrange=The value for the threshold is out of range.  It must be between 1 and 2,147,483,647.
error.memory.outofrange=The percentage of memory is out of range.  Please enter an integer value between  1 to 99.
error.requests.outofrange=The value for the total number of requests is out of range.  It must be between 1000 and 9,223,372,036,854,775,807.
error.age.outofrange=The value for the age is out of range.  It must be an integer value between 1 and 2,147,483,647.
error.gcpercentage.outofrange=The value for garbage collection percentage is out of range. Please enter an integer value between 1 and 99. 
error.samplingperiod.outofrange=The value for the sampling period is out of range. It must be between 1 and 2,147,483,647. 
error.value.from.repository.percentile=The percentile read from the repository is not valid.  Please update to enter a valid value.
error.value.from.repository.responsetime=The response time read from the repository is not valid.  Please update to enter a valid value.
error.value.from.repository.memory=The memory percentage read from the repository is not valid.  Please update to enter a valid value.
error.value.from.repository.requests=The total requests read from the repository is not valid.  Please update to enter a valid value.
error.value.from.repository.age=The age read from the repository is not valid.  Please update to enter a valid value.
error.value.from.repository.threshold=The threshold value read from the repository is not valid.  Please update to enter a valid value.
error.value.from.repository.gcpercentage=The garbage collection percentage read from the repository is not valid.  Please update to enter a valid value.
error.value.from.repository.samplingperiod=The sampling period value read from the repository is not valid.  Please update to enter a valid value.
error.scope=A target member cannot be associated with more than one health policy with the same condition and reaction mode.
error.timeoutpercent.outofrange=The percentage of timed out request is out of range.  Please enter an integer value between  1 to 99.
error.healthaction.required=You must select at least one action to take on health condition breach.
error.value.from.repository.timeoutpercent=The percentage of timed out request read from the repository is not valid.  Please update to enter a valid value.
error.value.from.repository.healthaction=The health action read from the repository is not valid.  Please update to enter a valid value.
error.value.from.repository.detectionlevel=The detection level read from the repository is not valid.  Please update to enter a valid value.
error.custom.expression.required=The custom expression field is required.
error.custom.expression.invalid=The custom expression of "{0}" is not valid.
error.custom.expression.members.was.only=WebSphere application server is the only supported server type for this custom expression "{0}".  Please remove "{1}" from the members list or change the custom expression.
error.custom.expression.members.nonwas.only=Non-WebSphere application server is the only supported server type for this custom expression "{0}".  Please remove "{1}" from the members list or change the custom expression.

error.healthclass.executablename.required=The executable name field is required.
error.healthclass.workingdirectory.required=The working directory field is required.
error.healthclass.create.uniquename=Unable to create the health policy because the name must be unique.  Please enter a unique name.
error.healthclass.create=Unable to create the health policy: {0}.
error.healthclass.updatemembers=Unable to update the health policy membership: {0}.
error.healthclass.update=Unable to update the health policy: {0}.
error.healthclass.delete=Unable to delete the health policy: {0}.
error.healthaction.delete=Unable to the delete the custom action: {0}.
warning.healthclass.mixedCluster=Cluster {0} has nodes with Intelligent Management and nodes without Intelligent Management. Policies will not be applied to non Intelligent Management nodes.

healthclass.detail.title=Health Policy
healthclass.detail.description=Define the properties of a health policy.  A health policy defines run-time behaviors to monitor and corrective actions to take when these behaviors are present.
healthclass.details.membership=Memberships
healthclass.details.members=Members
healthclass.detail.membershipinstruction=This list contains the members that are currently part of this health policy.
healthclass.detail.membershipdescription=Health policy members must reside on nodes with Intelligent Management.  If clusters are applied as a policy member with a cluster member on mixed nodes, only the cluster members on nodes with Intelligent Management are monitored.  This is also true if the cell is applied as member. Only servers residing on nodes with Intelligent Management are monitored.
healthclass.detail.readonly.membershipdescription=Current members to be monitored for this health policy.
healthclass.detail.appservers=Configure server members to be monitored for this health policy.
healthclass.detail.clusters=Configure cluster members to be monitored for this health policy.
healthclass.detail.dynclusters=Configure dynamic cluster members to be monitored for this health policy.

healthclass.details.availableMembers=Available for membership
#Note to translators:  The <b> and </b> are to show the health policy name, which will be substituted for the {0} argument, in bold
healthclass.details.membersOf=Members of <b>{0}</b>:
healthclass.detail.name.description=Name of this health policy
healthclass.detail.descriptionfield=Description
healthclass.detail.description.description=Optional description for this health policy.
healthclass.button.remove=<< Remove
healthclass.button.add=Add >>

healthclass.detail.members.description=Select the members to monitor with this health policy.  If you defined health rules that only apply to certain member types, this list of available members is automatically filtered based on your previously defined health rule for this health policy.
healthclass.member.filter.by=Filter by
member.type=Member type
member.type.none=Select a member type
member.type.appserver=Servers/Nodes
member.type.cluster=Clusters
member.type.dynamiccluster=Dynamic clusters
member.type.cell=Cells
member.type.odr=On demand routers
member.type.genericservercluster=Generic server clusters
cell.topology.msg=This policy is associated at the cell level.

#The following are the Type values used for the Health Policy
AGE=Age-based condition
WORKLOAD=Workload condition
MEMORY=Memory condition: excessive memory usage
RESPONSE=Excessive response time condition
MEMORYLEAK=Memory condition: memory leak
STUCKREQUEST=Excessive request timeout condition
STORMDRAIN=Storm drain condition
GCPERCENTAGE=Garbage collection percentage condition
CUSTOM=Custom condition

HEALTH_ACTION_RESTART=Restart server
HEALTH_ACTION_THREADDUMP=Take thread dumps
HEALTH_ACTION_HEAPDUMP=Take JVM heap dumps
HEALTH_ACTION_HEAPDUMP.description=JVM heap dumps are taken on IBM Java Development Kit (JDK) only.
HEALTH_ACTION_MAINTMODE=Place server in maintenance mode
HEALTH_ACTION_MAINTBREAKMODE=Place server in maintenance mode and break affinity
HEALTH_ACTION_NORMMODE=Place server out of maintenance mode
HEALTH_ACTION_SENDSNMPTRAP=Generate an SNMP trap

#
REACTION_MODE_SUPERVISED=Supervise
REACTION_MODE_AUTOMATIC=Automatic

UNITS_DAYS=Days
UNITS_HOURS=Hours
UNITS_SECONDS=Seconds
UNITS_MINUTES=Minutes
UNITS_MILLISECONDS=Milliseconds

viewlet.showMe=Show Me
#Note to translators:  Please translate the text for the alt= part of the next item only
health.help.viewlet.image=<img src="/ibm/console/com.ibm.ws.console.healthconfig/images/camera.gif" width="17" height="17" border="0" alt="View tutorial for this page" align="texttop">

task.demonstration=Task demonstration
#Health Class Action Plan Setup
healthclass.customAction.selectAction.title=Select Action
healthclass.customAction.selectAction.predefine=Pre-Defined Health Policy Action
healthclass.customAction.selectAction.predefine.heading=Pre-Define Action:
healthclass.customAction.selectAction.customAction=Custom Health Policy Action
healthclass.customAction.selectAction.customAction.heading=Custom Action:
healthclass.customAction.selectAction.newcustomAction=Create new custom action...
#Health Class Custom Action Wizard
healthclass.customAction.display.name=Health Management Custom Action
healthclass.customAction.display.description=A list of the Health Management custom action properties.
healthclass.customAction.wizard.title=Health Management Custom Action
healthclass.customAction.wizard.description=Creation of a Custom Action for use in Health Management
healthclass.customAction.wizard.steps.selectType=Select Action
healthclass.customAction.wizard.steps.actionType=Select Custom Action Type
healthclass.customAction.wizard.steps.customAction=Define Custom Action
healthclass.customAction.wizard.steps.confirm=Confirm New Action
healthclass.customAction.wizard.steps.actionType.description=Select the type of custom action to create:
healthclass.customAction.wizard.confirm.msg1=The following is a summary of your selections. Click Finish to complete the custom action creation.
healthclass.customAction.wizard.confirm.msg2=If there are settings you want to change, click Previous to review the custom action settings.
healthclass.customAction.wizard.confirm.msg3=The new custom action "{0}" will be created.
healthclass.customAction.name=Name
healthclass.customAction.location=Location of java executable directory
healthclass.customAction.targetype=Executable target type
healthclass.customAction.executable=Executable file
healthclass.customAction.executable.displayName=Executable
healthclass.customAction.executable.arguments=Executable arguments
healthclass.customAction.executable.type.java=JAVA_CLASS
healthclass.customAction.executable.type.jar=EXECUTABLE_JAR
healthclass.customAction.executable.os=Supported on Operating Systems of type:
healthclass.customAction.java=Java action
healthclass.customAction.nonjava=Non-Java action
healthclass.customAction.windows=windows
healthclass.customAction.unix=unix
healthclass.customAction.zos=zos
desc.healthclass.customAction.text=Custom Actions are the user defined corrective actions that can be used when creating health policies.
healthclass.customAction.usernameVar.description=Name of a variable that will hold the value of a user name to be substituted for the variable when invoking the operation.
healthclass.customAction.usernameVar=Name of a variable for referencing a user name in executable arguments
healthclass.customAction.usernameVal.description=The user name to be substituted for the user name variable
healthclass.customAction.usernameVal=The user name to be substituted for the user name variable at invocation time
healthclass.customAction.passwordVar.description=Name of a variable that will hold the value of a password to be substituted for the variable when invoking the operation.
healthclass.customAction.passwordVar=Name of a variable for referencing a password in executable arguments
healthclass.customAction.passwordVal.description=The password to be substituted for the password variable
healthclass.customAction.passwordVal=The password to be substituted for the password variable at invocation time
healthclass.customAction.displayPidVarName=Name of a environment variable which stores a PID file name
healthclass.customAction.supportedOS=Supported OS
healthclass.customAction.action=Action
healthclass.customAction.pidVarName.description=Name of a environment variable which holds the fully Qualified path name to a file which holds the process id (PID) for the operation executing.  If no environment variable is provided, it is assumed that the operation will be executed in the foreground.
healthclass.customAction.msg1=Health Custom Action is created successfully.
error.create.customAction=Error occured while creating Health Custom Action.

#Custom health condition
healthclass.customCondition.desc=Custom health conditions are user defined through boolean expressions that when evaluated to true for an associated policy member mean that the policy has been breached and the configured actions are to be carried out.
healthclass.customCondition.text=Custom health condition
healthclass.customCondition.predefined.text=Predefined health condition
healthclass.customCondition.run.reaction.label=Run reaction plan when:
healthclass.customCondition.where.label=Where
healthclass.customCondition.action.label=Take the following actions when the health condition breaches

healthclass.actionPlan.addStep.button=Add Step...
healthclass.actionPlan.deleteStep.button=Delete Step
healthclass.actionPlan.addAction.button=Add Action...
healthclass.actionPlan.deleteAction.button=Remove Action
healthclass.actionPlan.moveUp.button=Move Up
healthclass.actionPlan.moveDown.button=Move Down
healthclass.actionPlan.step.label=Step
healthclass.actionPlan.action.label=Action
healthclass.actionPlan.actions.label=Actions
healthclass.actionPlan.target.label=Select the target
healthclass.actionPlan.targetServer.label=Target server
healthclass.actionPlan.targetNode.label=Target node

healthclass.actionPlan.predefinedAction.button=Predefined health policy action
healthclass.actionPlan.predefinedAction.label=Predefined action:
healthclass.actionPlan.customAction.button=Custom health policy action
healthclass.actionPlan.customAction.label=Custom action:
healthclass.actionPlan.createCustomAction.button=Create new custom health policy action

healthclass.actionPlan.wizard.title=Health Policy Action Plan Step Definition
healthclass.actionPlan.wizard.description=Creation of a action plan step definition for use in the health policy
healthclass.actionPlan.wizard.steps.selectType=Select action
createhealthclass.actionPlan.wizard.steps.selectType=Select action
healthclass.actionPlan.wizard.steps.selectTarget=Select target
createhealthclass.actionPlan.wizard.steps.selectTarget=Select target
healthclass.actionPlan.wizard.steps.notspecified=Not specified
healthclass.actionPlan.wizard.steps.confirm=Confirm step
healthclass.actionPlan.wizard.steps.actionType.description=Select the type of custom action to create:
healthclass.actionPlan.wizard.confirm.msg1=Create new step from a predefined action:
healthclass.actionPlan.wizard.confirm.msg2=Create new step from a custom action:
healthclass.actionPlan.wizard.confirm.msg3=Targetted node/server:
healthclass.actionPlan.wizard.error.msg1=Unable to use selected action on specified target
healthclass.actionPlan.wizard.error.msg2=The target must be specified for this step

healthclass.actionPlan.predefined.label=Select pre-defined action
healthclass.actionPlan.custom.label=Select custom action
healthclass.has.changed.msg=The properties of this health policy have been modified, but not saved.  They will be saved when the Apply or OK button is clicked.
healthclass.actionPlan.must.be.selected=You must select at least one action item to perform this function.
healthclass.actionPlan.only.select.one.action=The move up or move down operation can only be performed on one action item at a time.

healthclass.sick.server.nodeagent=Node agent of the sick server
healthclass.sick.server=Sick server
healthclass.node.hosting.sick.server=Node hosting sick server
HEALTH_ACTION_CUSTOM=Custom
healthclass.showmestepslayout.token=:
