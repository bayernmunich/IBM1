label.no.confirm.enableRPA=Don't show this enable RPA confirmation in the future
nav.webuiPerftuning.admin=Performance and Diagnostic Advisor Configuration
nav.webuiPerftuning.category=Performance and Diagnostic Alerts 
pd.attribute.enabled=##Enable Immediate Advice Framework
pd.ruleName.outOfMemory=Problem Determination.  Out Of Memory Diagnosis 
pd.ruleName.tooManyConnections=Problem Determination. Too Many Connections Diagnosis
perfTuning.attName.CalculationInterval=Calculation Interval
perfTuning.attName.CpuNotSaturated=CPU Saturated
perfTuning.attName.HighUsageThreshold=Maximum Pool Utilization
perfTuning.attName.IncreasePercentage=Percentage Increase
perfTuning.attName.MinCpuUsageForWorkingSystem=Minimum CPU For Working System
perfTuning.attName.MinPercentOfPoolUsed=Minimum Pool Utilization
perfTuning.attName.RefreshIteration=Refresh Iteration
perfTuning.attName.SuggestedDecreaseOfNonUsedThreads=Percentage Decrease
perfTuning.attName.analyzeExpandingHeap=Anaylze expanding heap
perfTuning.attName.enableDebugFile=Enable debug file
perfTuning.attName.keepTimes=Keep time statistics
perfTuning.attName.minDuration=Minimum duration in between interations of the rule
perfTuning.attName.minMemoryPercentage=The minimun required free memory in the JVM heap
perfTuning.attName.noPmi=No pmi service attribute.
perfTuning.attName.numberLeaves=Number of raw data points
perfTuning.attName.numberOfDecreasingExceptions=Number of decreasing exceptions
perfTuning.attName.numberOfProcessors=Number of processors
perfTuning.attName.stdev=Standard Deviation
perfTuning.attName.summaryMech=Summary Mechanism
perfTuning.attName.tooManyThreadsPerProcessor=Maximum number of threads per processor. 
perfTuning.attName.treeHeight=Number of summaries
perfTuning.attName.warnings=Advisor warnings
perfTuning.heapDumpOutputHandler.disabled=Automated generation of Heap Dump files is disabled
perfTuning.heapDumpOutputHandler.dumpInProgress=There is currently an automated Heap Dump collection in progress.  {0} more dump(s) will attempted.
perfTuning.heapDumpOutputHandler.enabled=Automated generation of Heap Dump files is enabled 
perfTuning.heapDumpOutputHandler.heapDumpFile=The following Heap Dump was generated: {0}
perfTuning.heapDumpOutputHandler.heapDumpFile.manual=The following Heap Dump was manually requested: {0}
perfTuning.heapDumpOutputHandler.nextDump.memory=The next Heap Dump will attempted to be taken when estimated free memory is less than {0} K. 
perfTuning.heapDumpOutputHandler.nextDump.not=The next Heap Dump will be taken when the next new notification of suspicous memory activity is received.
perfTuning.heapDumpOutputHandler.noDump=No suspicous memory activity has been reported and no Heap Dumps have been automatically generated.
perfTuning.heapDumpOutputHandler.noDumpInProgress=There is currently no automated Heap Dump collection in progress.
perfTuning.heapDumpOutputHandler.selfDisabled=Automated Heap Dumps have been disabled according to policy.  This could be because the on disk limit was reached or the desired number of Heap Dumps have already been automatically generated.
perfTuningAdmin.additional.ruleName.SessionSizeRule.read=Analyzing read size
perfTuningAdmin.additional.ruleName.SessionSizeRule.write=Analyzing write size
perfTuningAdmin.additional.ruleName.SessionTimeRule.read=Analyzing read time
perfTuningAdmin.additional.ruleName.SessionTimeRule.write=Analyzing write time
perfTuningAdmin.additional.ruleName.unbounded.ave=Testing if average > initial maximum
perfTuningAdmin.additional.ruleName.unbounded.numP=Testing if current size > (numProcessors * {0})
perfTuningAdmin.advanced=Advanced Properties
perfTuningAdmin.advice.config.displayName=Performance and Diagnostic Advice configuration
perfTuningAdmin.advice.config.displayName_test=Testing new Advice configuration using custom jsp
perfTuningAdmin.advice.displayName=Advice name
perfTuningAdmin.adviceParam.config.displayName=Advice Parameters
perfTuningAdmin.adviceType.displayName=Advice type
perfTuningAdmin.adviceType.immediate=Diagnostic
perfTuningAdmin.adviceType.periodic=Performance
perfTuningAdmin.attName.DSPoolMinAndMaxSize.CpuNotSaturated=Data Source Pool Minimum and Maximum advice CPU Saturated Percentage
perfTuningAdmin.attName.DSPoolMinAndMaxSize.HighUsageThreshold=Maximum Pool Utilization
perfTuningAdmin.attName.DSPoolMinAndMaxSize.IncreasePercentage=Percentage Increase for Pool
perfTuningAdmin.attName.DSPoolMinAndMaxSize.MinCpuUsageForWorkingSystem=Data Source Pool Minimum and Maximum. Minimum CPU for working system.
perfTuningAdmin.attName.DSPoolMinAndMaxSize.MinPercentOfPoolUsed=Minimum Pool Utilization
perfTuningAdmin.attName.DSPoolMinAndMaxSize.RefreshIteration=Data Source Pool Minimum and Maximum advice Refresh iteration
perfTuningAdmin.attName.DSPrepStmtRule.DiscardRateThreshold=Maximum Discard Rate
perfTuningAdmin.attName.DSPrepStmtRule.RefreshIteration=Data Source prepared statement discard advice. Refresh iteration
perfTuningAdmin.attName.LiveSessionRule.CalculationInterval=Live Session advice.  Calculation Interval.
perfTuningAdmin.attName.LiveSessionRule.MinCpuUsageForWorkingSystem=Live session advice. Minimum CPU for working system.
perfTuningAdmin.attName.LiveSessionRule.RefreshIteration=Live Session advice Refresh iteration
perfTuningAdmin.attName.MaxSessionReadTimeInMs=Maximum Session Read Time
perfTuningAdmin.attName.MaxSessionWriteTimeInMs=Maximum Session Write Time
perfTuningAdmin.attName.MaximinReadSessionSizeInK=Maximum Session Read Size
perfTuningAdmin.attName.MaximinWriteSessionSizeInK=Maximum Session Write Size
perfTuningAdmin.attName.NoRoomForNewSessionRule.MinCpuUsageForWorkingSystem=No Room For New Session advice.  Minimum CPU for working system.
perfTuningAdmin.attName.NoRoomForNewSessionRule.RefreshIteration=No Room For New Session advice. Refresh iteration
perfTuningAdmin.attName.OrbPoolRule.CalculationInterval=ORB Pool advice.  Calculation Interval.
perfTuningAdmin.attName.OrbPoolRule.CpuNotSaturated=ORB Pool advice. CPU Saturated Percentage
perfTuningAdmin.attName.OrbPoolRule.HighUsageThreshold=ORB Pool advice. High Usage Threshold
perfTuningAdmin.attName.OrbPoolRule.IncreasePercentage=ORB Pool advice.  Increase Pool Size Percentage 
perfTuningAdmin.attName.OrbPoolRule.MinCpuUsageForWorkingSystem=ORB pool advice. Minimum CPU for working system.
perfTuningAdmin.attName.OrbPoolRule.MinPercentOfPoolUsed=ORB Pool Advice.  Minimum Percent of Pool Used.
perfTuningAdmin.attName.OrbPoolRule.SuggestedDecreaseOfNonUsedThreads=ORB Pool advice. Suggested decrease of unused threads
perfTuningAdmin.attName.OrbPoolRule.stdev=Orb Pool advice. The standard deviation allowed for threads in the Orb thread pool
perfTuningAdmin.attName.OrbUnboundedPoolRule.CalculationInterval=ORB Unbounded Pool advice.  Calculation Interval.
perfTuningAdmin.attName.OrbUnboundedPoolRule.numberOfProcessors=Number of CPUs for unbounded ORB pool advice
perfTuningAdmin.attName.OrbUnboundedPoolRule.tooManyThreadsPerProcessor=Unbounded ORB Pool advice. Too many Threads per CPU
perfTuningAdmin.attName.ServletEnginePoolRule.CalculationInterval=Servlet Engine Pool advice.  Calculation Interval.
perfTuningAdmin.attName.ServletEnginePoolRule.CpuNotSaturated=Servlet Engine Pool advice. CPU Saturated Percentage
perfTuningAdmin.attName.ServletEnginePoolRule.HighUsageThreshold=Servlet Engine Pool advice. High Usage Threshold
perfTuningAdmin.attName.ServletEnginePoolRule.IncreasePercentage=Servlet Engine Pool advice.  Increase Pool Size Percentage
perfTuningAdmin.attName.ServletEnginePoolRule.MinCpuUsageForWorkingSystem=Servlet engine pool advice. Minimum CPU for working system.
perfTuningAdmin.attName.ServletEnginePoolRule.MinPercentOfPoolUsed=Servlet Engine Pool advice.  Minimum Percent of Pool Used.
perfTuningAdmin.attName.ServletEnginePoolRule.SuggestedDecreaseOfNonUsedThreads=Servlet Engine Pool advice.  Suggested decrease of unused threads
perfTuningAdmin.attName.ServletEnginePoolRule.stdev=Servlet Engine Pool advice.  The standard deviation allowed for threads in the Web Container thread pool
perfTuningAdmin.attName.ServletEngineUnboundedPoolRule.CalculationInterval=Servlet Engine Unbounded Pool advice.  Calculation Interval.
perfTuningAdmin.attName.ServletEngineUnboundedPoolRule.numberOfProcessors=Number of CPUs for servlet engine unbounded pool advice
perfTuningAdmin.attName.ServletEngineUnboundedPoolRule.tooManyThreadsPerProcessor=Unbounded servlet engine pool advice too many threads per CPU
perfTuningAdmin.attName.SessionSizeRule.MinCpuUsageForWorkingSystem=Session read/write Size.  Minimum CPU for working system 
perfTuningAdmin.attName.SessionSizeRule.RefreshIteration=Session Read/Write Size advice. Refresh iteration
perfTuningAdmin.attName.SessionSizeTimeRule.MinCpuUsageForWorkingSystem=Session read/write Time advice. Minimum CPU for working system.
perfTuningAdmin.attName.SessionSizeTimeRule.RefreshIteration=Session read/write time advice. Refresh iteration
perfTuningAdmin.attName.enable=Enable
perfTuningAdmin.attribute.1=1
perfTuningAdmin.attribute.10=10
perfTuningAdmin.attribute.100=100
perfTuningAdmin.attribute.15=15
perfTuningAdmin.attribute.2=2
perfTuningAdmin.attribute.20=20
perfTuningAdmin.attribute.25=25
perfTuningAdmin.attribute.3=3
perfTuningAdmin.attribute.30=30
perfTuningAdmin.attribute.4=4
perfTuningAdmin.attribute.5=5
perfTuningAdmin.attribute.50=50
perfTuningAdmin.attribute.6=6
perfTuningAdmin.attribute.7=7
perfTuningAdmin.attribute.75=75
perfTuningAdmin.attribute.8=8
perfTuningAdmin.attribute.9=9
perfTuningAdmin.attribute.duration=Interval
perfTuningAdmin.attribute.enabled=Enable Performance and Diagnostic Advisor Framework (Runtime Performance Advisor)
perfTuningAdmin.attribute.false=false
perfTuningAdmin.attribute.fileResponseEnabled=Debug file response enabled
perfTuningAdmin.attribute.fileResponseLevel=Debug file response level
perfTuningAdmin.attribute.heapDump.fileNames=Heap Dump file names
perfTuningAdmin.attribute.heapDump.heapDumpTriggerPolicy=HeapDump policy
perfTuningAdmin.attribute.heapDump.heapDumpTriggerPolicy.option.memory=Memory based policy
perfTuningAdmin.attribute.heapDump.heapDumpTriggerPolicy.option.not=Notification based policy
perfTuningAdmin.attribute.heapDump.heapDumpTriggerPolicy.option.time=Time based policy
perfTuningAdmin.attribute.heapDump.maxDumpsOnDisk=Maximum HeapDumps on disk
perfTuningAdmin.attribute.heapDump.numberOfDumps=The number of HeapDumps
perfTuningAdmin.attribute.heapDump.numberOfDumps.option.1=1 HeapDump
perfTuningAdmin.attribute.heapDump.numberOfDumps.option.10=10 HeapDumps
perfTuningAdmin.attribute.heapDump.numberOfDumps.option.12=12 HeapDumps
perfTuningAdmin.attribute.heapDump.numberOfDumps.option.14=14 HeapDumps
perfTuningAdmin.attribute.heapDump.numberOfDumps.option.16=16 HeapDumps
perfTuningAdmin.attribute.heapDump.numberOfDumps.option.18=18 HeapDumps
perfTuningAdmin.attribute.heapDump.numberOfDumps.option.2=2 HeapDumps
perfTuningAdmin.attribute.heapDump.numberOfDumps.option.20=20 HeapDumps
perfTuningAdmin.attribute.heapDump.numberOfDumps.option.4=3 HeapDumps
perfTuningAdmin.attribute.heapDump.numberOfDumps.option.6=6 HeapDumps
perfTuningAdmin.attribute.heapDump.numberOfDumps.option.8=8 HeapDumps
perfTuningAdmin.attribute.heapDump.status=Heap Dump Status
perfTuningAdmin.attribute.logLevel=logLevel, this should not be here. 
perfTuningAdmin.attribute.mBeanResponseEnabled=MBean notification response enabled
perfTuningAdmin.attribute.mBeanResponseLevel=MBean notification response level
perfTuningAdmin.attribute.maxAlertStreak=Maximum warning sequence
perfTuningAdmin.attribute.memoryLeakDataCollection=Enable automatic heap dump collection
perfTuningAdmin.attribute.rule.CalculationInterval.option.10=10 seconds
perfTuningAdmin.attribute.rule.CalculationInterval.option.120=2 minutes
perfTuningAdmin.attribute.rule.CalculationInterval.option.180=3 minutes
perfTuningAdmin.attribute.rule.CalculationInterval.option.1800=30 minutes
perfTuningAdmin.attribute.rule.CalculationInterval.option.240=4 minutes
perfTuningAdmin.attribute.rule.CalculationInterval.option.28800=8 hours
perfTuningAdmin.attribute.rule.CalculationInterval.option.30=30 seconds
perfTuningAdmin.attribute.rule.CalculationInterval.option.300=5 minutes
perfTuningAdmin.attribute.rule.CalculationInterval.option.3600=1 hour
perfTuningAdmin.attribute.rule.CalculationInterval.option.60=1 minute
perfTuningAdmin.attribute.rule.CalculationInterval.option.600=10 minutes
perfTuningAdmin.attribute.rule.CalculationInterval.option.86400=1 day
perfTuningAdmin.attribute.rule.CpuNotSaturated.option.75=if CPU > 75%
perfTuningAdmin.attribute.rule.CpuNotSaturated.option.80=if CPU > 80%
perfTuningAdmin.attribute.rule.CpuNotSaturated.option.85=if CPU > 85%
perfTuningAdmin.attribute.rule.CpuNotSaturated.option.90=if CPU > 90%
perfTuningAdmin.attribute.rule.CpuNotSaturated.option.95=if CPU > 95%
perfTuningAdmin.attribute.rule.DiscardRateThreshold.option.0=any discards
perfTuningAdmin.attribute.rule.DiscardRateThreshold.option.0.025=1 every 40 seconds
perfTuningAdmin.attribute.rule.DiscardRateThreshold.option.0.05=1 every 20 seconds
perfTuningAdmin.attribute.rule.DiscardRateThreshold.option.0.1=1 every 10 seconds
perfTuningAdmin.attribute.rule.DiscardRateThreshold.option.0.2=1 every 5 seconds
perfTuningAdmin.attribute.rule.DiscardRateThreshold.option.1=1 every second
perfTuningAdmin.attribute.rule.DiscardRateThreshold.option.10=10 every second
perfTuningAdmin.attribute.rule.DiscardRateThreshold.option.2=2 every second
perfTuningAdmin.attribute.rule.DiscardRateThreshold.option.5=5 every second
perfTuningAdmin.attribute.rule.HighUsageThreshold.option.80=80%
perfTuningAdmin.attribute.rule.HighUsageThreshold.option.85=85%
perfTuningAdmin.attribute.rule.HighUsageThreshold.option.90=90%
perfTuningAdmin.attribute.rule.HighUsageThreshold.option.95=95%
perfTuningAdmin.attribute.rule.HighUsageThreshold.option.97=97.5%
perfTuningAdmin.attribute.rule.HighUsageThreshold.option.99=100%
perfTuningAdmin.attribute.rule.IncreasePercentage.option.10=10%
perfTuningAdmin.attribute.rule.IncreasePercentage.option.15=15%
perfTuningAdmin.attribute.rule.IncreasePercentage.option.20=20%
perfTuningAdmin.attribute.rule.IncreasePercentage.option.25=25%
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.0.1=100 bytes
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.0.5=500 bytes
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.1=1 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.10=10 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.100=100 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.120=120 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.128=128 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.16=16 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.20=20 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.32=32 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.40=40 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.48=48 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.5=5 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.60=60 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.64=64 K
perfTuningAdmin.attribute.rule.MaximinSessionSizeInK.option.8=8 K
perfTuningAdmin.attribute.rule.MemoryLeakRule.analyzeExpandingHeap=Analyze expanding heap
perfTuningAdmin.attribute.rule.MemoryLeakRule.enableDebugFile=Enable debug file
perfTuningAdmin.attribute.rule.MemoryLeakRule.expandingFreePercentage=Expanding heap free memory threshold.
perfTuningAdmin.attribute.rule.MemoryLeakRule.expandingHeapPercentage=Expanding heap percentage of maxHeap before analysis.
perfTuningAdmin.attribute.rule.MemoryLeakRule.historicalMode=Historical Mode
perfTuningAdmin.attribute.rule.MemoryLeakRule.keepTimes=Keep time statistics
perfTuningAdmin.attribute.rule.MemoryLeakRule.minDuration=Minimum duration in between interations of the rule
perfTuningAdmin.attribute.rule.MemoryLeakRule.minMemoryPercentage=Minimum required percentage of the heap that is free.
perfTuningAdmin.attribute.rule.MemoryLeakRule.numberLeaves=Number of raw data points
perfTuningAdmin.attribute.rule.MemoryLeakRule.numberOfDecreasingExceptions=Number of decreasing exceptions
perfTuningAdmin.attribute.rule.MemoryLeakRule.summaryMech=Summary mechanism
perfTuningAdmin.attribute.rule.MemoryLeakRule.treeHeight=Number of summaries
perfTuningAdmin.attribute.rule.MinCpuUsageForWorkingSystem.option.30=30%
perfTuningAdmin.attribute.rule.MinCpuUsageForWorkingSystem.option.50=50%
perfTuningAdmin.attribute.rule.MinCpuUsageForWorkingSystem.option.70=70%
perfTuningAdmin.attribute.rule.MinCpuUsageForWorkingSystem.option.90=90%
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.0=10%
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.10=10%
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.100=pool should be fully used
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.20=20%
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.30=30%
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.40=40%
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.50=50%
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.60=60%
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.70=70%
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.80=80%
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.85=85%
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.90=90%
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.option.95=95%
perfTuningAdmin.attribute.rule.RefreshIteration.option.0=never
perfTuningAdmin.attribute.rule.RefreshIteration.option.1=every time
perfTuningAdmin.attribute.rule.RefreshIteration.option.10=every 10th iteration
perfTuningAdmin.attribute.rule.RefreshIteration.option.3=every 3rd iteration
perfTuningAdmin.attribute.rule.SessionSizeTimeRule.option.1=1 millisecond
perfTuningAdmin.attribute.rule.SessionSizeTimeRule.option.10=10 milliseconds
perfTuningAdmin.attribute.rule.SessionSizeTimeRule.option.100=100 milliseconds
perfTuningAdmin.attribute.rule.SessionSizeTimeRule.option.1000=1 second
perfTuningAdmin.attribute.rule.SessionSizeTimeRule.option.10000=10 seconds
perfTuningAdmin.attribute.rule.SessionSizeTimeRule.option.5=5 milliseconds
perfTuningAdmin.attribute.rule.SessionSizeTimeRule.option.50=50 milliseconds
perfTuningAdmin.attribute.rule.SessionSizeTimeRule.option.500=500 milliseconds
perfTuningAdmin.attribute.rule.SessionSizeTimeRule.option.5000=5 seconds
perfTuningAdmin.attribute.rule.SuggestedDecreaseOfNonUsedThreads.option.100=100%
perfTuningAdmin.attribute.rule.SuggestedDecreaseOfNonUsedThreads.option.50=50%
perfTuningAdmin.attribute.rule.SuggestedDecreaseOfNonUsedThreads.option.60=60%
perfTuningAdmin.attribute.rule.SuggestedDecreaseOfNonUsedThreads.option.70=70%
perfTuningAdmin.attribute.rule.SuggestedDecreaseOfNonUsedThreads.option.80=80%
perfTuningAdmin.attribute.rule.SuggestedDecreaseOfNonUsedThreads.option.90=90%
perfTuningAdmin.attribute.rule.applicable=Unknown advice does not apply.
perfTuningAdmin.attribute.rule.applicable.applicable.disable=Advice applicable. Disable
perfTuningAdmin.attribute.rule.applicable.applicable.enable=Advice applicable. Enable
perfTuningAdmin.attribute.rule.applicable.notApplicable=Advice does not apply in this environment.
perfTuningAdmin.attribute.rule.minMemoryPercentage.option.10=At least 10 percent of the pool is consistantly free
perfTuningAdmin.attribute.rule.minMemoryPercentage.option.15=At least 15 percent of the pool is consistantly free
perfTuningAdmin.attribute.rule.minMemoryPercentage.option.20=At least 20 percent of the pool is consistantly free
perfTuningAdmin.attribute.rule.minMemoryPercentage.option.3=At least 3 percent of the pool is consistantly free
perfTuningAdmin.attribute.rule.minMemoryPercentage.option.5=At least 5 percent of the pool is consistantly free
perfTuningAdmin.attribute.rule.minMemoryPercentage.option.7=At least 7 percent of the pool is consistantly free
perfTuningAdmin.attribute.rule.numberLeaves.option.10=10 times
perfTuningAdmin.attribute.rule.numberLeaves.option.3=3 times
perfTuningAdmin.attribute.rule.numberLeaves.option.4=4 times
perfTuningAdmin.attribute.rule.numberLeaves.option.5=5 times
perfTuningAdmin.attribute.rule.numberOfDecreasingExceptions.option.10=10 times
perfTuningAdmin.attribute.rule.numberOfDecreasingExceptions.option.3=3 times
perfTuningAdmin.attribute.rule.numberOfDecreasingExceptions.option.4=4 times
perfTuningAdmin.attribute.rule.numberOfDecreasingExceptions.option.5=5 times
perfTuningAdmin.attribute.rule.numberOfProcessors.option.1=1
perfTuningAdmin.attribute.rule.numberOfProcessors.option.12=12
perfTuningAdmin.attribute.rule.numberOfProcessors.option.2=2
perfTuningAdmin.attribute.rule.numberOfProcessors.option.24=24
perfTuningAdmin.attribute.rule.numberOfProcessors.option.4=4
perfTuningAdmin.attribute.rule.numberOfProcessors.option.8=8
perfTuningAdmin.attribute.rule.stdev.option.1=1
perfTuningAdmin.attribute.rule.stdev.option.10=10
perfTuningAdmin.attribute.rule.stdev.option.15=15
perfTuningAdmin.attribute.rule.stdev.option.2=2
perfTuningAdmin.attribute.rule.stdev.option.20=20
perfTuningAdmin.attribute.rule.stdev.option.25=25
perfTuningAdmin.attribute.rule.stdev.option.30=30
perfTuningAdmin.attribute.rule.stdev.option.4=4
perfTuningAdmin.attribute.rule.stdev.option.6=6
perfTuningAdmin.attribute.rule.stdev.option.8=8
perfTuningAdmin.attribute.rule.stdev.option.9=9
perfTuningAdmin.attribute.rule.summaryMech.option.max=Maximum
perfTuningAdmin.attribute.rule.summaryMech.option.mean=Mean
perfTuningAdmin.attribute.rule.summaryMech.option.min=Minimum
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.10=10
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.120=120
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.160=160
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.20=20
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.200=200
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.240=240
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.260=260
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.300=300
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.320=320
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.340=340
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.40=40
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.50=50
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.option.80=80
perfTuningAdmin.attribute.rule.treeHeight.option.10=10 times
perfTuningAdmin.attribute.rule.treeHeight.option.3=3 times
perfTuningAdmin.attribute.rule.treeHeight.option.4=4 times
perfTuningAdmin.attribute.rule.treeHeight.option.5=5 times
perfTuningAdmin.attribute.traceResponseEnabled=WebSphere admin response enabled
perfTuningAdmin.attribute.traceResponseLevel=WebSphere admin response level 
perfTuningAdmin.attribute.true=true
perfTuningAdmin.component.displayName=Advice applied to component
perfTuningAdmin.componentName.J2C.ConnectionManager=J2C Connection Manager
perfTuningAdmin.componentName.datasource=Data Source
perfTuningAdmin.componentName.jvm=Jvm
perfTuningAdmin.componentName.orb=Orb Service
perfTuningAdmin.componentName.unknown=Unknown component name - could not translate
perfTuningAdmin.componentName.webContainer=Web Container
perfTuningAdmin.componentName.webContainer.cache=Web Container Dynamic Caching
perfTuningAdmin.componentName.webContainer.session=Web Container Session Manager
perfTuningAdmin.disable=Disable
perfTuningAdmin.disableRule=Disable Advice
perfTuningAdmin.displayName=Performance and Diagnostic Advisor Configuration
perfTuningAdmin.enable=Enable
perfTuningAdmin.enable.displayName=Enable Performance and Diagnostic Advisor
perfTuningAdmin.enable.units=Enable
perfTuningAdmin.enableRule=Enable Advice
perfTuningAdmin.immediateAlertName.LTCConnPerThreadLimitAlert=Thread Max Connections exceeded Diagnostic Alert
perfTuningAdmin.immediateAlertName.LTCNestingAlert=LTC Nesting Threshold Exceeded Alert
perfTuningAdmin.immediateAlertName.LTCSerialReuseViolationAlert=Serial Reuse Violation Diagnostic Alert
perfTuningAdmin.immediateAlertName.claimVictimAlert=claimVictim Alert
perfTuningAdmin.immediateAlertName.connErrorAlert=Connection Error Alert
perfTuningAdmin.immediateAlertName.connLowEffAlert=Connection Low Percent Efficiency Alert
perfTuningAdmin.immediateAlertName.connWaitTOAlert=connectionWaitTimeout Exceeded Alert
perfTuningAdmin.immediateAlertName.hungConnModeAlert=Hung Connection Block Entered/Exited Alert
perfTuningAdmin.immediateAlertName.poolLoadAlert=High Pool Load Alert
perfTuningAdmin.immediateAlertName.poolLowEffAlert=Pool Low Percent Efficiency Alert
perfTuningAdmin.immediateAlertName.pretestBlockModeAlert=Pretest Connection block mode entered/exited Diagnostic Alert
perfTuningAdmin.immediateAlertName.surgeModeAlert=Surge Mode Alert
perfTuningAdmin.object.must.be.selected=You must select at least one advice name to perform this action.
perfTuningAdmin.operation.enable=Enable Performance and Diagnostic Advisor Framework
perfTuningAdmin.operation.execute=Execute
perfTuningAdmin.operation.noExecute=Don't execute
perfTuningAdmin.operation.reInit=Reset Performance and Diagnostic Advisor
perfTuningAdmin.operation.takeHeapDump=Take Multiple HeapDumps
perfTuningAdmin.operation.unknown=Unknown Operation
perfTuningAdmin.operation.updateXmlFile=Save current advisor settings
perfTuningAdmin.options.alertLevelAlerts=alerts
perfTuningAdmin.options.alertLevelAll=all
perfTuningAdmin.options.alertLevelNone=none
perfTuningAdmin.options.duration.1Hour=1 hour
perfTuningAdmin.options.duration.30Minutes=30 minutes
perfTuningAdmin.options.duration.8Hours=8 hours
perfTuningAdmin.options.duration.sixty=1 minute
perfTuningAdmin.options.duration.ten=10 seconds
perfTuningAdmin.options.maxAlertStreak.never=0
perfTuningAdmin.options.maxAlertStreak.one=1
perfTuningAdmin.options.maxAlertStreak.three=3
perfTuningAdmin.performanceImpact.displayName=Performance impact
perfTuningAdmin.performanceImpact.high=High
perfTuningAdmin.performanceImpact.low=Low
perfTuningAdmin.performanceImpact.med=Medium
perfTuningAdmin.performanceImpact.veryHigh=Very High
perfTuningAdmin.ruleEngine.displayName=Performance and Diagnostic Advisor Configuration
perfTuningAdmin.ruleName.DSPoolMinAndMaxSize=Connection Pool Size
perfTuningAdmin.ruleName.DSPoolMinAndMaxSize.enable=Data source connection pool advice
perfTuningAdmin.ruleName.DSPrepStmtRule=Prepared Statement Cache Size
perfTuningAdmin.ruleName.DSPrepStmtRule.enable=Prepared statement cache advice
perfTuningAdmin.ruleName.DynaCache=Web Container Dynamic Caching
perfTuningAdmin.ruleName.JvmHeapSizeGc=Jvm Heap Size
perfTuningAdmin.ruleName.LiveSessionRule=Live Session
perfTuningAdmin.ruleName.LiveSessionRule.applicable=Session cache advice 
perfTuningAdmin.ruleName.LiveSessionRule.enable=Session cache advice
perfTuningAdmin.ruleName.LiveSessionsRule=Session Cache Size with Overflow Enabled
perfTuningAdmin.ruleName.MemoryLeakPrototype=Memory Leak Rule
perfTuningAdmin.ruleName.MemoryLeakPrototype.applicable=Memory Leak Rule does not apply
perfTuningAdmin.ruleName.MemoryLeakPrototype.enable=Memory Leak Rule Enablement
perfTuningAdmin.ruleName.NoRoomForNewSessionRule=Session Cache Size with Overflow Disabled
perfTuningAdmin.ruleName.NoRoomForNewSessionRule.applicable=No room for new session advice
perfTuningAdmin.ruleName.NoRoomForNewSessionRule.enable=No room for new session advice
perfTuningAdmin.ruleName.OrbPoolRule=Bounded ORB Service Thread Pool
perfTuningAdmin.ruleName.OrbPoolRule.applicable=ORB pool advice
perfTuningAdmin.ruleName.OrbPoolRule.enable=ORB thread pool advice
perfTuningAdmin.ruleName.OrbUnboundedPoolRule=Unbounded ORB Service Thread Pool
perfTuningAdmin.ruleName.OrbUnboundedPoolRule.applicable=Unbounded ORB pool advice
perfTuningAdmin.ruleName.OrbUnboundedPoolRule.enable=Unbounded growth of ORB threads advice
perfTuningAdmin.ruleName.PoolRule=Thread Pool
perfTuningAdmin.ruleName.ServletEnginePoolRule=Bounded Web Container Thread Pool
perfTuningAdmin.ruleName.ServletEnginePoolRule.enable=Web container thread pool advice
perfTuningAdmin.ruleName.ServletEngineUnboundedPoolRule=Unbounded Web Container Thread Pool
perfTuningAdmin.ruleName.ServletEngineUnboundedPoolRule.applicable=Servlet engine unbounded pool advice
perfTuningAdmin.ruleName.ServletEngineUnboundedPoolRule.enable=Unbounded growth of web container threads advice
perfTuningAdmin.ruleName.SessionSizeRule=Persisted Session Size
perfTuningAdmin.ruleName.SessionSizeRule.applicable=Session size advice
perfTuningAdmin.ruleName.SessionSizeRule.enable=Session size advice
perfTuningAdmin.ruleName.SessionSizeTimeRule=Persisted Session Time
perfTuningAdmin.ruleName.SessionTimeRule.applicable=Session read/write time advice
perfTuningAdmin.ruleName.SessionTimeRule.enable=Session read/write time advice
perfTuningAdmin.ruleName.SessionWithoutPersistenceRule=Session Size Without Persistence
perfTuningAdmin.ruleName.UnboundedPoolRule=Unbounded Pool
perfTuningAdmin.ruleName.config.ConnPool=Connection Pool Configuration
perfTuningAdmin.ruleName.config.DynaCache=Web Container Dynamic Caching Configuration
perfTuningAdmin.ruleName.config.JvmHeap=Jvm Heap Configuration
perfTuningAdmin.ruleName.config.OrbPool=ORB Pool Configuration
perfTuningAdmin.ruleName.config.WebContainerPool=Web Container Pool Configuration
perfTuningAdmin.ruleName.unknown=Unknown rule name - could not translate
perfTuningAdmin.status.displayName=Advice status
perfTuningAdmin.suggested.resources.mdd4j=Diagnosing out-of-memory errors and Java heap memory leaks
perfTuningAdmin.warning.disableDataPoints=The Advisor was disabled.  For best performance, disable any PMI datapoints no longer required. 
perfTuningAdmin.warning.noMBean=The Runtime Performance Advisor MBean has not started and there are no runtime settings available.  This is either because the server is not started, or has just been started and the MBean has not fully initialized. 
perfTuningAdmin.warning.ruleAlreadyStarted={0} has already been started.
perfTuningAdmin.warning.ruleAlreadyStopped={0} has already been stopped.
perfTuningAdmin.warning.ruleNotApplicable=The Rule could not be stopped or started because it is not applicable to the current WebSphere configuration.
perfalert.heapDump.exception.notSupported=Heap Dumps are currently not supported for this vendor.
perfalert.webui.title.noPmi=Enable Performance Monitoring Infrastructure (PMI) and restart both the Application Server {0} and well as the Node Agent on Node {1}.
perfalert.webui.title.noPmi.nodeAgent=Enable Performance Monitoring Infrastructure (PMI), and then restart the NodeAgent on Node {0} if you wish to use Runtime Performance Advisor.
perfalert.webui.title.noPmi.server=Enable Performance Monitoring Infrastructure (PMI), and then restart the Application Server {0} if you wish to use Runtime Performance Advisor.


pd.attribute.enabled.des=Enables immediate advice framework and produces immediate alerts for performance and diagnostics.
pd.ruleName.outOfMemory.des=Describes the out-of-memory rule.
pd.ruleName.tooManyConnections.des=Describes the too-many-connections rule.
perfTuningAdmin.advice.config.description=Select the advice that you want to enable or disable.
perfTuningAdmin.adviceParam.config.description=Configure advice parameters.
perfTuningAdmin.attribute.des.duration=Specifies the time between iterations of the Performance and Diagnostic Advisor.
perfTuningAdmin.attribute.des.enabled=Specifies whether the Performance and Diagnostic Advisor runs when the server is first started.
perfTuningAdmin.attribute.des.fileResponseEnabled=Specifies whether warnings are sent to a text file.
perfTuningAdmin.attribute.des.fileResponseLevel=Specifies the type of warnings sent to the debug file.
perfTuningAdmin.attribute.des.logLevel=Specifies the type of messages that are logged.
perfTuningAdmin.attribute.des.mBeanResponseEnabled=Specifies if warnings are sent out as MBean notifications.
perfTuningAdmin.attribute.des.mBeanResponseLevel=Specifies the type of warnings that are sent out as MBean notifications.
perfTuningAdmin.attribute.des.maxAlertStreak=Refers to the number of consecutive warnings that are issued before the threshold is relaxed. For example, if the maximum warning sequence is set to 3, the advisor sends only three warnings to indicate that the prepared statement cache is overflowing.
perfTuningAdmin.attribute.des.memoryLeakDataCollection=Specifies whether the Performance and Diagnostic Advisor automatically generates heap dumps for post analysis when suspicious memory activity is detected.
perfTuningAdmin.attribute.des.pmiEnabled=Specifies whether or not all the necessary PMI services are enabled.
perfTuningAdmin.attribute.des.traceResponseEnabled=Specifies whether advisor warnings are sent to the administrative console and server logs.
perfTuningAdmin.attribute.des.traceResponseLevel=Specifies the type of warnings that are sent to the administrative console.
perfTuningAdmin.attribute.des.warnings=Details advisor warnings.
perfTuningAdmin.attribute.heapDump.fileNames.des=Specifies the names of the heap dump files that are automatically generated.
perfTuningAdmin.attribute.heapDump.heapDumpTriggerPolicy.des=Specifies the type of policy to use for generating automated heap dumps.
perfTuningAdmin.attribute.heapDump.maxDumpsOnDisk.des=Specifies the maximum number of heap dumps that are allowed on disk.
perfTuningAdmin.attribute.heapDump.numberOfDumps.des=Specifies the number of heap dumps that the advisor attempts.
perfTuningAdmin.attribute.heapDump.status.des=Specifies the status of the automated heap dump response to memory leak detection.
perfTuningAdmin.attribute.rule.CalculationInterval.des=Specifies the length of time over which data is taken for this advice. PMI data is taken over an interval of time and averaged to provide advice.
perfTuningAdmin.attribute.rule.CpuNotSaturated.des=If the processor is less than the specified number, the system is not saturated.
perfTuningAdmin.attribute.rule.DiscardRateThreshold.des=Specifies the maximum rate for prepared statement discards. 
perfTuningAdmin.attribute.rule.HighUsageThreshold.des=Specifies the upper bound for utilization of a typical well-tuned pool.
perfTuningAdmin.attribute.rule.IncreasePercentage.des=Specifies the percentage increase that is suggested by the advisor for the pool.
perfTuningAdmin.attribute.rule.MaxSessionReadTimeInMs.des=Specifies the maximum time that is taken for sessions that are read from the persistent store.
perfTuningAdmin.attribute.rule.MaxSessionWriteTimeInMs.des=Specifies the maximum time that is taken for a session that is written to the persistent store.
perfTuningAdmin.attribute.rule.MaximinReadSessionSizeInK.des=Specifies the maximum size of the sessions that are read from the persistent store.
perfTuningAdmin.attribute.rule.MaximinWriteSessionSizeInK.des=Specifies the maximum size of sessions that are written to the persistent store.
perfTuningAdmin.attribute.rule.MemoryLeakRule.historicalMode.des=Specifies whether to include historical results in the current results.
perfTuningAdmin.attribute.rule.MinCpuUsageForWorkingSystem.des=Specifies the minimum number of processors indicating that the system is under load.
perfTuningAdmin.attribute.rule.MinPercentOfPoolUsed.des=Specifies the lower bound for utilization of a typical well-tuned pool.
perfTuningAdmin.attribute.rule.RefreshIteration.des=For every specified number of iterations, the rule searches for new data points.
perfTuningAdmin.attribute.rule.SuggestedDecreaseOfNonUsedThreads.des=Specifies the percentage decrease that is suggested by the advisor for the pool.
perfTuningAdmin.attribute.rule.analyzeExpandingHeap.des=Specifies whether to analyze memory trends while the heap is still expanding.
perfTuningAdmin.attribute.rule.enable.des=This rule specifies whether or not the advice is enabled.
perfTuningAdmin.attribute.rule.enableDebugFile.des=Specifies whether the debug file is enabled for the memory leak rule.
perfTuningAdmin.attribute.rule.expandingFreePercentage.des=If the heap is consistently expanding and free memory is less than this threshold, the heap may run out of resources, causing a memory leak.
perfTuningAdmin.attribute.rule.expandingHeapPercentage.des=When the heap is expanding, this threshold describes what percentage of the maximum heap size must be used before memory leak analysis is performed.
perfTuningAdmin.attribute.rule.keepTimes.des=Specifies whether to track the time that data points are collected. This rule helps in determining memory causes, but increases the cost of data collection.
perfTuningAdmin.attribute.rule.minDuration.des=Specifies the minimum amount of time, in seconds, between iterations of the rule.  This parameter is used only if the duration of the advisor is less than the value set for this parameter.
perfTuningAdmin.attribute.rule.minMemoryPercentage.des=The JVM spends excessive time garbage collecting when the amount of free memory in the heap is too small.
perfTuningAdmin.attribute.rule.numberLeaves.des=Specifies the number of raw and summarized data points. When the given number of data points is reached, the data is summarized and discarded.  This number also determines the number of data points that are available for trend analysis of summarized data.
perfTuningAdmin.attribute.rule.numberOfDecreasingExceptions.des=Specifies the number of data points that are allowed to pass or fail a trend test.
perfTuningAdmin.attribute.rule.numberOfProcessors.des=Specifies the number of processors on the server. This setting is critical to ensure accurate advice for the specific configuration of the system.
perfTuningAdmin.attribute.rule.stdev.des=Specifies the standard deviation that is supported for threads in the pool.
perfTuningAdmin.attribute.rule.summaryMech.des=Specifies the data summary method before the raw data is discarded.
perfTuningAdmin.attribute.rule.tooManyThreadsPerProcessor.des=Specifies the maximum number of threads per processor.
perfTuningAdmin.attribute.rule.treeHeight.des=Specifies the number of times that data is summarized before it is discarded.
perfTuningAdmin.config.description=Specifies the configuration for the Performance and Diagnostic Advisor framework, comprised of periodic and immediate alerts.  Periodic alerts are generated based upon historical analysis of PMI data. Immediate alerts are initiated by WebSphere Application Server components. 
perfTuningAdmin.description=Specifies the configuration for the Performance and Diagnostic Advisor framework.
perfTuningAdmin.enable.description=Specifies whether the Performance and Diagnostic Advisor analyzes system data and component initiated alerts.
perfTuningAdmin.immediateAlertName.LTCNestingAlert.des=Alerts the user if a high number of local transaction containments are started on a thread before completion.
perfTuningAdmin.immediateAlertName.LTCSerialReuseViolationAlert.des=Alerts the user if one or more local transaction containments on a thread utilizes too many ManagedConnection or PoolableConnection objects for DataSources connections.
perfTuningAdmin.immediateAlertName.LTCSerialReuseViolationAlertEnabled.des=Alerts the user when a serial reuse violation occurs within a local transaction containment.
perfTuningAdmin.immediateAlertName.claimVictimAlert.des=This alert monitors the rate at which victims are claimed and provides a breakdown of the reason.
perfTuningAdmin.immediateAlertName.connErrorAlert.des=Alerts the user when the threshold for unstable connections is exceeded.  This alert indicates a possible problem with the back-end system.
perfTuningAdmin.immediateAlertName.connLowEffAlert.des=Alerts the user if the percentage of time that a connection is held drops below a threshold.
perfTuningAdmin.immediateAlertName.connWaitTOAlert.des=Configure this alert to send if the number of connectionWaitTimeoutException exceptions within a given time interval exceeds the threshold.
perfTuningAdmin.immediateAlertName.hungConnModeAlert.des=Alerts the user if the system stops while connection blocking starts or stops.  This occurs only when connection detection is configured.
perfTuningAdmin.immediateAlertName.poolLoadAlert.des=Alerts the user if the average pool load over the given window exceeds the threshold.
perfTuningAdmin.immediateAlertName.poolLowEffAlert.des=Alerts the user if the average time that a connection is held for all the connections in the pool drops below a threshold.
perfTuningAdmin.immediateAlertName.pretestBlockModeAlert.des=When pretesting of connections is enabled, an alert is sent any time the allocation of connection requests is blocked due to a pretest failure.  Another alert is sent when connection requests are permitted again.
perfTuningAdmin.immediateAlertName.surgeModeAlert.des=When surge mode is configured, an alert is sent when surge mode engages or disengages.
perfTuningAdmin.operation.des.unknown=Unknown Description.
perfTuningAdmin.operation.enable.des=Run the Performance and Diagnostic Advisor in the Production Simulation and Test environment.  Performance advice is most applicable during peak load, when the processor utilization is very high.
perfTuningAdmin.operation.reInit.des=Thresholds and advice state are reset to initial values.
perfTuningAdmin.operation.takeHeapDump.des=If running on an IBM Software Developer Kit, Java technology edition, the Developer Kit takes multiple heap dumps based upon downward trends in memory.
perfTuningAdmin.operation.updateXmlFile.des=Saves the current settings for the next time that the server is started.
perfTuningAdmin.ruleEngine.description=The Performance and Diagnostic Advisor analyzes PMI data and receives notifications regarding performance and diagnostic information from components. Use this page to specify settings for the Performance and Diagnostic Advisor. Performance issues can be related to memory leaks in the system. Use the Memory Dump Diagnostic for Java tool, a separate memory leak analysis utility, for detecting memory leaks.
perfTuningAdmin.ruleName.DSPoolMinAndMaxSize.des=Warns when the number of connections in the pool is poorly configured.
perfTuningAdmin.ruleName.DSPrepStmtRule.des=Warns when the prepared statement cache is too small.
perfTuningAdmin.ruleName.LiveSessionRule.applicable.des=This rule applies only when the session cache can overflow.
perfTuningAdmin.ruleName.LiveSessionRule.des=Warns when the session cache is too small. This rule applies only when the allowOverflow option is enabled.
perfTuningAdmin.ruleName.MemoryLeakPrototype.applicable.des=Specifies whether the memory leak rule is applicable to the current environment.
perfTuningAdmin.ruleName.NoRoomForNewSessionRule.applicable.des=This rule applies only when the session cache cannot overflow.
perfTuningAdmin.ruleName.NoRoomForNewSessionRule.des=Warns when sessions are being rejected because the session cache is too small.  This rule applies only when the allowOverflow option is not enabled.
perfTuningAdmin.ruleName.OrbPoolRule.applicable.des=This rule is always available.
perfTuningAdmin.ruleName.OrbPoolRule.des=Warns when the number of threads in the pool seems to be poorly configured.
perfTuningAdmin.ruleName.OrbUnboundedPoolRule.applicable.des=This applies only when the thread pool for the servlet engine is expandable.
perfTuningAdmin.ruleName.OrbUnboundedPoolRule.des=Warns when the number of threads seems to be growing too large. This rule applies when the thread pool is configured as unbounded.
perfTuningAdmin.ruleName.ServletEnginePoolRule.applicable.des=Specifies that the servlet engine pool advice does not apply.
perfTuningAdmin.ruleName.ServletEnginePoolRule.des=Warns when the number of threads in the pool seems to be poorly configured.
perfTuningAdmin.ruleName.ServletEngineUnboundedPoolRule.applicable.des=This applies only when the thread pool for the servlet engine is expandable.
perfTuningAdmin.ruleName.ServletEngineUnboundedPoolRule.des=Warns when the number of threads is growing too large.  This rule applies when the thread pool is configured as unbounded.
perfTuningAdmin.ruleName.SessionSizeRule.applicable.des=This rule applies only when using persistent sessions. 
perfTuningAdmin.ruleName.SessionSizeRule.des=Warns when the data that is written to the persistent store is unusually large. This rule applies only when session persistence is enabled.
perfTuningAdmin.ruleName.SessionTimeRule.applicable.des=This rule applies only when using persistent sessions.
perfTuningAdmin.ruleName.SessionTimeRule.des=Warns when reading and writing of session data to the persistent store is unusually slow.  This rule applies only when session persistence is enabled.
