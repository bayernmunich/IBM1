#  Note to Translators:
#  Translate words on the right hand side of the = sign.
#  Do not translate {0}, {1}, %1, %2 etc.
#  Preserve all spaces after a backslash (\) even at the end of a line.
#
#  Whenever an apostrophe is needed within this file, please do not double it. It has
#  been determined that the code that uses this file expects only a single
#  apostrophe, and should work properly when a single apostrophe is provided.

#CMVCPATHNAME XD/ws/code/webui.xd.core/src/xdcore/WEB-INF/plugin.properties
#ISMESSAGEFILE FALSE
# NLS_MESSAGEFORMAT_NONE

#bug 6431 begin - adding in msg key for task management
freemem.chart.msg=View Free Memory chart for {0}.
#bug 6431 end.

#ruleLayout.jsp
rule.rules=Rules
rule.rules.desc=Rule set.
matchrule.column.priority=Priority
matchrule.column.rule=Rule

#ruleEditLayout.jsp
rule.edit=Edit rule
rule.edit.desc=Create a rule by hand or get quick help from the subexpression builder link.
rule.edit.link.subexpression=Subexpression builder
rule.edit.link.subexpression.close=Close
rule.edit.matchrule.label=If
rule.edit.matchrule.label.desc=A conditional expression for a rule.
rule.syntax.help=Syntax help

#ruleActionLayout.jsp
rule.action.matchrule.emptyrule=--- No rule specified ---
default.rule.action.matchrule.service=If no rules apply, then classify to transaction class
rule.action.matchrule.service=Then classify to transaction class
rule.action.matchrule.service.desc=Classify to the specified transaction class.
default.rule.action.matchrule.service.bizgrid=If no rules apply, then classify to transaction class
rule.action.matchrule.service.bizgrid=Then classify to transaction class
rule.action.matchrule.service.bizgrid.desc=Classify to the specified transaction class.
default.rule.action.matchrule.routing=If no rules apply, then
rule.action.matchrule.routing=Then
rule.action.matchrule.routing.desc=An action that occurs when the conditional expression is true.
rule.action.matchrule.actiontype.routing=Action type
rule.action.matchrule.actiontype.routing.desc=Select an action type.
rule.action.matchrule.appedition.routing=Application edition name
rule.action.matchrule.appedition.routing.desc=Select an application edition name.
rule.action.matchrule.gsc.odr.routing=Generic server cluster
rule.action.matchrule.gsc.odr.routing.desc=Select a generic server cluster.
rule.action.matchrule.redirect.url=Redirect to URI
rule.action.matchrule.redirect.url.desc=Specify a URI when redirecting.
rule.action.matchrule.reject.returncode=Return code
rule.action.matchrule.reject.returncode.desc=Specify return code to use when rejecting routing.
rule.action.matchrule.validate.button=Validate Rule

#ruleBuilderLayout.jsp
rule.builder.operand.label=Select operand:
rule.builder.operand.label.desc=Associate acceptable values with selected operand.
rule.builder.appendwith=Logical operator
rule.builder.appendwith.desc=Append the subexpression you generate to the end of the rule with this logical operator.
rule.builder.appendvalue=Appended value equal to
rule.builder.appendvalue.desc=This value is appended to the operand to further classify it.
rule.builder.operator=Operator
rule.builder.operator.desc=The operator used to associate values with an operand.
rule.builder.value=Value
rule.builder.value.desc=Value to compare the operand with.
rule.builder.lowerbound=Lower Bound
rule.builder.lowerbound.desc=Lower bound of range to compare the operand with.
rule.builder.upperbound=Upper Bound
rule.builder.upperbound.desc=Upper bound of range to compare the operand with.
rule.builder.between.and=and
rule.builder=Build subexpression
rule.builder.generate.button=Generate subexpression
rule.builder.append.button=Append
rule.builder.subexpression=Subexpression:
rule.builder.subexpression.desc=Rules can be made up of one or more subexpressions.

#inInputLayout.jsp
rule.builder.newInValue=Value
rule.builder.newInValue.desc=Value to be inserted in the list.
rule.builder.inlist=Values
rule.builder.inlist.desc=Values to associate with the selected operand.
rule.builder.add.button=Add >>
rule.builder.remove.button=<< Remove

#routingRulesLayout.jsp
sip.policy.routing.description=Create SIP routing policy for an ODR cluster or ODR.
sip.policy.routing.displayName=SIP Routing Policy
rule.action.matchrule.sip.rules.routing.desc= SIP Routing Rules
rule.action.matchrule.sip.rules.routing=SIP Routing Rules
default.rule.action.matchrule.sip.rules.routing=Default SIP Routing Rule
defaultsipruleset.title=SIP Rules
desc.defaultsipsruleset.text=SIP Rules
routing.rules.specify.by=Specify by
routing.rules.select.cell.name=Select cell name
routing.rules.select.server.name=Select server name
routing.rules.select.node.name=Select node name
routing.rules.select.app.name=Select application name
routing.rules.select.app.edition=Select application edition
routing.rules.select.app.module=Select application module
routing.rules.select.cluster.name=Select cluster name
routing.rules.selected.filters.name=Selected request routing filters
routing.rules.selected.filters.text=A list of all selected request routing filters.
routing.rules.specify=Specify where to route requests
select.action=Select action
select.routing.policy=Multi-cluster routing policy
myCell=myCell

#porletLayout.jsp
refresh=Refresh

#multiFilterLayout.jsp
filter.label.desc=To filter the following table, select columns by which to filter, then enter filter criteria (wildcards: *,?,%).
