

ActorRoles.description=Use this panel to configure the inbound and outbound URI for the actor role.
ClientBinding.MSD.description=Use this page to create, copy, and manage client policy set bindings.  These bindings provide system-specific configuration and can be reused across policy set attachments.  Scoping a binding to a security domain constrains the configuration options to those applicable to that domain and limits use of the binding to the specified domain.
ClientBinding.MSD.detail.description=Use this page to create a client binding which is reusable across policy sets and applications.  Use the Add button to select policy bindings and then be sure to provide configuration.  Empty bindings are deleted.  Scoping a binding to a security domain constrains the configuration options to those applicable to that domain and limits use of the binding to the specified domain.
ClientBinding.description=Use this page to create, copy, and manage client policy set bindings.  These bindings provide system-specific configuration and can be reused across policy set attachments.
ClientBinding.detail.description=Use this page to create a client binding which is reusable across policy sets and applications.  Use the Add button to select policy bindings and then be sure to provide configuration.  Empty bindings are deleted.
ClientBinding.title=General client policy set bindings
DefaultPolicySet.description=This is a default Policy Set.  You can view, transfer, or remove attachments, but you cannot edit the name, description, policies included, or policy details.
HTTPBinding.description=Use this page to define HTTP transport binding configuration.
HTTPBinding.displayName=HTTP transport
HTTPBinding.errormessage.required=To add the HTTP transport policy type to this binding, you must configure the proxy, basic authentication, or at least one custom property. You can additionally configure any combination of these settings.
HTTPBinding.fieldSet.proxyOutbound.displayName=Proxy for outbound service requests
HTTPBinding.fieldset.basicAuthOutbound.displayName=Basic authentication for outbound service requests
HTTPBinding.fieldset.basicAuthOutboundAsync.displayName=Basic authentication for outbound asynchronous service responses
HTTPBinding.fieldset.proxyOutboundAsync.displayName=Proxy for outbound asynchronous service responses
HTTPBinding.httpAsyncOutbound.displayName=HTTP Features for Asynchronous Service Responses
HTTPBinding.httpOutbound.displayName=HTTP Features for Outbound Service Requests
HTTPBinding.password.validateFail=The password and confirm password values for the {0} section do not match.
HTTPBinding.portNumber.validateFail=The port value for the {0} section must be a positive integer.
HTTPPolicyConfig.acceptRedirection.description=Select this check box to enable a URL that has been automatically redirected to be accepted.
HTTPPolicyConfig.acceptRedirection.displayName=Accept URL redirection automatically
HTTPPolicyConfig.chunkTransferEnc.description=Select this check box to enable chunked transfer encoding when a message is sent. This option is only available if HTTP 1.1 is selected in the Protocol version field.
HTTPPolicyConfig.chunkTransferEnc.displayName=Enable chunked transfer encoding
HTTPPolicyConfig.compressFormat.description=HTTP compression includes an Accept-Encoding header which is a publicly defined way to compress textual content transferred from web servers to browsers.
HTTPPolicyConfig.compressFormat.displayName=Compression format
HTTPPolicyConfig.compressRequest.description=Select this check box to enable request content to be compressed.  You can then select the compression method from the Compression format list.
HTTPPolicyConfig.compressRequest.displayName=Compress request content
HTTPPolicyConfig.compressResponse.description=Select this check box to enable response content to be compressed. You can then select the compression method from the Compression format list.
HTTPPolicyConfig.compressResponse.displayName=Compress response content
HTTPPolicyConfig.compression.displayName=Compression
HTTPPolicyConfig.connectTimeout.description=Specify the time, in seconds, in this field to enable the connection to time out.
HTTPPolicyConfig.connectTimeout.displayName=Connection timeout
HTTPPolicyConfig.description=Use this page to define HTTP transport policy configuration. HTTP features and HTTP connections polices are applied to client outbound and service provider asynchronous response outbound messages.
HTTPPolicyConfig.displayName=HTTP transport
HTTPPolicyConfig.httpConnections.displayName=HTTP Connections
HTTPPolicyConfig.httpFeatures.displayName=HTTP Features
HTTPPolicyConfig.maintainSession.description=Displays whether the HTTP session is enabled when a message is sent. Select this check box to enable an HTTP session.
HTTPPolicyConfig.maintainSession.displayName=Session enabled
HTTPPolicyConfig.messageResendOnce.description=Select this check box to enable a message to be sent again.
HTTPPolicyConfig.messageResendOnce.displayName=Resend enabled
HTTPPolicyConfig.persistConnection.description=Select this check box to enable the use of a persistent connection. This option is only available if HTTP 1.1 is selected in the Protocol version field.
HTTPPolicyConfig.persistConnection.displayName=Use persistent connection
HTTPPolicyConfig.protocolVersion.description=Use this list to select the version of HTTP to be used. The default value is HTTP 1.1. HTTP 1.0 is also a valid option.
HTTPPolicyConfig.protocolVersion.displayName=Protocol version
HTTPPolicyConfig.readTimeout.description=Specify the time, in seconds, in this field to enable the read to time out.
HTTPPolicyConfig.readTimeout.displayName=Read timeout
HTTPPolicyConfig.sendExpectHeader.description=Select this check box to enable the 'Expect 100-continue' request header when a message is sent. This option is only available if HTTP 1.1 is selected in the Protocol version field.
HTTPPolicyConfig.sendExpectHeader.displayName=Send 'Expect 100-continue' request header
HTTPPolicyConfig.writeTimeout.description=Specify the time, in seconds, in this field to enable the write to time out.
HTTPPolicyConfig.writeTimeout.displayName=Write timeout
JMSBinding.Heading.BasicAuthAsyncResponses.displayName=Basic Authentication for Asynchronous Service Responses
JMSBinding.Heading.BasicAuthRequests.displayName=Basic Authentication for Outbound Service Requests
JMSBinding.client.description=Use this page to define JMS transport client binding configuration.
JMSBinding.confirmPwd.description=Confirm password
JMSBinding.description=Use this page to define JMS transport binding configuration.
JMSBinding.displayName=JMS transport
JMSBinding.errormessage.required=To add the Java Messaging Service(JMS) transport policy type to this binding, you must either supply a user name and password for basic authentication or you must create at least one custom property.
JMSBinding.password.description=Specify the password used to create a secure connection to the JMS provider.
JMSBinding.provider.description=Use this page to define JMS transport service provider binding configuration.
JMSBinding.username.description=Specify the user name used to create a secure connection to the JMS provider.
JMSConnection.displayName=Client JMS Connection Properties
JMSPolicyConfig.description=Use this page to specify a client request timeout for JMS transport requests and to specify whether to allow transactional messaging for one-way and asynchronous operations.  The request timeout value specifies the amount of time the client will wait for a response after sending a request to the server.
JMSPolicyConfig.displayName=JMS transport
JMSpolicyConfig.timeout.description=Specifies a timeout for JMS transport requests.
JMSpolicyConfig.timeout.displayName=Request timeout
JMSpolicyConfig.transactionalMsg.description=When enabled, the client runtime will perform JMS messaging operations transactionally if the client application is running within an active transaction
JMSpolicyConfig.transactionalMsg.displayName=Allow transactional messaging for one-way and asynchronous operations
Manage.ApplicationPolicySets=Application policy sets
Manage.PSBAuthProt=Authentication and protection
Manage.PolicySets=Policy sets
PSASymmetric.confidentiality.displayName=Message Confidentiality Policies
PSASymmetric.confidentiality.initiator.description=Lists the tokens used for message encryption from initiator to recipient.
PSASymmetric.confidentiality.initiator.displayName=Initiator encryption token
PSASymmetric.confidentiality.recipient.description=Lists the tokens used for message encryption from recipient to initiator.
PSASymmetric.confidentiality.recipient.displayName=Recipient encryption token
PSASymmetric.confidentiality.sameAsIntegrity.description=Specifies that the token types used for integrity protection are also to be used for confidentiality protection.
PSASymmetric.confidentiality.sameAsIntegrity.displayName=Use the same token types that are used for integrity protection
PSASymmetric.description=With asymmetric tokens, the initiator uses a private key to encrypt or sign a message while the recipient uses the initiator corresponding public key tokens to decrypt or verify signatures.
PSASymmetric.displayName=Asymmetric signature and encryption policies
PSASymmetric.integrity.displayName=Message Integrity Policies
PSASymmetric.integrity.initiator.description=Lists the tokens used for message signature from initiator to recipient.
PSASymmetric.integrity.initiator.displayName=Initiator signature token
PSASymmetric.integrity.recipient.description=Lists the tokens used for message signature from recipient to initiator.
PSASymmetric.integrity.recipient.displayName=Recipient signature token
PSASymmetric.short.description=Asymmetric policies use public-private key pairs to sign and encrypt messages.
PSAlgorithmSuite.asymmetric.displayName=Algorithms for asymmetric tokens
PSAlgorithmSuite.asymmetric2.displayName=Algorithms for asymmetric tokens
PSAlgorithmSuite.canonAlg.description=Specifies whether to use inclusive or exclusive cannonicalization.
PSAlgorithmSuite.canonAlg.displayName=Cannonicalization algorithm
PSAlgorithmSuite.canonAlg.exclusive=Exclusive cannonicalization
PSAlgorithmSuite.canonAlg.inclusive=Inclusive cannonicalization
PSAlgorithmSuite.description=Message security policies specify cryptographic algorithms available, allowable key lengths, as well as cannonicalization algorithms for reconciling XML differences.
PSAlgorithmSuite.displayName=Algorithms
PSAlgorithmSuite.short.description=Algorithms specify a suite of cryptographic algorithms to use.
PSAlgorithmSuite.suite.description=Specifies the algorithm suite required for performing cryptographic operations with symmetric or asymmetric key based security tokens.
PSAlgorithmSuite.suite.displayName=Algorithm suite
PSAlgorithmSuite.symmetric.displayName=Algorithms for symmetric tokens
PSAlgorithmSuite.symmetric2.displayName=Algorithms for symmetric tokens
PSAlgorithmSuite.useTransform.description=Specifies whether security token reference transformation is used.
PSAlgorithmSuite.useTransform.displayName=Use security token reference transformation
PSAlgorithmSuite.xpathVersion.10=XPath 1.0
PSAlgorithmSuite.xpathVersion.20=XPathFilter 2.0
PSAlgorithmSuite.xpathVersion.description=Specifies the version of the XPath filter to use.
PSAlgorithmSuite.xpathVersion.displayName=XPath version
PSB.duplicate.name=A duplicate name exists. You must use a unique name.
PSB.duplicate.object=A duplicate object exists. You must use unique information.
PSBAddressing.desc=Click this link to configure addressing. These policies conform to the W3C WS-Addressing standards. The product enforces these policies on message exchanges targeted at services with this policy set.
PSBAddressing.description=Use this panel to modify the endpoint reference binding for Web service addressing (WS-Addressing). The product enforces this binding on applications that use WS-Addressing.
PSBAddressing.displayName=WS-Addressing
PSBAddressing.preventWLM.description=By default, when an application uses the WS-Addressing API createEndpointReference (service, port) method to create an endpoint reference in a cluster environment, that endpoint reference is workload managed. Select this option to prevent workload management of such endpoint references.
PSBAddressing.preventWLM.displayName=Prevents the workload management of endpoint references in clusters.
PSBAuthProt.asymmetric.token.error=There is an error in the {0} policy set definition for the {1} asymmetric token. Correct the definition before completing the configuration.
PSBAuthProt.bootstrap.displayName=Bootstrap policy authentication and protection
PSBAuthProt.custom.description=Configure custom bindings for tokens and message parts that are required by the policy set.
PSBAuthProt.default.description=Additional tokens and protections for message parts can be added to the default bindings.
PSBAuthProt.description=Follow the links to configure authentication, signature, and encryption information required by the policy.
PSBAuthProt.disable.sigConfirmation.protection.description=Click checkbox to disable implicit protection for signature confirmation.
PSBAuthProt.disable.sigConfirmation.protection.displayName=Disable implicit protection for signature confirmation
PSBAuthProt.disable.sigConfirmation.protection.error=Failed to disable implicit protection for signature confirmation. Check the server logs for more information.
PSBAuthProt.displayName=Authentication and protection
PSBAuthProt.generalbinding.description=Additional tokens and protections for message parts can be added to general bindings.
PSBAuthProt.sign.only.entire.description=When checkbox is enabled, each signature digest must cover the entire SOAP message body, an actual header element (a direct child of SOAP header) or a direct child element of the wsse:Security header.
PSBAuthProt.sign.only.entire.displayName=Sign only entire SOAP headers and body
PSBAuthProt.sign.only.entire.error=Failed to set sign only entire SOAP headers and body. Check the server logs for more information.
PSBAuthProt.status.configured=Configured
PSBAuthProt.status.notConfigured=Not configured
PSBAuthProt.status.orphan=Incompatible
PSBAuthProt.symmetric.token.error=There is an error in the {0} policy set definition for the {1} symmetric token. Correct the definition before completing the configuration.
PSBAuthenticationToken.DELETE=Delete
PSBAuthenticationToken.NEW=New Token
PSBAuthenticationToken.UNCONFIG=Unconfigure
PSBAuthenticationToken.displayName=Authentication tokens
PSBAuthenticationToken.name.displayName=Authentication token name
PSBAuthenticationToken.status.displayName=Status
PSBAuthenticationToken.tokenType.HL.displayName=Authentication Token Type
PSBAuthenticationToken.tokenType.displayName=Authentication token type
PSBAuthenticationToken.usage.displayName=Usage
PSBAuthenticationTokenV2.displayName=Authentication token generators and consumers
PSBBindingName.not.defined=The binding name must be defined before adding policies.
PSBBindingType.name.displayName=Binding Type
PSBCallBackHandler.authentication.category=Basic Authentication
PSBCallBackHandler.certificate.NEW=New...
PSBCallBackHandler.certificate.certificatestore.description=Specifies the name of the certificate store.
PSBCallBackHandler.certificate.certificatestore.displayName=Certificate store
PSBCallBackHandler.certificate.certificatestore.label=Certificate store
PSBCallBackHandler.certificate.trustAny.label=Trust any certificate
PSBCallBackHandler.certificate.trustedAchorStore.description=Specifies the name of the trust anchor.
PSBCallBackHandler.certificate.trustedAchorStore.displayname=Trusted anchor store
PSBCallBackHandler.certificates.description=Specifies whether to trust any certificate or to use a certificate store and trust anchor.
PSBCallBackHandler.certificates.displayName=Certificates
PSBCallBackHandler.className.custom.label=Use custom
PSBCallBackHandler.className.customClassName.description=Specifies the name of the callback handler implementation class. The callback handler must implement the javax.security.auth.callback.CallbackHandler class.
PSBCallBackHandler.className.customClassName.displayname=Custom class name
PSBCallBackHandler.className.default.label=Use built-in default
PSBCallBackHandler.className.defaultClassName.description=Specifies the name of the default callback handler implementation class.
PSBCallBackHandler.className.defaultClassName.displayname=Default class name
PSBCallBackHandler.className.description=Specifies the name of the callback handler implementation class. The callback handler must implement the javax.security.auth.callback.CallbackHandler class.
PSBCallBackHandler.className.displayName=Class Name
PSBCallBackHandler.description=Specifies the parameters for the callback handler that are used for generating the token. Because you can plug-in a custom callback handler, you must specify the implementation class name. The application server provides options for identity assertion, basic authentication, and the keystore that are passed to the callback handler implementation.
PSBCallBackHandler.displayName=Callback handler
PSBCallBackHandler.keystore.category=Keystore
PSBCallBackHandler.keystore.description=Specifies the name of a managed keystore to use.
PSBCallBackHandler.keystore.displayName=Name
PSBCallBackHandler.keystore.link.displayName=Custom keystore configuration
PSBCallBackHandler.keystore.option.custom=Custom
PSBCallBackHandler.keystore.option.none=None
PSBCallBackHandler.password.description=Specifies the default password that is passed to the constructor of the callback handler.
PSBCallBackHandler.password.displayName=Password
PSBCallBackHandler.passwordConfirm.description=Confirms the password that is provided in the Password field.
PSBCallBackHandler.passwordConfirm.displayName=Confirm password
PSBCallBackHandler.userName.description=Specifies the default user ID that is passed to the constructor of the callback handler.
PSBCallBackHandler.userName.displayName=User name
PSBCallBackHandler.warnings.noCustomKeystoreDefined=No custom keystore has been defined.  You must define a custom Keystore in order to use this keystore type.
PSBCaller.bootstrap.title=Bootstrap policy caller
PSBCaller.button.movedown=Move Down
PSBCaller.button.moveup=Move Up
PSBCaller.callback.handler.desc=Specifies the callback handler class name.
PSBCaller.callback.handler.displayName=Callback handler
PSBCaller.cbhCustomProps.displayName=Callback handler custom properties
PSBCaller.desc=The caller specifies the tokens or message part used for authentication.
PSBCaller.displayName=Caller
PSBCaller.identity.uri.desc=Specify the namespace URI that identifies the caller.
PSBCaller.identity.uri.displayName=Caller identity namespace URI
PSBCaller.identity.uri.title=Caller Identity Namespace URI
PSBCaller.jaasCustomProps.displayName=JAAS login custom properties
PSBCaller.localname.desc=Enter the local part of the caller definition used for authentication.
PSBCaller.localname.displayName=Caller identity local part
PSBCaller.localname.title=Caller Identity Local Part
PSBCaller.main.title=Main policy caller
PSBCaller.name.desc=Enter the name of the caller definition used for authentication.
PSBCaller.name.displayName=Name
PSBCaller.none=None
PSBCaller.object.must.be.selected=You must select at least one caller to perform this action.
PSBCaller.order.desc=Use Move Up and Move Down buttons to alter the order.
PSBCaller.order.displayName=Order
PSBCaller.order.highest=The highest order is 1. Move Up can not be performed on this caller.
PSBCaller.order.lowest=Caller is at the lowest order. Move Down can not be performed on this caller.
PSBCaller.order.only.one=Only one caller may be selected.
PSBCaller.order.select.one=One caller must be selected.
PSBCaller.reconfigure=Order has not been specified for Caller. To specify order and enable consumption of multiple authentication tokens on incoming messages, please reconfigure your Callers.
PSBCaller.signing.part.ref.desc=Custom bindings can be used to configure a signing part reference. This option is not available for default bindings. Select 'None' if no configuration is needed.
PSBCaller.signing.part.ref.displayName=Signing part reference
PSBCaller.trusted.localname.desc=Specify the local part for the identity assertion.
PSBCaller.trusted.localname.displayName=Trusted identity local part
PSBCaller.trusted.uri.desc=Specify the namespace URI for the identity assertion.
PSBCaller.trusted.uri.displayName=Trusted identity namespace URI
PSBCaller.use.assertion.desc=Enable configuration for a trusted identity assertion.
PSBCaller.use.assertion.displayName=Use identity assertion
PSBCaller.v6.order.not.valid=Can not assign order. Binding associated with the Caller does not support order.
PSBCaller.v7.ltpa.not.valid=LTPA is not a valid for Caller Identity Local Part. You may specify LTPAv2, see Help for additional information.
PSBCallers.bootstrap.title=Bootstrap policy callers
PSBCallers.desc=Callers are used to specify the token or message part used for authentication. The order is used to set each caller's priority relative to each other. The caller token that will be used for authentication will be the one with highest priority, based on decreasing order of preference.
PSBCallers.title=Callers
PSBCertStore.DELETE=Delete
PSBCertStore.NEWINBOUND=New Inbound...
PSBCertStore.NEWOUTBOUND=New Outbound...
PSBCertStore.UPDATERUNTIME=Update Runtime
PSBCertStore.description=A default location is provided for keeping certificates. Revoked certificates can be identified for service consumers. Certificate revocation lists can be referenced for both service consumers and generators.
PSBCertStore.direction.description=Specifies whether the certificate store is used for inbound or outbound certificates.
PSBCertStore.direction.displayName=Direction
PSBCertStore.displayName=Certificate store
PSBCertStore.fullPath.displayName=Full Path
PSBCertStore.name.description=Specifies the unique name of the certificate store.
PSBCertStore.name.displayName=Name
PSBCertStore.revokedCertificates.description=Lists certificate revocations to check the validity of the certificate.
PSBCertStore.revokedCertificates.displayName=Revoked certificates
PSBCertStore.x509Certificates.description=Specifies a list of revoked X.509 certificates.
PSBCertStore.x509Certificates.displayName=Intermediate X.509 certificates
PSBDirection.inbound=Inbound
PSBDirection.outbound=Outbound
PSBExternalKeyStore.description=Custom keystores are alternatives to the key management built into the Application Server.
PSBExternalKeyStore.displayName=Custom keystore configuration
PSBExternalKeyStore.key.pass.match=The key passwords must match.
PSBExternalKeyStore.keystore.pass.match=The keystore passwords must match.
PSBGeneral.error=An error occured while processing the data for your policy set or binding.  See the SystemOut.log file for the specific error message.
PSBInActorRoleURI.desc=Specifies the name of the uniform resource identifier (URI) for the inbound actor role URI that is used to define the intermediary or ultimate recipient of the inbound message.
PSBInActorRoleURI.displayName=Inbound actor role URI
PSBKey.alias.description=Specifies the certificate alias in the keystore.
PSBKey.alias.displayName=Alias
PSBKey.heading.displayName=Key
PSBKey.name.description=Specifies the DName of the certificate in the keystore.
PSBKey.name.displayName=Name
PSBKeyInfo.DELETE=Delete
PSBKeyInfo.NEWINBOUND=New Inbound...
PSBKeyInfo.NEWOUTBOUND=New Outbound...
PSBKeyInfo.bytes.units=bytes
PSBKeyInfo.clientLabel.desc=The portion of the label provided by the client that is used in the P_SHA-1 function to generate the derived key. If unspecified, the default value used is WS-SecureConversation.
PSBKeyInfo.clientLabel.label=Client label
PSBKeyInfo.derivedKeys.desc=Specifies whether the key information requires derived keys.
PSBKeyInfo.derivedKeys.label=Requires derived keys
PSBKeyInfo.description=Key information attributes define how cryptographic keys are generated or consumed. If the list of token generators or consumers is empty, create or configure these tokens through the Authentication and protection panel. Only configured tokens of the appropriate type are displayed in the list.
PSBKeyInfo.direction.description=Specifies whether the key information is used for inbound or outbound requests.
PSBKeyInfo.direction.displayName=Direction
PSBKeyInfo.displayName=Key information
PSBKeyInfo.keyLength.desc=Specifies the key length (valid range 16 - 32).
PSBKeyInfo.keyLength.label=Key length
PSBKeyInfo.name.description=Specifies the unique name that is used to identify the key information definition.
PSBKeyInfo.name.displayName=Name
PSBKeyInfo.nonceLength.desc=Specifies the nonce length (valid range 16 - 128).
PSBKeyInfo.nonceLength.label=Nonce length
PSBKeyInfo.overrideDefaults.desc=Specifying derived key values overrides the derived key information that the runtime generates by default.
PSBKeyInfo.overrideDefaults.label=Override Defaults
PSBKeyInfo.requireExplicit.desc=Requires that derived keys be explicitly specified with a WS-SecureConversation <DerivedKeyToken> element.
PSBKeyInfo.requireExplicit.label=Explicit derived keys
PSBKeyInfo.requireImplicit.desc=Requires that derived keys be implicitly specified with a WS-SecureConversation Nonce attribute on the WS-Security <SecurityTokenReference> element.
PSBKeyInfo.requireImplicit.label=Implicit derived keys
PSBKeyInfo.serviceLabel.desc=The portion of the label provided by the service that is used in the P_SHA-1 function to generate the derived key. If unspecified, the default value used is WS-SecureConversation.
PSBKeyInfo.serviceLabel.label=Service label
PSBKeyInfo.tokenRef.description=Specifies the name of the token generator or consumer.
PSBKeyInfo.tokenRef.displayName=Token generator or consumer name
PSBKeyInfo.type.EMB=Embedded token
PSBKeyInfo.type.KEYID=Key identifier
PSBKeyInfo.type.STRREF=Security token reference
PSBKeyInfo.type.THUMBPRINT=Thumbprint
PSBKeyInfo.type.X509ISSUER=X509 issuer name and issuer serial
PSBKeyInfo.type.description=Specifies the type of the key information element.
PSBKeyInfo.type.displayName=Type
PSBKeyStore.CUSTOM=CUSTOM
PSBKeyStore.NONE=NONE
PSBKeyStore.description=Custom keystores are alternatives to the key management support built into the Application Server.
PSBKeyStore.displayName=Custom keystore configuration
PSBKeyStore.heading.displayName=Keystore
PSBKeyStore.name.description=Specifies the name of the keystore.
PSBKeyStore.name.displayName=Name
PSBKeyStore.password.confirm.description=Confirms the password that is provided in the Password field.
PSBKeyStore.password.confirm.displayName=Confirm password
PSBKeyStore.password.description=Specifies the keystore password.
PSBKeyStore.password.displayName=Password
PSBKeyStore.path.description=Specifies the location of the keystore file.
PSBKeyStore.path.displayName=Full path
PSBKeyStore.short.description=Custom keystores are alternatives to the key management support built into the Application Server.
PSBKeyStore.type.description=Specifies the implementation for keystore management. This value defines the tool that operates on this keystore type.
PSBKeyStore.type.displayName=Type
PSBKeysCerts.bootstrap.displayName=Bootstrap policy keys and certificates
PSBKeysCerts.description=Follow the links to configure key and certificate bindings for this policy set.
PSBKeysCerts.displayName=Keys and certificates
PSBMessageExpiration.desc=When message expiration is enabled, the message expires after the specified interval.
PSBMessageExpiration.displayName=Message expiration
PSBMessageExpirationCheckbox.desc=Select this check box to enable message expiration.
PSBMessageExpirationEnabled.displayName=Enable message expiration
PSBMessageTimeout.desc=Specify the number of minutes before message expiration.
PSBMessageTimeout.displayName=Message timeout interval
PSBMessageTimeout.units=Minutes
PSBOutActorRoleURI.desc=Specifies the name of the uniform resource identifier (URI) for the outbound actor role URI that is used to define the intermediary or ultimate recipient of the outbound messages.
PSBOutActorRoleURI.displayName=Outbound actor role URI
PSBProperties.bootstrap.title=Bootstrap policy custom properties
PSBProperties.description=Specify custom properties that apply to both inbound and outbound messages or specify properties that apply only to inbound or only to outbound messages.
PSBProperties.inboundProperties.description=Specifies custom properties that apply to inbound messages.
PSBProperties.inboundProperties.displayName=Inbound Custom Properties:
PSBProperties.inoutboundProperties.description=Specifies custom properties that apply to both inbound and outbound messages.
PSBProperties.inoutboundProperties.displayName=Inbound and Outbound Custom Properties:
PSBProperties.main.title=Custom properties
PSBProperties.outboundProperties.description=Specifies custom properties that apply to outbound messages.
PSBProperties.outboundProperties.displayName=Outbound Custom Properties:
PSBProtection.encryption=Encryption
PSBProtection.signature=Signature
PSBProtection.usage.inbound=Inbound
PSBProtection.usage.outbound=Outbound
PSBProtectionToken.DELETE=Delete
PSBProtectionToken.NEW=New token
PSBProtectionToken.UNCONFIG=Unconfigure
PSBProtectionToken.displayName=Protection tokens
PSBProtectionToken.name.displayName=Protection token name
PSBProtectionToken.status.displayName=Status
PSBProtectionToken.tokenType.displayName=Protection token type
PSBProtectionToken.usage.displayName=Usage
PSBReliableMessaging.desc=Click this link to configure reliable messaging.
PSBReliableMessaging.displayName=Reliable messaging
PSBRequestMessage.MOVEDOWN=Move Down
PSBRequestMessage.MOVEUP=Move Up
PSBRequestMessage.NEWENC=New Encryption...
PSBRequestMessage.NEWSIG=New Signature...
PSBRequestMessage.REMOVE=Delete
PSBRequestMessage.UNCONFIG=Unconfigure
PSBRequestMessage.displayName=Request message signature and encryption protection
PSBRequestMessage.messagePart.displayName=Request message part reference
PSBRequestMessage.protection.displayName=Protection
PSBRequestMessage.status.displayName=Status
PSBResponseMessage.MOVEDOWN=Move Down
PSBResponseMessage.MOVEUP=Move Up
PSBResponseMessage.NEWENC=New Encryption...
PSBResponseMessage.NEWSIG=New Signature...
PSBResponseMessage.REMOVE=Delete
PSBResponseMessage.UNCONFIG=Unconfigure
PSBResponseMessage.displayName=Response message signature and encryption protection
PSBResponseMessage.messagePart.displayName=Response message part reference
PSBResponseMessage.protection.displayName=Protection
PSBResponseMessage.status.displayName=Status
PSBSignEncryptInfo.encrypt.description=Encrypted message part bindings define how the message part defined in a policy set is encrypted, including the key usage and key information.  You can create and manage key information on the Keys and certificates panel.
PSBSignEncryptInfo.encrypt.displayName=Encrypted message part
PSBSignEncryptInfo.encryptDataKeyInfo.displayName=Data encryption
PSBSignEncryptInfo.encryptKeyInfo.description=Specifies the key information that is used for encryption.
PSBSignEncryptInfo.encryptKeyInfo.displayName=Key information
PSBSignEncryptInfo.encryptKeyKeyInfo.displayName=Key encryption
PSBSignEncryptInfo.encryptUseKeyInfo.description=Specifies whether the selected key information is used for key encryption or data encryption.
PSBSignEncryptInfo.encryptUseKeyInfo.displayName=Usage of key information references
PSBSignEncryptInfo.error.applyChanges=Changes to the settings have been made and must be applied before further editing can be performed. Click Apply or OK and then click Edit again.
PSBSignEncryptInfo.error.onlyOne=Only one item in the list can be selected for this action.
PSBSignEncryptInfo.keyInfo.ADD=Add >
PSBSignEncryptInfo.keyInfo.NEW=New...
PSBSignEncryptInfo.keyInfo.REMOVE=< Remove
PSBSignEncryptInfo.keyInfoAssign.description=Lists key pieces of information that have been selected for use.
PSBSignEncryptInfo.keyInfoAssign.displayName=Assigned
PSBSignEncryptInfo.keyInfoAvail.description=Lists key pieces of informations that are available for use.
PSBSignEncryptInfo.keyInfoAvail.displayName=Available
PSBSignEncryptInfo.name.description=Specifies the name of the signed or encrypted message part.
PSBSignEncryptInfo.name.displayName=Name
PSBSignEncryptInfo.nonce.description=Specifies whether nonce is included when the part is signed or encrypted.
PSBSignEncryptInfo.nonce.displayName=Include nonce
PSBSignEncryptInfo.nonce.units=Include
PSBSignEncryptInfo.order.description=Specifies the order in which to sign and encrypt the specified parts of the message.
PSBSignEncryptInfo.order.displayName=Order
PSBSignEncryptInfo.reference.ADD=Add >
PSBSignEncryptInfo.reference.EDIT=Edit...
PSBSignEncryptInfo.reference.REMOVE=< Remove
PSBSignEncryptInfo.reference.description=Specifies a reference to the message part defined in the policy set for signature protection or encryption protection.
PSBSignEncryptInfo.reference.displayName=Message part reference
PSBSignEncryptInfo.referenceAssign.description=Lists message part references that have been selected for use.
PSBSignEncryptInfo.referenceAssign.displayName=Assigned
PSBSignEncryptInfo.referenceAvail.description=Lists message part references that are available for use.
PSBSignEncryptInfo.referenceAvail.displayName=Available
PSBSignEncryptInfo.sign.description=Signed message part bindings define how the message part defined in a policy set is signed, including the key information.  You can create and manage key information on the Keys and certificates panel.
PSBSignEncryptInfo.sign.displayName=Signed message part
PSBSignEncryptInfo.signKeyInfo.description=Specifies the key information that is used for signing.
PSBSignEncryptInfo.signKeyInfo.displayName=Signing key information
PSBSignEncryptInfo.timestamp.description=Specifies whether a timestamp is included when the part is signed or encrypted.
PSBSignEncryptInfo.timestamp.displayName=Include timestamp
PSBSignEncryptInfo.timestamp.units=Include
PSBSignEncryptInfo.warn.reservedPart=The {0} message part reference is required.
PSBSignedPartReference.delete.displayName=Signed part reference
PSBSignedPartReference.description=Part reference properties include the transform algorithms used to protect the message part.
PSBSignedPartReference.displayName=Signed part reference default
PSBSignedPartReference.nonce.description=Specifies whether nonce is included when the part is signed.
PSBSignedPartReference.nonce.displayName=Include nonce
PSBSignedPartReference.reference.description=Specifies the name of the signature protection in the policy set.
PSBSignedPartReference.reference.displayName=Reference
PSBSignedPartReference.timestamp.description=Specifies whether a timestamp is included when the part is signed.
PSBSignedPartReference.timestamp.displayName=Include timestamp
PSBSignedPartReference.transformAlgorithms.description=Transform algorithms are employed to protect the message part.
PSBSignedPartReference.transformAlgorithms.displayName=Transform algorithms
PSBSignedPartReference.transformAlgorithms.none.selected=No transform algorithm selected.
PSBSignedPartReference.transformAlgorithms.too.many.selected=Only one transform algorithm may be selected for this operation.
PSBSignedPartReferences.description=Part references are the names of message parts defined in the deployment descriptors of the service.
PSBSignedPartReferences.displayName=Signed part references
PSBToken.additionalProps.title=Additional Bindings
PSBToken.asymmetric.consumer.displayName=Asymmetric consumer
PSBToken.asymmetric.consumer.headline=Asymmetric Consumer
PSBToken.asymmetric.encryption.consumer.displayName=Asymmetric encryption consumer 
PSBToken.asymmetric.encryption.consumer.headline=Asymmetric Encryption Consumer 
PSBToken.asymmetric.encryption.generator.displayName=Asymmetric encryption generator
PSBToken.asymmetric.encryption.generator.headline=Asymmetric Encryption Generator
PSBToken.asymmetric.generator.displayName=Asymmetric generator
PSBToken.asymmetric.generator.headline=Asymmetric Generator
PSBToken.asymmetric.signature.consumer.displayName=Asymmetric signature consumer
PSBToken.asymmetric.signature.consumer.headline=Asymmetric Signature Consumer
PSBToken.asymmetric.signature.generator.displayName=Asymmetric signature generator
PSBToken.asymmetric.signature.generator.headline=Asymmetric Signature Generator
PSBToken.authentication.description=Authentication tokens are sent in messages to prove or assert an identity.
PSBToken.authentication.displayName=Authentication token
PSBToken.callback.description=Callback handler settings determine how security tokens are acquired from message headers.
PSBToken.callback.displayName=Callback handler
PSBToken.consumer.headline=Token Consumer
PSBToken.custom.consumer.displayName=Custom consumer
PSBToken.custom.consumer.headline=Custom Consumer
PSBToken.custom.encryption.consumer.displayName=Custom encryption consumer
PSBToken.custom.encryption.consumer.headline=Custom Encryption Consumer
PSBToken.custom.encryption.generator.displayName=Custom encryption generator
PSBToken.custom.encryption.generator.headline=Custom Encryption Generator
PSBToken.custom.generator.displayName=Custom generator
PSBToken.custom.generator.headline=Custom Generator
PSBToken.custom.signature.consumer.displayName=Custom signature consumer
PSBToken.custom.signature.consumer.headline=Custom Signature Consumer
PSBToken.custom.signature.generator.displayName=Custom signature generator
PSBToken.custom.signature.generator.headline=Custom Signature Generator
PSBToken.custom.symmetric.consumer.displayName=Custom symmetric consumer
PSBToken.custom.symmetric.consumer.headline=Custom Symmetric Consumer
PSBToken.custom.symmetric.generator.displayName=Custom symmetric generator
PSBToken.custom.symmetric.generator.headline=Custom Symmetric Generator
PSBToken.duplicate.localname=A duplicate localname exists. Each token type must have a unique localname.
PSBToken.enforceVersion.description=Selecting LTPA v2.0 token type will allow both LTPA v1.0 and v2.0 token types to be consumed. Selecting this checkbox will only allow LTPA v2.0 tokens to be consumed.
PSBToken.enforceVersion.displayName=Enforce token version
PSBToken.generator.headline=Token Generator
PSBToken.jaasLogin.NEW=New...
PSBToken.jaasLogin.description=Specifies the name of the JAAS login module.
PSBToken.jaasLogin.displayName=JAAS login
PSBToken.jaasLogin.none=None
PSBToken.localName.description=Specifies the local part.
PSBToken.localName.displayName=Local part
PSBToken.ltpapropagationtoken.name=LTPA Propagation Token
PSBToken.ltpatoken.name=LTPA Token
PSBToken.ltpatokenv2.name=LTPA Token v2.0
PSBToken.name.description=Specifies the unique name of the token.
PSBToken.name.displayName=Name
PSBToken.new.displayName=New token
PSBToken.plain.consumer.displayName=Consumer
PSBToken.plain.generator.displayName=Generator
PSBToken.protection.description=Protection tokens sign messages to provide integrity or encrypt messages to provide confidentiality.
PSBToken.protection.displayName=Protection token
PSBToken.sc13securitycontexttoken.name=Secure Conversation Token v1.3
PSBToken.sc200502securitycontexttoken.name=Secure Conversation Token v200502
PSBToken.sctTokenTolerate.description=Allow compatibility with Secure Conversation Token v200502.
PSBToken.sctTokenTolerate.displayName=Tolerate Secure Conversation Token v200502
PSBToken.secTokRef.description=Specifies the reference to the request or response token policy in the policy set.
PSBToken.secTokRef.displayName=Security token reference
PSBToken.symmetric.consumer.displayName=Symmetric consumer
PSBToken.symmetric.consumer.headline=Symmetric Consumer
PSBToken.symmetric.encryption.consumer.displayName=Symmetric encryption consumer
PSBToken.symmetric.encryption.consumer.headline=Symmetric Encryption Consumer
PSBToken.symmetric.encryption.generator.displayName=Symmetric encryption generator
PSBToken.symmetric.encryption.generator.headline=Symmetric Encryption Generator
PSBToken.symmetric.generator.displayName=Symmetric generator
PSBToken.symmetric.generator.headline=Symmetric Generator
PSBToken.symmetric.signature.consumer.displayName=Symmetric signature consumer
PSBToken.symmetric.signature.consumer.headline=Symmetric Signature Consumer
PSBToken.symmetric.signature.generator.displayName=Symmetric signature generator
PSBToken.symmetric.signature.generator.headline=Symmetric Signature Generator
PSBToken.tokenType.description=Specifies the type of the token.
PSBToken.tokenType.displayName=Token type
PSBToken.uri.description=Specifies the namespace URI (universal resource identifier).
PSBToken.uri.displayName=Namespace URI
PSBToken.usage.inbound.request=Inbound request
PSBToken.usage.inbound.response=Inbound response
PSBToken.usage.outbound.request=Outbound request
PSBToken.usage.outbound.response=Outbound response
PSBToken.wsscustomtoken.name=Custom
PSBToken.wssusernametoken10.name=Username Token v1.0
PSBToken.wssusernametoken11.name=Username Token v1.1
PSBToken.wssx509pkcs7token10.name=X509PKCS7 Token v1.0
PSBToken.wssx509pkcs7token11.name=X509PKCS7 Token v1.1
PSBToken.wssx509pkipathv1token10.name=X509PkiPathV1 Token v1.0
PSBToken.wssx509pkipathv1token11.name=X509PkiPathV1 Token v1.1
PSBToken.wssx509v1token11.name=X509V1 Token v1.1
PSBToken.wssx509v3token10.name=X509V3 Token v1.0
PSBToken.wssx509v3token11.name=X509V3 Token v1.1
PSBTransformAlgorithm.DELETE=Delete
PSBTransformAlgorithm.NEW=New
PSBTransformAlgorithm.PROPERTIES=Properties
PSBTransformAlgorithm.columnUrl.displayName=URL properties
PSBTransformAlgorithm.url.description=The URL of the transform algorithm.
PSBTransformAlgorithm.url.displayName=URL
PSBTrustAnchor.DELETE=Delete
PSBTrustAnchor.NEW=New...
PSBTrustAnchor.UPDATERUNTIME=Update Runtime
PSBTrustAnchor.confirmPassword.description=Confirms the password that is provided in the Password field.
PSBTrustAnchor.confirmPassword.displayName=Confirm password
PSBTrustAnchor.description=List keystore configurations that contain root-trusted certificates. These configurations are used for certificate path validation of the incoming security tokens in the X.509 format.
PSBTrustAnchor.displayName=Trust anchor
PSBTrustAnchor.externalKeystore.description=Specifies a locally defined keystore is used.
PSBTrustAnchor.externalKeystore.displayName=External keystore
PSBTrustAnchor.keystoreName.description=Specifies the name of the centrally managed keystore that contains root-trusted certificates.
PSBTrustAnchor.keystoreName.displayName=Name
PSBTrustAnchor.managedKeystore.description=Specifies that a managed keystore is used.
PSBTrustAnchor.managedKeystore.displayName=Centrally managed keystore
PSBTrustAnchor.name.description=Specifies the unique name that is used to identify a trust anchor.
PSBTrustAnchor.name.displayName=Name
PSBTrustAnchor.password.description=Specifies the password for the keystore.
PSBTrustAnchor.password.displayName=Password
PSBTrustAnchor.path.description=Specifies the location of the keystore file.
PSBTrustAnchor.path.displayName=Full path
PSBTrustAnchor.type.description=Specifies the implementation for keystore management. This value defines the tool that operates on this keystore type.
PSBTrustAnchor.type.displayName=Type
PSBactorRoles.displayName=Actor roles
PSBactorRolesLink.desc=Click this link to configure message security actor roles.
PSBapplicationMessageSecurity=Main Message Security Policy Bindings
PSBauthAndProtectionLink.desc=Click this link to configure the authentication and protection message security.
PSBbinding.all.policy.types.deleted=The {0} binding was removed from the configuration. All resources using this custom binding now use the default binding. You can add policies to this custom binding, but {0} is only assigned to the current resource.
PSBbinding.object.must.be.selected=You must select at least one binding policy to perform the delete action.
PSBbindings.NewGeneralBinding.displayName=New general binding
PSBbindings.NewSpecificBinding.displayName=New application specific binding
PSBbindings.NewTrustSpecificBinding.displayName=New trust service specific binding
PSBbindings.SpecificBinding.description=Use this page to create a binding that is constrained by the characteristics of this policy set.  If this is an application specific binding, it is reusable only within the application.  If this is a trust service specific binding, it is reusable only for trust service attachments. The use of a specific binding can be advantageous because it supports advanced scenarios, such as multiple signatures, as required by the policy set.
PSBbindings.displayName=Default policy set bindings
PSBbindings.server.description=Policies often require bindings, system-specific configuration information, for their implementation. Follow the links for default bindings, at the server level, associated with each policy.
PSBbindings.wssecurity.description=<strong>Authentication and protection</strong> allows you to manage the tokens used for signature, encryption, or authentication, the signing information and encryption information. <strong>Keys and certificates</strong> allows you to manage the key information used for signature and encryption, trust stores and certificate stores. <strong>Caller</strong>, when available, allows you to manage the caller identity token.
PSBbindingsClient.wssecurity.description=<strong>Authentication and protection</strong> allows you to manage the tokens used for signature, encryption, or authentication, the signing information and encryption information. <strong>Keys and certificates</strong> allows you to manage the key information used for signature and encryption, trust stores and certificate stores.
PSBbindingsV61.NewSpecificBinding.displayName=New version 6.1 application specific binding
PSBbindingsV61.SpecificBinding.description=Use this page to create a binding that is constrained by the characteristics of this policy set.  If this is an application specific binding, it is reusable only within the application.  If this is a trust service specific binding, it is reusable only for trust service attachments. The use of a specific binding can be advantageous because it supports advanced scenarios, such as multiple signatures, as required by the policy set.  This is a version 6.1 binding, which does not contain all the configuration options of more recent versions.
PSBbootstrapActorRoles.title=Bootstrap policy actor roles
PSBbootstrapMessageExpiration.title=Bootstrap policy message expiration
PSBbootstrapMessageSecurity=Secure Conversation Bootstrap Message Security Policy Bindings
PSBbutton.NEWAPPLOGIN=New Application Login...
PSBbutton.NEWAPPLOGIN.SSD=New Application Login
PSBbutton.NEWDOMAINAPPLOGIN=Domain-Scoped Application Login...
PSBbutton.NEWGLOBALAPPLOGIN=Global Application Login...
PSBbutton.NEWSYSLOGIN=New System Login...
PSBconfigurationName.desc=Specifies the name for the bindings configuration.
PSBconfigurationName.displayName=Bindings configuration name
PSBconfigurationNameV61.displayName=Version 6.1 bindings configuration name
PSBdefaultServerBindings.displayName=Default policy set bindings for {0}
PSBindings.new.consumer.button=New Consumer
PSBindings.new.generator.button=New Generator
PSBindings.username.token.button=Username Token
PSBkeysAndCertificatesLink.desc=Click this link to configure keys and certificates message security bindings.
PSBmainActorRoles.title=Main policy actor roles
PSBmainMessageExpiration.title=Main policy message expiration
PSBmessageExpiration.link=Message expiration
PSBmessageExpirationLink.desc=Click this link to configure message expiration.
PSBootstrap.description=Specifies how secure conversations are established.
PSBootstrap.displayName=Secure conversation bootstrap policy
PSBootstrap.short.description=The bootstrap policy specifies how secure conversations are established.
PSBpolicyTypeBindings=Message security policy bindings
PSBprotocols.link=HTTP transport
PSBprotocolsLink.desc=Click this link to configure policy bindings protocols.
PSEncryptions.edit.addelements.description=Choose a method for specifying an element to be encrypted.
PSEncryptions.edit.displayName=Encrypted part - {0}
PSEncryptions.edit.elements.description=Lists the selected message parts to be encrypted.
PSEncryptions.edit.elements.displayName=Elements in part
PSEncryptions.edit.name.description=Specifies the unique name of this message part that is referenced from the bindings.
PSEncryptions.edit.name.displayName=Name of part to be encrypted
PSEncryptions.new.displayName=Encrypted parts - Add
PSEncryptionsSignedParts.duplicate.part=A duplicate part name exists. You must use a unique part name.
PSEncryptionsSignedParts.edit.ADD=Add
PSEncryptionsSignedParts.edit.REMOVE=Remove
PSEncryptionsSignedParts.edit.addElements.displayName=Specify elements to add
PSEncryptionsSignedParts.edit.body=Body
PSEncryptionsSignedParts.edit.body.description=Specifies the entire body of the message needs to be protected.
PSEncryptionsSignedParts.edit.body.displayName=Protect message body
PSEncryptionsSignedParts.edit.description=A message part is a named set of one or more message elements. Specify the element or elements to be signed or encrypted in this message part.
PSEncryptionsSignedParts.edit.emptyParts=One or more elements in this part contained no value and were removed.
PSEncryptionsSignedParts.edit.predefined=Predefined
PSEncryptionsSignedParts.edit.qname=QName
PSEncryptionsSignedParts.edit.qname.description=Specifies the namespace URI followed by the local part (which is optional) of the specific SOAP header that needs to be protected. Use a comma to separate the values if both are specified.
PSEncryptionsSignedParts.edit.qname.displayName=QName (SOAP header elements only)
PSEncryptionsSignedParts.edit.qname.label=QName: namespace, localname(optional)
PSEncryptionsSignedParts.edit.qnameNamespace.description=Specifies the namespace of the SOAP header to be protected.
PSEncryptionsSignedParts.edit.qnameNamespace.displayName=Namespace URI
PSEncryptionsSignedParts.edit.qnamePart.description=Specifies the local part of the SOAP header to be protected.
PSEncryptionsSignedParts.edit.qnamePart.displayName=Local part
PSEncryptionsSignedParts.edit.selectOne=An element must be selected to perform this action.
PSEncryptionsSignedParts.edit.type=Type
PSEncryptionsSignedParts.edit.value=Value
PSEncryptionsSignedParts.edit.xpath=XPath expression
PSEncryptionsSignedParts.edit.xpath.description=Specifies an XPath expression that identifies the elements to be protected.
PSEncryptionsSignedParts.edit.xpath.displayName=XPath expression
PSMessagePart.description=Message part protection policies define parts to be protected and the nature of protection.
PSMessagePart.displayName=Message Part Protection
PSMessagePart.encryptParts.description=Lists the parts of the message that require confidentiality protection.
PSMessagePart.encryptParts.displayName=Encrypted parts
PSMessagePart.encryptTitle.displayName=Confidentiality protection
PSMessagePart.inbound.displayName=Request message part protection
PSMessagePart.outbound.displayName=Response message part protection
PSMessagePart.short.description=Message part protection policies define parts to be protected and the nature of protection.
PSMessagePart.signParts.description=Lists the parts of the message that require integrity protection.
PSMessagePart.signParts.displayName=Signed parts
PSMessagePart.signTitle.displayName=Integrity protection
PSMessageSecurity.asymmetric.description=Specifies whether asymmetric tokens are to be used. Clicking this radio button activates the Asymmetric signature and encryption policies link to configure asymmetric tokens.
PSMessageSecurity.asymmetric.displayName=Use asymmetric tokens
PSMessageSecurity.bootstrap.config=A bootstrap policy is configured. A bootstrap policy specifies how the request for a secure conversation token is protected.
PSMessageSecurity.bootstrap.description=A bootstrap policy specifies how the request for a secure conversation token is protected.
PSMessageSecurity.bootstrap.displayName=Secure conversation bootstrap policy
PSMessageSecurity.bootstrap.notAllowed=A bootstrap policy is not configured. To configure it, first ensure that you have enabled Message Security in the main policy with symmetric signature and encryption policies and secure conversation tokens for both integrity and confidentiality protection.
PSMessageSecurity.bootstrap.notConfig=A bootstrap policy is not configured. A bootstrap policy specifies how the request for a secure conversation token is protected.
PSMessageSecurity.bootstrap.remove=Remove bootstrap policy
PSMessageSecurity.bootstrap.short.description=Configure a bootstrap policy that specifies how secure conversations are established.
PSMessageSecurity.description=Message security policies are applied to requests and enforced on responses to support interoperability.
PSMessageSecurity.displayName=WS-Security
PSMessageSecurity.keySymmetry.displayName=Key Symmetry
PSMessageSecurity.layout.description=Specifies the layout rules for the security header.
PSMessageSecurity.layout.displayName=Security header layout:
PSMessageSecurity.layoutLax.description=The order of contents in the header can vary.
PSMessageSecurity.layoutLax.displayName=Layout (Lax): Order of contents can vary.
PSMessageSecurity.layoutLaxFirst.description=The timestamp must be first in the header but the order of the remaining elements can vary.
PSMessageSecurity.layoutLaxFirst.displayName=Lax but timestamp required first in header.
PSMessageSecurity.layoutLaxLast.description=The timestamp must be last in the header but the order of the remaining elements can vary.
PSMessageSecurity.layoutLaxLast.displayName=Lax but timestamp required last in header.
PSMessageSecurity.layoutStrict.description=The declarations in the header must precede the use.
PSMessageSecurity.layoutStrict.displayName=Strict: Declarations must precede use.
PSMessageSecurity.main.description=Message security policies are applied to requests and enforced on responses to support interoperability.
PSMessageSecurity.main.displayName=Main policy
PSMessageSecurity.main.short.description=Configure message security policies that are applied to application requests and enforced on application responses to support interoperability.
PSMessageSecurity.messageProtection.description=Specifies whether message level protection that uses digital signatures and encryption is required.
PSMessageSecurity.messageProtection.displayName=Message level protection
PSMessageSecurity.policyDetails.displayName=Policy Details
PSMessageSecurity.requestPolicyDetails.displayName=Request Policies
PSMessageSecurity.requireSignature.description=Specifies whether confirmation of the request signature verification is required.
PSMessageSecurity.requireSignature.displayName=Require signature confirmation
PSMessageSecurity.responsePolicyDetails.displayName=Response Policies
PSMessageSecurity.short.description=Message security policies are applied to requests and enforced on responses to support interoperability.
PSMessageSecurity.symmetric.description=Specifies whether symmetric tokens are to be used. Clicking this radio button activates the Symmetric signature and encryption policies link to configure symmetric tokens.
PSMessageSecurity.symmetric.displayName=Use symmetric tokens
PSMessageSecurity.timestamp.description=Specifies whether a timestamp is included in the security header.
PSMessageSecurity.timestamp.displayName=Include timestamp in security header
PSMessageSecurity.warn.noTokens=To complete this configuration, you must define signature and encryption policies for the selected key symmetry.
PSSignedParts.edit.addelements.description=Choose a method for specifying an element to be included in this part.
PSSignedParts.edit.displayName=Signed part - {0}
PSSignedParts.edit.elements.description=Lists the selected message parts to be signed.
PSSignedParts.edit.elements.displayName=Elements in Part
PSSignedParts.edit.name.description=Specifies the unique name of this message part that is referenced from the bindings.
PSSignedParts.edit.name.displayName=Name of part to be signed
PSSignedParts.new.displayName=Signed parts - Add
PSSymmetric.confidentiality.displayName=Message Confidentiality
PSSymmetric.confidentiality.sameAsIntegrity.description=Specifies that the selected message integrity token is used for both integrity and confidentiality. If you are using Secure Conversation for both, this must be checked.
PSSymmetric.confidentiality.sameAsIntegrity.displayName=Use same token for confidentiality that is used for integrity
PSSymmetric.confidentiality.tokenType.description=Specifies the token type used for encrypting and decrypting messages.
PSSymmetric.confidentiality.tokenType.displayName=Token type for encrypting and decrypting messages
PSSymmetric.description=With symmetric tokens, using the same token to sign and validate or to encrypt and decrypt provides better performance than can be achieved with asymmetric tokens. However, symmetric tokens should be used within a trust context.
PSSymmetric.displayName=Symmetric signature and encryption policies
PSSymmetric.error.applyChanges=Changes to the settings have been made and must be applied before this action can be performed. Click Apply or OK before performing this action.
PSSymmetric.error.bootstrap.configured=A bootstrap policy is configured. It must be removed before these settings can be modified.
PSSymmetric.error.diffSecureToken=When using the Secure Conversation token type for both message confidentiality and message integrity, the same token must be used.
PSSymmetric.integrity.displayName=Message Integrity
PSSymmetric.integrity.tokenType.description=Specifies the token type used for signing and validating messages.
PSSymmetric.integrity.tokenType.displayName=Token type for signing and validating messages
PSSymmetric.short.description=Symmetric policies use the same tokens to sign and encrypt messages in both directions.
PSSymmetric.warn.confInit.fields=A message confidentiality initiator encryption custom token must be edited to specify the local part of the token.
PSSymmetric.warn.confRecp.fields=A message confidentiality recipient encryption custom token must be edited to specify the local part of the token.
PSSymmetric.warn.confidentiality.fields=The message confidentiality custom token must be edited to specify the local part of the token.
PSSymmetric.warn.integInit.fields=A message integrity initiator signature custom token must be edited to specify the local part of the token.
PSSymmetric.warn.integRecp.fields=A message integrity recipient signature custom token must be edited to specify the local part of the token.
PSSymmetric.warn.integrity.fields=The message integrity custom token must be edited to specify the local part of the token.
PSSymmetric.warn.tokens.deleted=The configuration has been updated to use the same tokens for confidentiality and integrity.  Extra tokens have been deleted.
PSToken.addTokenType.button=Add Token Type
PSToken.conversation.id.description=Specifies a unique token name.
PSToken.conversation.id.displayName=Secure Conversation token name
PSToken.conversation.issuerRef.description=Specifies to use a specific secure context token issuer.
PSToken.conversation.issuerRef.displayName=Require reference to secure context token issuer
PSToken.conversation.keys.description=Specifies whether derived keys are required, implicit, explicit, or either.
PSToken.conversation.keys.displayName=Key derivation requirements
PSToken.conversation.keys.either=Either explicit or implicit key derivation
PSToken.conversation.keys.explicit=Implicit key derivation
PSToken.conversation.keys.implicit=Explicit key derivation
PSToken.conversation.keys.none=Do not require derived keys
PSToken.conversation.sctIssuer.description=Specifies the issuer URL address from which to retrieve the security context token.
PSToken.conversation.sctIssuer.displayName=Security context token issuer
PSToken.conversation.title=Secure conversation token type
PSToken.conversation.uriRef.description=Specifies that an external URI (universal resource identifier) reference is required when referencing this token.
PSToken.conversation.uriRef.displayName=Require an external URI reference
PSToken.conversationInbound.displayName=Request message secure conversation token policy
PSToken.conversationOutbound.displayName=Response message secure conversation token policy
PSToken.custom.id.description=Specifies a unique token name.
PSToken.custom.id.displayName=Custom token name
PSToken.custom.title=Custom token type
PSToken.customInbound.displayName=Request message custom token policy
PSToken.customOutbound.displayName=Response message custom token policy
PSToken.description=Policies can be defined that specify which types of security tokens are supported as well as properties for the token type.
PSToken.displayName=Token policy definitions
PSToken.duplicate.token=A duplicate token name exists. You must use a unique token name.
PSToken.genericVersion.displayName=Version
PSToken.inbound.displayName=Request token policies
PSToken.inbound2.displayName=Request token policies
PSToken.inclusion.allInit.displayName=Included in all messages to initiator
PSToken.inclusion.allSent.displayName=Included in all messages to recipient
PSToken.inclusion.always.displayName=Always included in messages to initiator and recipient
PSToken.inclusion.description=Specifies when the token should be included in the message.
PSToken.inclusion.displayName=Inclusion policy
PSToken.inclusion.never.displayName=Never included in messages, an external reference to token is used
PSToken.inclusion.onceSent.displayName=Included once in message to recipient
PSToken.localName.description=Specifies the local part.
PSToken.localName.displayName=Local part
PSToken.ltpa.id.description=Specifies a unique token name.
PSToken.ltpa.id.displayName=LTPA token name
PSToken.ltpa.propagate.description=Specifies to use the application server LTPA token propagation feature.
PSToken.ltpa.propagate.displayName=Propagate the JAAS Subject
PSToken.ltpa.title=LTPA token type
PSToken.ltpaInbound.displayName=Request message LTPA token policy
PSToken.ltpaOutbound.displayName=Response message LTPA token policy
PSToken.no.name=Token name is not specified.  You must specify a unique token name.
PSToken.outbound.displayName=Response token policies
PSToken.outbound2.displayName=Response token policies
PSToken.saml.TokenIssuer.title=Token Issuer
PSToken.saml.id.description=Provide a unique token name, which can be referenced by the policy set bindings.
PSToken.saml.id.displayName=SAML token name
PSToken.saml.tokenIssuerAddress.description=Optionally used to require that the token was issued by a specific token issuer.
PSToken.saml.tokenIssuerAddress.displayName=Token issuer address
PSToken.saml.version.description=Specify the SAML token version.
PSToken.saml.version.displayName=Version
PSToken.short.description=Policies can be defined that specify which types of security tokens are supported.
PSToken.supportedTypes.displayName=Supported token types
PSToken.tokenID.displayName=Token identifier
PSToken.tokenPolicies.description=Defines details of a token type specified in symmetric and asymmetric token policies.
PSToken.tokenType.conversation=Secure Conversation
PSToken.tokenType.custom=Custom
PSToken.tokenType.customMenu=Custom...
PSToken.tokenType.displayName=Type
PSToken.tokenType.ltpa=LTPA
PSToken.tokenType.username=UserName
PSToken.tokenType.x509=X.509
PSToken.uri.description=Specifies the namespace URI (universal resource identifier).
PSToken.uri.displayName=Namespace URI
PSToken.username.id.description=Specifies a unique token name.
PSToken.username.id.displayName=Username token name
PSToken.username.title=UserName token type
PSToken.usernameInbound.displayName=Request message username token policy
PSToken.usernameOutbound.displayName=Response message username token policy
PSToken.version.description=Specifies the version of the WS-Security specification supported.
PSToken.version.displayName=WS-Security version
PSToken.x509.id.description=Specifies a unique token name.
PSToken.x509.id.displayName=X.509 token name
PSToken.x509.title=X.509 token type
PSToken.x509.type.PKCS7=X.509 PKCS7
PSToken.x509.type.PKI1=X.509 PKI Path Version 1
PSToken.x509.type.V1=X.509 Version 1
PSToken.x509.type.V3=X.509 Version 3
PSToken.x509.type.description=Specifies the X.509 type.
PSToken.x509.type.displayName=X.509 type
PSToken.x509Inbound.displayName=Request message X.509 token policy
PSToken.x509Outbound.displayName=Response message X.509 token policy
PSTokenPolicy.button.ACTION=Action
PSTokenPolicy.button.ADDCONVERSATION=Add Secure Conversation Type
PSTokenPolicy.button.ADDCUSTOM=Add Custom Type
PSTokenPolicy.button.ADDLTPA=Add LTPA Type
PSTokenPolicy.button.ADDUSER=Add UserName Type
PSTokenPolicy.button.ADDX509=Add X.509 Type
PSTokenPolicy.button.CHANGECONVERSATION=Change to Secure Conversation
PSTokenPolicy.button.CHANGECUSTOM=Change to Custom Type
PSTokenPolicy.button.CHANGELTPA=Change to LTPA
PSTokenPolicy.button.CHANGEUSER=Change to UserName
PSTokenPolicy.button.CHANGEX509=Change to X.509
PSTokenPolicy.button.DELETESELECTED=Delete Selected Type Policy
PSTokenPolicy.button.EDITSELECTED=Edit Selected Type Policy
PSTokenV2.addTokenType.button=Add
PSTokenV2.propgationDirection.displayName=Propagation Direction
PSTokenV2.supporting.displayName=Authentication tokens
PSTokenV2.tokenID.displayName=Token Identifier
PSTokenV2.tokenId.toBeGenerated=To be generated after Apply or OK
PSTokenV2.tokenType.issued=SAML (using IssuedToken)
PSTokenV2.tokenType.saml=SAML
PSTokenV2.tokenType.username=Username
PSTokenV2.username.displayName=Username token
PSTokenV2Collection.description=Use this page to require propagation of authentication and identity assertion tokens.  The Application Server provides default values for token configuration options based on expected standard usage scenarios.
PolicySet.description=Use this page to configure a policy set.
PolicySet.displayName=Policy set
PolicySetCopy.description=Use this page to provide a name and description for the new policy set.
PolicySetCopy.displayName=Policy set copy
PolicySetCopy.title=Copy of
ProviderBinding.MSD.description=Use this page to create, copy, and manage provider policy set bindings.  These bindings provide system-specific configuration and can be reused across policy set attachments.  Scoping a binding to a security domain constrains the configuration options to those applicable to that domain and limits use of the binding to the specified domain.
ProviderBinding.MSD.detail.description=Use this page to create a provider binding which is reusable across policy sets and applications.  Use the Add button to select policy bindings and then be sure to provide configuration.  Empty bindings will be deleted.  Scoping a binding to a security domain constrains the configuration options to those applicable to that domain and limits use of the binding to the specified domain.
ProviderBinding.description=Use this page to create, copy, and manage provider policy set bindings.  These bindings provide system-specific configuration and can be reused across policy set attachments.
ProviderBinding.detail.description=Use this page to create a provider binding which is reusable across policy sets and applications.  Use the Add button to select policy bindings and then be sure to provide configuration.  Empty bindings will be deleted.
ProviderBinding.title=General provider policy set bindings
SSLBinding.appClient.description=Use this page to specify the SSL alias settings to use for server-based clients.  You can also specify an SSL properties file and path, but this will only be used if you export the binding for use with J2SE clients.
SSLBinding.appClient.propertiesFile.description=Specify the full path and file name for the SSL properties file. This properties file will only be used if you export the binding for use with J2SE clients.
SSLBinding.appClient.propertiesFile.displayName=SSL properties full path and file name (for export to J2SE clients)
SSLBinding.description=Use this page to define SSL transport binding configuration.
SSLBinding.inResponse.description=Click this drop down box to select the SSL security transport binding to enable for inbound service responses.
SSLBinding.inResponse.displayName=Inbound service responses
SSLBinding.outAsyncResponse.description=Click this drop down box to select the SSL security transport binding to enable the for asynchronous service responses.
SSLBinding.outAsyncResponse.displayName=Outbound asynchronous service responses
SSLBinding.outRequest.description=Click this drop down box to select which SSL security transport binding to enable for outbound service requests.
SSLBinding.outRequest.displayName=Outbound service requests
SSLBinding.propertiesFile.description=Specify the path for the SSL properties file.
SSLBinding.propertiesFile.displayName=SSL properties file path
SSLBinding.sslConfiguration.displayName=SSL configuration
SSLBinding.sslSettings.description=Click this drop down box to select which SSL security transport binding to enable.
SSLBinding.sslSettings.displayName=SSL settings
SSLPolicyConfig.inResponse.description=Click this box to specify that the SSL security transport is to be enabled for inbound service responses.
SSLPolicyConfig.inResponse.displayName=Enable for inbound service responses
SSLPolicyConfig.outAsyncResponse.description=Click this box to specify that the SSL security transport is to be enabled for outbound asynchronous service responses.
SSLPolicyConfig.outAsyncResponse.displayName=Enable for outbound asynchronous service responses
SSLPolicyConfig.outRequest.description=Click this box to specify that the SSL security transport is to be enabled for outbound service requests.
SSLPolicyConfig.outRequest.displayName=Enable for outbound service requests
SSLPolicyConfig.transportSecurity.description=Use this page to define SSL transport policy configuration.
SSLPolicyConfig.transportSecurity.displayName=SSL transport
SrvRef.detailView.confirm.displayName=You have chosen to inherit policy set attachments and bindings for the service reference, endpoints, and operations.  The inherited settings replace all of your customized settings.  Click OK to inherit the settings, or click Cancel to retain your customized settings and return to the previous screen.
SrvRef.detailView.confirm.doNotDisplay=Do not show this inherit confirmation again.
SrvRef.detailView.confirm.title=Inherit From Service
WSAPolicyConfig.description=Define the appropriate WS-Addressing policy assertions for this policy set.
WSAPolicyConfig.displayName=WS-Addressing
WSAPolicyConfig.mode.ASYNC=Asynchronous only
WSAPolicyConfig.mode.ASYNC.description=Response messages must not be targeted at the WS-Addressing Anonymous URI
WSAPolicyConfig.mode.BOTH=Synchronous and asynchronous
WSAPolicyConfig.mode.BOTH.description=No restrictions on the targeting of response messages
WSAPolicyConfig.mode.SYNC=Synchronous only
WSAPolicyConfig.mode.SYNC.description=Response messages must be targeted at the WS-Addressing Anonymous URI
WSAPolicyConfig.modeRadioGroup.description=Specify the messaging style supported by this policy set.
WSAPolicyConfig.modeRadioGroup.displayName=Messaging style
WSAPolicyConfig.required.description=Force WS-Addressing SOAP Header to be included on all messages.
WSAPolicyConfig.required.displayName=WS-Addressing is mandatory
WSRMBinding.busName.description=Displays a list of all available service integration buses in the cell.
WSRMBinding.busName.displayName=Bus name
WSRMBinding.description=Select the service integration bus and messaging engine to use for reliable message delivery. The link provides access to the Bus collection, from which you can create, delete and modify buses, bus members and messaging engines.
WSRMBinding.displayName=WS-ReliableMessaging
WSRMBinding.errormessage.required=The bus name and messaging engine properties are required for a valid WS-Reliable Messaging binding configuration. These properties are required for a policy that specifies a managed persistent or managed non-persistent quality of service. A WS-Reliable Messaging binding is not used used for a policy that specifies an unmanaged non-persistent quality of service.
WSRMBinding.managelink.description=The Manage buses, bus members, and messaging engines link provides access to the Service Integration Buses panel from which you can create new buses and messaging engines.
WSRMBinding.managelink.displayName=Manage buses, bus members, and messaging engines
WSRMBinding.messagingEngine.description=Displays a list of all bus members for the selected bus.
WSRMBinding.messagingEngine.displayName=Messaging engine
WSRMPolicyConfig.description=These policies are enforced on inbound messages and applied to outbound messages.
WSRMPolicyConfig.displayName=WS-ReliableMessaging
WSRMPolicyConfig.makeconnection.description=Enables MakeConnection, which is an efficient method of enabling synchronous two-way message exchange with Web Services Reliable Messaging.  This policy set must include WS-Addressing policy to enable MakeConnection.
WSRMPolicyConfig.makeconnection.displayName=Enable 'MakeConnection' for synchronous two-way message exchange (include WS-Addressing in the policy set to enable this option)
WSRMPolicyConfig.managedNonP.description=This second in-memory option supports clusters as well as single server. It uses a messaging engine to manage the sequence state, and messages can be written to disk if memory is low. This quality of service is non-transactional. With this quality of service, messages that are lost in the network are sent again, and it can also handle server failure, but a failure of the messaging engine causes message loss.
WSRMPolicyConfig.managedNonP.displayName=Managed non-persistent
WSRMPolicyConfig.managedP.description=This is a recoverable quality of service for asynchronous Web service invocations. It uses a messaging engine and message store to manage the sequence state. In this case, messages are processed within transactions, persisted at the Web service requester server and at the Web service provider server, and are recoverable in the event of server failure. Messages that have not been successfully transmitted at the time of a failure can continue to be transmitted after the server restarts.
WSRMPolicyConfig.managedP.displayName=Managed persistent
WSRMPolicyConfig.order.description=Select this option if the sender of a request has to receive a response before it sends the next request.
WSRMPolicyConfig.order.displayName=Deliver messages in the order that they were sent
WSRMPolicyConfig.quality.description=Click a radio button to choose the required quality of service.
WSRMPolicyConfig.quality.displayName=Quality of service
WSRMPolicyConfig.standard.description=Select the WS-ReliableMessaging standard to use for reliable transmission of your messages. WS-ReliableMessaging 1.1 is the default value.
WSRMPolicyConfig.standard.displayName=Standard
WSRMPolicyConfig.unmanagedNonP.description=This quality of service requires minimal configuration. However it is non-transactional. Messages that are lost in the network are sent again, however, failure of a server might result in lost messages. This quality of service is for single server only; it does not work in a cluster.
WSRMPolicyConfig.unmanagedNonP.displayName=Unmanaged non-persistent
WSSecurityV2.authToken.description=Provides an option to require propagation of an authentication token.
WSSecurityV2.authToken.displayName=Authentication token
WSSecurityV2.authToken.multipleTokens.description=Allows you to send multiple tokens to set up more advanced authentication scenarios or identity assertion.
WSSecurityV2.authToken.multipleTokens.displayName=Multiple tokens (advanced scenarios)
WSSecurityV2.authToken.multipleTokensExist=This policy currently specifies more than one {0}.  To indicate which {1} configuration you want to preserve, manually delete all the others.  You can do this by selecting Multiple tokens -> Customize.
WSSecurityV2.authToken.none.description=Indicates that you do not want to send an additional token to prove identity.
WSSecurityV2.authToken.none.displayName=- None - 
WSSecurityV2.authToken.samlIssuedToken.description=Adds a SAML token to the business message via the IssuedToken assertion and requires that the token be issued by a third-party trust server.
WSSecurityV2.authToken.samlIssuedToken.displayName=SAML token (using IssuedToken)
WSSecurityV2.authToken.samlToken.description=Adds a SAML token to the business message via the SAMLToken assertion, which doesn't specify how the token is acquired.
WSSecurityV2.authToken.samlToken.displayName=SAML token
WSSecurityV2.authToken.title=Authentication
WSSecurityV2.authToken.usernameToken.description=Provides basic authentication with username and password.
WSSecurityV2.authToken.usernameToken.displayName=Username token
WSSecurityV2.customMsgParts.description=Custom message part protection.
WSSecurityV2.customMsgParts.displayName=Custom message part protection
WSSecurityV2.defaultMsgParts.description=Use default message part protection
WSSecurityV2.defaultMsgParts.displayName=Use default message part protection
WSSecurityV2.description=Specify how to protect the message, job to represent identity, and which message part to protect. The Application Server applies recommended default values for each token and protects a set of recommended message elements, based on policy characteristics.
WSSecurityV2.messageParts.title=Signed and Encrypted Parts
WSSecurityV2.msgParts.description=Specify message part protection.
WSSecurityV2.msgParts.displayName=Message part protection
WSSecurityV2.protectToken.description=Specify the message protection token.
WSSecurityV2.protectToken.displayName=Message protection token
WSSecurityV2.protectToken.title=Protection (Integrity and Confidentiality)
WSTXPolicyConfig.atomicTransactionMode.MANDATORY=Mandatory - clients must send, and providers must receive, WS-AT context
WSTXPolicyConfig.atomicTransactionMode.MANDATORY.description=Clients must send, and providers must receive, WS-AT context.
WSTXPolicyConfig.atomicTransactionMode.NEVER=Never - clients must not send, and providers must not receive, WS-AT context
WSTXPolicyConfig.atomicTransactionMode.NEVER.description=Clients must not send, and providers must not receive, WS-AT context.
WSTXPolicyConfig.atomicTransactionMode.SUPPORTS=Supports - if WS-AT context is available, clients can send it and providers can use it
WSTXPolicyConfig.atomicTransactionMode.SUPPORTS.description=If WS-AT context is available, clients can send it and providers can use it.
WSTXPolicyConfig.atomicTransactionRadioGroup.description=Specifies the WS-AtomicTransaction protocol policy
WSTXPolicyConfig.atomicTransactionRadioGroup.displayName=WS-AtomicTransaction
WSTXPolicyConfig.businessActivityMode.MANDATORY=Mandatory - clients must send, and providers must receive, WS-BA context
WSTXPolicyConfig.businessActivityMode.MANDATORY.description=Clients must send, and providers must receive, WS-BA context.
WSTXPolicyConfig.businessActivityMode.NEVER=Never - clients must not send, and providers must not receive, WS-BA context
WSTXPolicyConfig.businessActivityMode.NEVER.description=Clients must not send, and providers must not receive, WS-BA context.
WSTXPolicyConfig.businessActivityMode.SUPPORTS=Supports - if WS-BA context is available, clients can send it and providers can use it
WSTXPolicyConfig.businessActivityMode.SUPPORTS.description=If WS-BA context is available, clients can send it and providers can use it.
WSTXPolicyConfig.businessActivityRadioGroup.description=Specifies the WS-BusinessActivity protocol policy
WSTXPolicyConfig.businessActivityRadioGroup.displayName=WS-BusinessActivity
WSTXPolicyConfig.description=Specify the policies for WS-AtomicTransaction and WS-BusinessActivity protocols.  WS-AtomicTransaction supports coordination of activities so that all occur, or none occurs.  WS-BusinessActivity supports coordination of compensation.  These policies are used when a client sends a request, when a provider receives a request, and when generating a WSDL file containing policy for a Web service endpoint.
WSTXPolicyConfig.displayName=WS-Transaction
advanced.properties.displayName=Advanced Properties
application.object.must.be.selected=You must select at least one application to perform this action.
binding.admincommand.error=Admin command error: {0}
binding.cannot.delete.default=You cannot delete the {0} default policy set.
binding.collection.Configured.displayName=Configured?
binding.copy.MSDdescription=Use this page to provide a name, security domain and description for the new binding.  Scoping a binding to a security domain constrains the configuration options to those applicable to that domain and limits use of the binding to the specified domain.
binding.copy.description=Use this page to provide a name and description for the new binding.
binding.copy.displayName=Binding copy
binding.copy.failed=Failed to copy the {0} binding.
binding.copy.nameMissing=You must specify a new binding name.
binding.copy.title=Copy of
binding.delete.failed=Failed in deleting the {0} binding.
binding.export.FileTransferServletConfigHelper.error=Failed to export {0}. Check the server logs for more information.
binding.export.description=Click on the binding to download the archive file.
binding.export.failed=Failed to export the {0} binding: 
binding.export.title=Export binding
binding.getBinding.failed=AdminTask.getBinding() failed. Exception: {0}. Check the server logs for more information.
binding.getSecurityDomainList.failed=Failed to get the security domain list from the admin command. Exception: {0}
binding.import.description=Specify the full path and file name of the policy set to import.
binding.import.fail.wrong.type=You have selected a general {0} policy set binding for import.  You cannot import a general {0} binding from the general {1} binding collection.
binding.import.failed=Failed to import the {0} binding. {1}
binding.import.nameMissing=You must specify a name to use for this binding.
binding.import.title=Import
binding.importCurrentName.description=Use current binding name.
binding.importCurrentName.displayName=Use current binding name
binding.importDifferentName.description=Specify a different name to use for this binding.
binding.importDifferentName.displayName=Specify a different name to use for this binding
binding.importPath.description=Full path with file name.
binding.importPath.displayName=Full path with file name:
binding.listJAASLoginEntries.failed=AdminTask.listJAASLoginEntries() failed. Exception: {0}. Check the server logs for more information.
binding.listLoginConfigs.failed=AdminTask.listLoginConfigs() failed. Exception: {0}. Check the server logs for more information.
binding.listPolicyTypes.failed=AdminTask.listPolicyTypes() failed. Exception: {0}. Check the server logs for more information.
binding.listSecurityDomains.failed=AdminTask.listSecurityDomains() failed. Exception: {0}. Check the server logs for more information.
binding.new.title=New
binding.object.must.be.selected=You must select at least one binding to perform this action.
binding.onlyone.may.be.selected=Only one binding can be selected to perform this action.
binding.securityDomain.displayName=Security Domain
binding.securityDomainDetail.description=Select the security domain.
binding.securityDomainDetail.displayName=Security domain:
binding.setBinding.failed=AdminTask.setBinding() failed. Exception: {0}. Check the server logs for more information.
button.DefaultBinding.description=Specifies that the runtime will use, in order of precedence, the default binding for the server, the security domain of the server, or the cell (global security).
button.GeneralBinding.description=A general binding.
button.SpecificBinding.description=An application specific binding.
button.addPolicyType=Add
button.assignBinding=Assign Binding
button.attach=Attach Policy Set
button.attach.clientPolicySet=Attach Client Policy Set
button.attach.selectFromPSCollection=Select From Policy Set Collection...
button.binding.copy=Copy...
button.binding.delete=Delete
button.binding.done=Done
button.binding.export=Export...
button.binding.import=Import...
button.binding.new=New...
button.close=Close
button.detach=Detach Policy Set
button.detach.clientPolicySet=Detach Client Policy Set
button.detachPolicySet=Detach Policy Set
button.new.GeneralBinding=New General Binding...
button.new.GeneralBinding.description=This type of binding is general and reusable across policy sets and applications. It is unable to support certain advanced policy configurations, but is highly reusable.
button.new.SpecificBinding=New Application Specific Binding...
button.new.SpecificBinding.description=This type of binding is specific to and constrained by the characteristics of the policy set. Its advantage is that it allows multiple signatures and other characteristics for the policy set. However, the binding is reusable only within this application.
button.new.V61SpecificBinding=New V6.1 Application Specific Binding...
button.policy.update=Update Provider Policy
button.policyset.attach=Attach
button.policyset.copy=Copy...
button.policyset.export=Export...
button.policyset.new=New...
button.replacePolicySet=Replace Policy Set
button.usedefault=Use Default Binding
button.useexisting=Use Existing Binding
button.usenew=Use New Binding
collection.pref.PSserviceReference.showConfirmDesc=Selecting this check box enables the inherit policy set attachments confirmation.
collection.pref.PSserviceReference.showConfirmLabel=Display inherit policy set attachments confirmation
confirm.password.displayName=Confirm password
createNew.button.displayName=Create New...
createNew.displayName=Create new
custom.properties.displayName=Custom Properties
customPropertiesBindings.detailView.description=Use this page to define custom properties to be used with the Custom properties policy type.
customPropertiesBindings.errormessage.required=The binding must contain at least one custom property.
dropdown.select.displayName=--- Select ---
errormessage.passwordNotMatching=The password and confirm password fields do not match. Be sure to specify the same value for each field.
general.properties.displayName=General Properties
host.displayName=Host
nav.Webservices.displayName=Web services
password.displayName=Password
policySet.customProperty.description=Specifies a list of custom properties.
policySet.customProperty.displayName=Custom properties
policySet.customProperty.name.displayName=Name
policySet.customProperty.value.displayName=Value
policyset.ADD=Add
policyset.AttachedApplications.name.description=Specifies the name of the attached application.
policyset.AttachedApplications.name.displayName=Name
policyset.AttachedApplicationsCollection.description=Use this page to display applications that are attached to this policy set.  Click Detach Policy Set to detach this policy set from the selected application and any application resources that are currently attached to this policy set.  Click Replace Policy Set to select a different policy set to attach, in place of the current policy set, to the application or to any attached resources.  Note that these actions only affect points of attachment to this policy set and they do not affect application resources that are attached to other policy sets.
policyset.AttachedApplicationsCollection.displayName=Attached applications
policyset.AttachedApplicationsLink.description=Accesses the list of deployed assets that are attached to this policy set.
policyset.CHANGE=Change
policyset.DELETE=Delete
policyset.EDIT=Edit
policyset.MINUTES=Minutes
policyset.MOVEDOWN=Move down
policyset.MOVEUP=Move up
policyset.REMOVE=Remove
policyset.add.policytype.failed=Failed in adding {0}.
policyset.admincommand.error=Admin command error: {0}
policyset.andbinding.resource.qname.displayName=Application/Service/Endpoint/Operation
policyset.application.name.displayName=Application
policyset.assign.binding.failed=Failed in assigning the {0} binding to the {1} resource.
policyset.attach.policyset.failed=Failed in attaching the policy set for {0}
policyset.attachedclientpolicyset.displayName=Attached Client Policy Set
policyset.attachedpolicyset.displayName=Attached Policy Set
policyset.attachment.descText=Attach policy sets to the service, endpoints, or operations and assign bindings. You can assign either the default bindings or existing custom bindings for the attached policy sets. You can also create new custom bindings for the attached policy sets. Note that you can view or modify the default bindings from the cell- or server-level security panels.  Also note that you can only directly attach a policy set to an operation if the policy set has WS-Addressing enabled or if the WSDL specifies WS-Addressing headers.
policyset.attachment.inherited=(inherited)
policyset.attachment.none=None
policyset.attachment.provider.inherited=(provider inherited)
policyset.attachment.tabletitle=Policy Set Attachments
policyset.attachments.to.same.policyset.must.be.selected=You can only assign a custom or new binding to multiple Web service resources if all selected resources have the same policy set attached.
policyset.bindings.displayName=Binding
policyset.button.config=Configure...
policyset.button.customize=Customize...
policyset.button.disable=Disable
policyset.button.enable=Enable
policyset.button.export=Export
policyset.button.import=Import
policyset.button.import.copy=Import a copy
policyset.cannot.assign.binding=You cannot assign a binding to a service resource that does not have a policy set or has an inherited attachment.  To assign a binding to {0}, you must first attach a policy set.
policyset.cannot.assign.binding.WhenUsingProviderPolicy=You cannot assign an application specific binding to service clients that obtain and use the provider policy. You can only assign a general binding to such service resource.
policyset.cannot.assign.client.binding=You cannot assign a binding to a service resource that does not have an effective policy configuration or has an inherited policy attachment.  To assign a binding to {0}, you must first attach a policy set or specify use of the provider policy.
policyset.cannot.detach.policyset=You cannot detach a policy set from a resource that does not have a direct policy set attachment.
policyset.cellDefaultBindings.descTitle=Default policy set bindings
policyset.cellDefaultBindings.description=Use this panel to set your global security default policy set bindings.  The specified bindings will be used for current version policy set attachments unless overridden at the attachment point, at the server, or at a security domain.
policyset.cellDefaultClientBinding.description=Select the global default client binding.
policyset.cellDefaultClientBinding.displayName=Default service client binding:
policyset.cellDefaultProviderBinding.description=Select the global default provider binding.
policyset.cellDefaultProviderBinding.displayName=Default service provider binding:
policyset.clientDefaultBindingMissingPolicyType.warning=The specified default client binding {0} does not include configuration for {1}.  If you plan to use those policies, we recommend specifying a default binding that provides the necessary configuration.
policyset.clientPolicyControl.description=Use this page to specify which policies to apply to the application or service client.  If you choose to use the provider policy, you can also specify the method by which the client should acquire this policy.
policyset.clientPolicyControl.displayName=Policies applied
policyset.clientPolicyControlDetail.descText=Client WS-Policy Control Properties
policyset.clientPolicyControlDetail.descTitle=Client WS-Policy Control Properties
policyset.config.attachmentCount.description=Displays the number of attachments for this policy set.
policyset.config.description=Use this panel to manage or import application policy sets.  Application policy sets define quality of service policies for business-related messages defined in the WSDL.  Additional default application policy sets are also available.  You can import these policy sets from the default repository with the Import button.  Default policy sets are not editable, but you can copy the default policy sets and modify them to suit your needs.
policyset.config.description.description=Specifies the description of this policy set.
policyset.config.description.displayName=Description
policyset.config.displayName=Policy set
policyset.config.editable.description=Specifies whether this policy set is editable.
policyset.config.editable.displayName=Editable
policyset.config.name.description=Specifies the name of this policy set.
policyset.config.name.displayName=Name
policyset.config.not.editable.description=Not editable
policyset.config.not.editable.displayName=Not editable
policyset.config.readonly.description=Read only
policyset.config.readonly.displayName=Read only
policyset.copy.policyset.failed=Failed to copy the {0} policy set.
policyset.copyBindings.description=Copy bindings
policyset.copyBindings.displayName=Copy bindings
policyset.create.policyset.failed=Failed in creating the {0} policy set.
policyset.create.policyset.invalid.name=The Name field does not contain a valid value.
policyset.defaultClientBindingHead.displayName=Default Client Binding
policyset.defaultProviderBindingHead.displayName=Default Provider Binding
policyset.delete.policyset.attachment.failed=Failed in deleting policy set attachments from the {0} application.
policyset.delete.policyset.failed=Failed in deleting the {0} policy set.
policyset.delete.policytype.failed=Failed in deleting the {0} policy.
policyset.detach.policyset=Detach policy set from the {0} resource.
policyset.detach.policyset.failed=Failed in detaching the policy set from {0}
policyset.disable.policytype.failed=Failed in disabling the {0} policy.
policyset.domainDefaultBindings.descTitle=Default policy set bindings
policyset.domainDefaultBindings.description=Specify default policy set bindings for this domain or specify 'None' to use the server or global default bindings for services deployed to that server.  If you specify server default bindings, they take precedence over default bindings specified for the security domain to which the server is deployed.
policyset.domainDefaultBindings.link.description=Specify default policy set bindings for this domain or specify 'None' to use the server or global default bindings for services deployed to that server.  If you specify server default bindings, they take precedence over default bindings specified for the security domain to which the server is deployed.
policyset.domainDefaultClientBinding.description=Select the domain default client binding.
policyset.domainDefaultClientBinding.displayName=Domain default client binding:
policyset.domainDefaultProviderBinding.description=Select the domain default provider binding.
policyset.domainDefaultProviderBinding.displayName=Domain default provider binding:
policyset.empty.message={0}
policyset.emptyString=
policyset.enable.policytype.failed=Failed in enabling the {0} policy.
policyset.enter.name.before.add.policytype=The policy set name must be entered before adding policies to the new policy set.
policyset.export.FileTransferServletConfigHelper.error=Failed to export {0}. Check the server logs for more information.
policyset.export.description=Click on the policy set to download the archive file.
policyset.export.policyset.failed=Failed to export the {0} policy set: 
policyset.export.title=Export policy set archive file
policyset.exportedWSDL.description=Exported WSDL (HTTP messages secured with the application transport policy if defined)
policyset.exportedWSDL.displayName=Exported WSDL (HTTP messages secured with the application transport policy if defined)
policyset.function.to.be.implemented=The {0} function is not available in this Web Services Feature Pack release.
policyset.getClientDynamicPolicyControl.failed=Failed to get client policy control properties for resource {0}.
policyset.getDefaultBindings.failed=Failed to get the default bindings from the admin command. Exception: {0}
policyset.getNamedBindingList.failed=Failed to get the named bindings list from the admin command. Exception: 
policyset.getPolicyShared.failed=Failed to get policy sharing properties for resource {0}.
policyset.globalDefaultBindings.descTitle=Global Default Bindings
policyset.globalDefaultBindings.description=Specify a client and provider binding to use as the default for policy set attachments unless overridden at the attachment level or by a lower level default binding.
policyset.globalSecurity.displayName=Global security
policyset.http.NoApplicablePolicySets=-- No applicable policy sets --
policyset.http.error.InvalidPolicySet=To use a policy set for the acquisition of WSDL via an HTTP GET request, you must first create or import a system policy set which contains only HTTP Transport and SSL Transport policy types.
policyset.httpGetChoice.description=The WSDL of the service provider will be obtained by an HTTP GET request. Unless a system policy set is configured for the HTTP GET request the request will be sent using the HTTP Transport and SSL Transport policy types configured at the service level of the service client application.
policyset.httpGetChoice.displayName=HTTP GET request
policyset.httpGetPolicySet.description=The policy set to be attached.
policyset.httpGetPolicySet.displayName=Policy set:
policyset.httpGetPolicySetBinding.description=The binding for the policy set attachment.
policyset.httpGetPolicySetBinding.displayName=Binding:
policyset.import.collection.description=Use this panel to import predefined policy sets. The Import option will import all selected read-only policy sets. Importing a copy allows you to rename and import an editable version of the policy set.
policyset.import.collection.title=Import from default repository
policyset.import.copy.name.description=Specify a new name for the policy set copy.
policyset.import.copy.name.label=Name of copy:
policyset.import.copy.predefined.description=Import a configurable copy of the selected policy set with a new name. Only one policy set may be selected.
policyset.import.current.description=Import policy set with current name
policyset.import.current.name=Use current policy set name
policyset.import.different.description=Specify a different name to use for this policy set
policyset.import.different.name=Specify a different name to use for this policy set
policyset.import.fail.wrong.type=You have selected {0} policy set for import.  You cannot import {0} policy set from the {1} policy set collection.
policyset.import.file.doesnt.exist=File {0} doesn't exist. Specify a valid path name.
policyset.import.file.empty=File {0} is an empty file. Specify a valid zip/jar archive.
policyset.import.file.error=Could not open policy set {0}.
policyset.import.path=Full path with file name:
policyset.import.path.description=Specify the path of a valid zip archive containing the policy set definition.
policyset.import.policyset.failed=Failed to import {0}. {1}
policyset.import.predefined.description=Import a read-only version of selected policy set(s) with the current name. Multiple policy sets may be selected.
policyset.import.predefined.displayName=From Default Repository... 
policyset.import.predefined.import.description=Click OK to import the policy set from the repository.
policyset.import.predefined.import.displayName=Import policy set from default policy set repository
policyset.import.select.displayName=From Selected Location... 
policyset.import.selected.description=Specify the full path and file name of the policy set to import.
policyset.import.selected.loc.title=Import policy set from selected location
policyset.import.specify.file=Specify a valid path name.
policyset.import.specify.name=Specify a new name for the policy set copy.
policyset.import.specify.zip=File {0} is not a zip/jar archive.
policyset.import.title=Import policy set from archive file
policyset.object.must.be.selected=You must select at least one policy set to perform this action.
policyset.one.must.be.selected=One policy set must be selected to perform this action.
policyset.onlyone.may.be.selected=Only one policy set can be selected to perform this action.
policyset.policy.must.be.selected=You must select at least one policy to perform this action.
policyset.policyAcquiringAllowed.Title=Allow clients to acquire policy from:
policyset.policyAcquiringMethod.Title=Method to obtain provider policy
policyset.policyApplied.ClientAndProviderPolicy=Client and provider policy
policyset.policyApplied.ClientPolicyOnly=Client policy only
policyset.policyApplied.HttpGetTargetedAt.description=Target of request.
policyset.policyApplied.HttpGetTargetedAt.displayName=Target of request:
policyset.policyApplied.HttpGetTargetedAtDefaultURL.description=Use the default request target.
policyset.policyApplied.HttpGetTargetedAtDefaultURL.displayName=Use the default request target
policyset.policyApplied.HttpGetTargetedAtSpecificURL.description=Specify request target.
policyset.policyApplied.HttpGetTargetedAtSpecificURL.displayName=Specify request target
policyset.policyApplied.HttpGetTargetedAtSpecificURL.error=The field, Target of request, is required when the Specify target request button is selected.
policyset.policyApplied.HttpGetTargetedAtURL.description=Target of request.  If the field is left empty, the default target determined at the runtime will be used.
policyset.policyApplied.None=None
policyset.policyApplied.ProviderPolicyOnly=Provider policy only
policyset.policyApplied.client=Client only
policyset.policyApplied.clientAndProvider=Client and provider
policyset.policyApplied.clientOnly=Client only
policyset.policyApplied.descTitle=Apply the following policies:
policyset.policyApplied.displayName=Policies Applied
policyset.policyApplied.inherited=Inherit application attachment
policyset.policyApplied.provider=Provider only
policyset.policyApplied.providerOnly=Provider only
policyset.policyControl.displayName=Policy control
policyset.policyShared.disabled=Disabled
policyset.policyShared.enabled=Enabled
policyset.policySharing.displayName=Policy Sharing
policyset.policyType.description.description=Specifies the description of this policy.
policyset.policyType.description.displayName=Description
policyset.policyType.displayName=Policy
policyset.policyType.name.description=Specifies the name of this policy.
policyset.policyType.name.displayName=Policy
policyset.policyType.provides.description=Specifies the intents satisfied by this policy.
policyset.policyType.provides.displayName=Intents Satisfied
policyset.policyType.state.description=Specifies the state of enabled or disabled for this policy in the policy set.
policyset.policyType.state.disabled.displayName=Disabled
policyset.policyType.state.displayName=State
policyset.policyType.state.enabled.displayName=Enabled
policyset.policyTypes.default.displayText=The collection below specifies which policies are included in the policy set.  Access the links to view the policy assertions. If you want to modify any of the policy details, you should create a copy of this policy set.
policyset.policyTypes.displayName=Policies
policyset.policyTypes.displayText=Use the collection below to choose which policy types to add to the policy set. For each, you can keep the default settings or specify your own.
policyset.policytype.alreadyDisabled={0} is already disabled.
policyset.policytype.alreadyEnabled={0} is already enabled.
policyset.policytype.customproperties=Custom properties
policyset.policytype.httptransport=HTTP transport
policyset.policytype.jmstransport=JMS transport
policyset.policytype.notfound=Policy type not found
policyset.policytype.ssltransport=SSL transport
policyset.policytype.wsaddressing=WS-Addressing
policyset.policytype.wshttpstransport=HTTPS transport
policyset.policytype.wsreliablemessaging=WS-ReliableMessaging
policyset.policytype.wssecureconversation=WS-SecureConversation
policyset.policytype.wssecurity=WS-Security
policyset.policytype.wssecurity_v2=WS-Security_V2
policyset.policytype.wstransaction=WS-Transaction
policyset.policytypes.translate.error=An unrecognized policy type was found while processing the policies.
policyset.providerDefaultBindingMissingPolicyType.warning=The specified default provider binding {0} does not include configuration for {1}.  If you plan to use those policies, we recommend specifying a default binding that provides the necessary configuration.
policyset.providerPolicyAcquiredFromMetadataExchange.displayName=Apply the following policies to the request messages
policyset.providerPolicyControl.description=Use this page to specify whether, and by which methods, clients can acquire the provider policy.
policyset.providerPolicyControl.displayName=Policy sharing
policyset.providerPolicyControlDetail.descText=Service Provider WS-Policy Control Properties
policyset.providerPolicyControlDetail.descTitle=Service Provider WS-Policy Control Properties
policyset.providerPolicyUpdateInitStatus.displayName=Available once provider policy has been acquired
policyset.providerPolicyUpdateStatus.displayName=Policy update last requested: {0}
policyset.replace.policyset.attachment.failed=Failed in replacing policy set attachments for the {0} application.
policyset.replacingAttachments.descText=The policy set you are copying is attached to one or more applications, services, or endpoints.  Check the box to move these attachments to this new policy set.  Selecting the box detaches the original policy set from all resources and attaches this new policy set in its place.  If you replace attachments, also indicate whether you want to copy the bindings or restore the default bindings.
policyset.replacingAttachments.descTitle=Transfer attachments
policyset.replacingAttachments.description=Attach this policy set in place of the original for all attached applications, services, endpoints, and operations.
policyset.replacingAttachments.displayName=Attach this policy set in place of the original for all attached applications, services, endpoints, and operations
policyset.requireHttpTLS.description=Attach a system policy set to the HTTP GET request
policyset.requireHttpTLS.displayName=Attach a system policy set to the HTTP GET request
policyset.requireWsMexSecurity.description=Attach a system policy set to the WS-MetadataExchange request
policyset.requireWsMexSecurity.displayName=Attach a system policy set to the WS-MetadataExchange request
policyset.resource.namefilter.displayName=First-level name
policyset.resource.qname.displayName=Service/Endpoint/Operation
policyset.securityDomain.displayName=Security Domain
policyset.securityDomainDefaultBindings.descText=The collection below displays the default client and provider bindings for each security domain.  Select the security domain name link if you want to access the domain and select different default bindings.
policyset.securityDomainDefaultBindings.descTitle=Security Domain Default Bindings
policyset.selectPSToAttach.description=Use this panel to select a policy set to attach to the selected service resources.  You can create new policy sets or copy from existing policy sets to select for attachment.  Additional default application policy sets are also available.  You can import these policy sets from the default repository with the Import button.  Default policy sets are not editable, but you can copy the default policy sets and modify them to suit your needs.
policyset.selectPSToAttach.title=Attach policy set
policyset.serverDefaultBindings.descTitle=Default policy set bindings for {0}
policyset.serverDefaultBindings.description=Specify server default bindings if you want to override the default bindings defined for the cell or the security domain to which the server is deployed.
policyset.serverDefaultClientBinding.description=Select the server default client binding.
policyset.serverDefaultClientBinding.displayName=Server default client binding:
policyset.serverDefaultProviderBinding.description=Select the server default provider binding.
policyset.serverDefaultProviderBinding.displayName=Server default provider binding:
policyset.setClientDynamicPolicyControl.failed=Failed to set client policy control properties for resource {0}.
policyset.setDefaultBindings.failed=Failed to set the default bindings by the admin command. Exception: {0}
policyset.setPolicyShared.failed=Failed to set policy sharing properties for resource {0}.
policyset.srvRef.inherit.failed=Failed in setting inheritFromService property for service reference with error: {0}
policyset.standard.deflate.displayName=deflate
policyset.standard.gzip.displayName=gzip
policyset.standard.http10.displayName=HTTP 1.0
policyset.standard.http11.displayName=HTTP 1.1
policyset.standard.issued11.displayName=V1.1
policyset.standard.issued20.displayName=V2.0
policyset.standard.saml11.displayName=V1.1
policyset.standard.saml20.displayName=V2.0
policyset.standard.wsrm10.displayName=WS-ReliableMessaging 1.0
policyset.standard.wsrm11.displayName=WS-ReliableMessaging 1.1
policyset.standard.wss10.displayName=WS-Security 1.0
policyset.standard.wss11.displayName=WS-Security 1.1
policyset.standard.xzip.displayName=xzip
policyset.useDefaultBindings.description=Restore default bindings
policyset.useDefaultBindings.displayName=Restore default bindings
policyset.v61DefaultBindings.descTitle=Version 6.1 Default Bindings
policyset.v61DefaultBindings.description=Specify version 6.1 default policy set bindings for the cell.  These bindings will be used for client and provider policy set attachments within V6.1 applications and attachments to service applications that are deployed to a V6.1 server.  The default bindings are used for V6.1 attachments unless overridden at the attachment point or by a V6.1 server default binding.
policyset.v61DefaultBindings.name.displayName=Version 6.1 default policy set bindings
policyset.v61ServerDefaultBindings.description=Use this panel if you want to specify version 6.1 default bindings for this server.  These default bindings are used for client and provider policy set attachments for applications deployed to V6.1 servers and for V6.1 application deployed to V7.0 servers.  The default bindings are used for V6.1 attachments unless overridden at the attachment point.
policyset.v61ServerDefaultBindings.name.displayName=Version 6.1 default policy set bindings for {0}
policyset.value.default=Default
policyset.value.notapplicable=Not applicable
policyset.wsMex.NoApplicablePolicySets=-- No applicable policy sets --
policyset.wsMex.error.InvalidPolicySet=To use a policy set for WS-MetadataExchange, you must first create or import a system policy which does not contain transport level security.
policyset.wsMexChoice.description=The WSDL of the service provider will be obtained by sending a WS-MetadataExchange request to the endpoint of the service provider. The request will be sent using the HTTP Transport and SSL Transport policy types configured at the service level of the service client application.
policyset.wsMexChoice.displayName=WS-MetadataExchange request
policyset.wsMexPolicySet.description=The policy set to be attached.
policyset.wsMexPolicySet.displayName=Policy set:
policyset.wsMexPolicySetBinding.description=The binding for the policy set attachment.
policyset.wsMexPolicySetBinding.displayName=Binding:
policyset.wssv2.issuedtoken.description=Use this page to require that a SAML token is obtained from third-party token issuer using WS-Trust and then included in the business request, the response, or both.  You can optionally specify the token issuer in this policy.
policyset.wssv2.issuedtoken.displayName=SAML token (using IssuedToken)
policyset.wssv2.samltoken.description=Specify whether to send the token in the business request, the response, or both.  This policy does not dictate how the token is initially obtained, but you can optionally require that the token be issued by a particular trust service.
policyset.wssv2.samltoken.displayName=SAML token
policyset.wssv2.untoken.attackPrevention.displayName=Replay Attack Prevention
policyset.wssv2.untoken.description=Specify whether to send the username token in the request and response messages.  Including a timestamp and nonce will help protect against replay attacks.  Include a password with the token unless you plan to set it up as the asserted token for identity assertion.
policyset.wssv2.untoken.displayName=Username Token
policyset.wssv2.untoken.hover.nonce=Include nonce.  Do not include timestamp or password.
policyset.wssv2.untoken.hover.none=Do not include timestamp, nonce or password.
policyset.wssv2.untoken.hover.pwd=Include password.  Do not include creation timestamp or nonce.
policyset.wssv2.untoken.hover.pwd_nonce=Include password and nonce.  Do not include creation timestamp.
policyset.wssv2.untoken.hover.pwd_time=Include password and creation timestamp.  Do not include nonce.
policyset.wssv2.untoken.hover.pwd_time_nonce=Include password, creation timestamp, and nonce.
policyset.wssv2.untoken.hover.time=Include creation timestamp.  Do not include nonce or password.
policyset.wssv2.untoken.hover.time_nonce=Include creation timestamp and nonce.  Do not include password.
policyset.wssv2.untoken.id.description=Provide a unique token name, which can be referenced by the policy set bindings.
policyset.wssv2.untoken.nonce.description=A nonce is a random value created for each time a username token is sent.  We recommend including a nonce to protect against replay attacks.
policyset.wssv2.untoken.nonce.displayName=Include a unique sequence number (nonce)
policyset.wssv2.untoken.password.description=Specify whether to send a password with the username token.  We recommend sending a password unless using as an asserted token for identity assertion.
policyset.wssv2.untoken.password.displayName=Include password
policyset.wssv2.untoken.propagationDirection.description=Specify whether to send a username token in the request message, the response message, or both.
policyset.wssv2.untoken.propagationDirection.displayName=Token propagation direction
policyset.wssv2.untoken.requestAndResponse.description=Request and response messages
policyset.wssv2.untoken.requestAndResponse.displayName=Request and response messages
policyset.wssv2.untoken.requestOnly.description=Request message only
policyset.wssv2.untoken.requestOnly.displayName=Request message only
policyset.wssv2.untoken.responseOnly.description=Response message only
policyset.wssv2.untoken.responseOnly.displayName=Response message only
policyset.wssv2.untoken.timestamp.description=Including a creation timestamp provides evidence of the freshness of the token.  We recommend including a timestamp to protect against replay attacks.
policyset.wssv2.untoken.timestamp.displayName=Include creation timestamp
policytype.getPolicyType.failed=AdminTask.getPolicyType() failed. Exception: {0}. Check the server logs for more information.
policytype.getPolicyTypeAttribute.failed=AdminTask.getPolicyTypeAttribute() failed. Exception: {0}. Check the server logs for more information.
policytype.setPolicyType.failed=AdminTask.setPolicyType() failed. Exception: {0}. Check the server logs for more information.
policytype.setPolicyTypeAttribute.failed=AdminTask.setPolicyTypeAttribute() failed. Exception: {0}. Check the server logs for more information.
port.displayName=Port
properties.displayName=Properties
refresh.displayName=Refresh
resource.object.must.be.selected=You must select at least one service resource to perform this action.
seconds.displayName=seconds
select.displayName=Select
ssl.displayName=SSL
systempolicyset.config.description=Defines security policies for system service operations.
systempolicyset.config.title=System policy set
systempolicyset.defaultconfig.description=Defines default security policies for system service operations.
systempolicyset.description=Use this panel to create and manage policy sets for non-business-related system messages.  These messages are not related to the business operations that are defined in the WSDL, but instead refer to messages defined in other specifications that apply qualities of service such as request security token (RST) messages defined in WS-Trust or metadata exchange messages defined in WS-MetadataExchange.  These 'out-of-band' messages are part of  the 'virtual operations' on a virtual WSDL file (which is all of the methods available on the endpoint for processing), however are not related to the business messages defined within the application.  Default policy sets are not editable, but you can copy the default policy sets and modify them to suit your needs.
systempolicyset.title=System policy sets
user.name.displayName=User name
wss2.1property=1 property
wss2.properties={0} properties
wss2.token.PSBCallBackHandler.category=Callback Handler
wss2.token.PSBCallBackHandler.customClassName.displayname=Use custom class
wss2.token.PSBCallBackHandler.customProperties.displayname=Callback handler custom properties:
wss2.token.PSBCallBackHandler.defaultClassName.displayname=Use built-in default class
wss2.token.PSBCallBackHandler.description=Retrieve authentication data using
wss2.token.PSBJAASLogin.category=JAAS Login (Advanced)
wss2.token.PSBJAASLogin.customJAASLoginName.displayname=Use custom
wss2.token.PSBJAASLogin.customProperties.displayname=JAAS login custom properties:
wss2.token.PSBJAASLogin.defaultJAASLogin.displayname=Use default
wss2.token.PSBJAASLogin.description=The generation of the token is carried out by the login modules defined in the JAAS login configuration.
wss2.token.binding.onlyOneUNTCon.error=General bindings allow a maximum of one username token consumer. To supply binding configuration for multiple username token consumers, create an application specific binding for the policy set attachment.
wss2.token.binding.onlyOneUNTGen.error=General bindings allow a maximum of one username token generator. To supply binding configuration for multiple username token generators, create an application specific binding for the policy set attachment.
wss2.token.cbh.requires.username=To use the built-in callback handler class, you must provide a username and password.
wss2.untoken.uname.con=Username token consumer
wss2.untoken.uname.gen=Username token generator
wssecurity.password.incorrect=The password does not match the value in the Password field.
