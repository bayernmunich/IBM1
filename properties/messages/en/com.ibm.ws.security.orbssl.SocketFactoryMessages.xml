<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="../../resources/stylesheets/wasmsgxml.css"?>
<TMSSource name="TivoliMessages" tmsVersion="1.0" xml:lang="en">
<!-- CMVC MSG File Name = ws/code/orbext/src/com/ibm/ws/security/orbssl/SocketFactoryMessages.nlsprops -->
<!-- DO NOT EDIT THIS FILE - This file was generated by the XML/Html & Property emitter -->
<!-- BEGIN MESSAGES -->
<Message ID="JSSL0160E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.ClientAliasMismatch" varFormat="Java">
    IIOPSSLConnectionClient.ClientAliasMismatch=JSSL0160E: Client alias specified ({0}) does not match a valid client alias.
  </MsgText>
  <Explanation>
    The client alias specified in the Secure Sockets Layer (SSL) configuration is not in the client keystore.
  </Explanation>
  <UserResponse>
    Make sure that the specified client alias is correct, and that this client alias  exists in the client keystore.
  </UserResponse>
</Message>
<Message ID="JSSL0203E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.KeyStoreFileEmpty" varFormat="Java">
    IIOPSSLConnectionClient.KeyStoreFileEmpty=JSSL0203E: The keystore file {0} exists, but it is empty.
  </MsgText>
  <Explanation>
    The specified keystore file has a file size of zero bytes.
  </Explanation>
  <UserResponse>
    Make sure that the specified file name is the name of a valid keystore file and that the file is accessible.
  </UserResponse>
</Message>
<Message ID="JSSL0030E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnection.targetSupports2" varFormat="Java">
    IIOPSSLConnection.targetSupports2=JSSL0030E: The SSLServerConnectionData object that is passed to createSSLServerSocket contains a TargetSupportsQOP() value that is less than its TargetRequiresQOP value.
  </MsgText>
  <Explanation>
    There might be a problem with the server&apos;s Secure Sockets Layer (SSL) configuration.
  </Explanation>
  <UserResponse>
    Use the administrative console to review the settings for the server&apos;s SSL configuration.
  </UserResponse>
</Message>
<Message ID="JSSL0205E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.KeyStoreNoAccess" varFormat="Java">
    IIOPSSLConnectionClient.KeyStoreNoAccess=JSSL0205E: Unable to gain access to the keystore: {0}
  </MsgText>
  <Explanation>
    The Application Server runtime does not have the proper permissions to access the specified keystore file.
  </Explanation>
  <UserResponse>
    Make sure that the Application Server runtime has the proper security policy to access the specified file.
  </UserResponse>
</Message>
<Message ID="JSSL0140I" severity="I" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.ClientAliases" varFormat="Java">
    IIOPSSLConnectionClient.ClientAliases=JSSL0140I: Client aliases to choose from: {0}
  </MsgText>
  <Explanation>
    This list indicates the client keystore aliases that can be selected.
  </Explanation>
  <UserResponse>
    No action required.
  </UserResponse>
</Message>
<Message ID="JSSL0170E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.ServerAliasMismatch" varFormat="Java">
    IIOPSSLConnectionClient.ServerAliasMismatch=JSSL0170E: Server alias specified ({0}) does not match a valid server alias.
  </MsgText>
  <Explanation>
    The server alias specified in the Secure Sockets Layer (SSL) configuration is not in the server keystore.
  </Explanation>
  <UserResponse>
    Make sure that the specified server alias is correct and that this server alias exists in the server keystore.
  </UserResponse>
</Message>
<Message ID="JSSL0200I" severity="I" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.PKCSKeyStoreInitialized" varFormat="Java">
    IIOPSSLConnectionClient.PKCSKeyStoreInitialized=JSSL0200I: A PKCS keystore has been initialized. Library name: {0}
  </MsgText>
  <Explanation>
    A pkcs keystore file has been initialized in the indicated library.
  </Explanation>
  <UserResponse>
    No action required.
  </UserResponse>
</Message>
<Message ID="JSSL0100E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.SSLPeerUnverifiedException" varFormat="Java">
    IIOPSSLConnectionClient.SSLPeerUnverifiedException=JSSL0100E: javax.net.ssl.SSLPeerUnverifiedException - Indicates that the peer&apos;&apos;s identity has not been verified. You may request the identity of the peer.  Reason:  {0}
  </MsgText>
  <Explanation>
    The peer was not able to identity itself. This situation might have occurred because there is no certificate for the peer, the particular cipher suite being used does not support authentication, or no peer authentication was established during Secure Sockets Layer (SSL) handshaking.
  </Explanation>
  <UserResponse>
    See the description of the exception for more information. You can also request the identity of the peer.
  </UserResponse>
</Message>
<Message ID="JSSL0202E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.OpenKeyStoreFailed" varFormat="Java">
    IIOPSSLConnectionClient.OpenKeyStoreFailed=JSSL0202E: Unable to open keystore: {0}
  </MsgText>
  <Explanation>
    The specified keystore file or URL exists, but the program is unable to open the file.
  </Explanation>
  <UserResponse>
    Make sure that the specified file name is the name of a valid keystore file and that the file is accessible. If the file name is valid and the file is accessible, make sure that the URL being used to access this file is also valid and accessible.
  </UserResponse>
</Message>
<Message ID="JSSL0010E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnection.createSSLServerSocket" varFormat="Java">
    IIOPSSLConnection.createSSLServerSocket=JSSL0010E: IIOPSSLConnection.createSSLServerSocket(...) threw an INTERNAL exception. Additional information: {0}.
  </MsgText>
  <Explanation>
    A failure occurred creating an SSL server socket.
  </Explanation>
  <UserResponse>
    This problem usually indicates that there is a problem with the Secure Sockets Layer (SSL)  configuration.  Make sure that the listener port configured for IIOP connections is not already being used by another process, and that another instance of the Application Server is not already started.  Also make sure that the SSL keystore and truststore files are valid and contain the correct certificates.  You can use the Application Server&apos;s IKeyMan tool to validate the keystore and truststore files.
  </UserResponse>
</Message>
<Message ID="JSSL0191W" severity="W" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnection.InvalidKeyStoreType" varFormat="Java">
    IIOPSSLConnection.InvalidKeyStoreType=JSSL0191W: The keystore or truststore type specified is invalid.  Adjusting to use the correct type, however, please correct the SSL configuration for performance reasons.
  </MsgText>
  <Explanation>
    The file type specified for either the keystore or the truststore file is not valid.
  </Explanation>
  <UserResponse>
    Modify the Secure Sockets Layer (SSL) configuration such that a valid file type is specified for the keystore or truststore file. The current file type is not valid.  You can use the Application Server&apos;s IKeyMan tool to check the file type currently specified for the keystore and the truststore files.
  </UserResponse>
</Message>
<Message ID="JSSL0130E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.IOException" varFormat="Java">
    IIOPSSLConnectionClient.IOException=JSSL0130E: java.io.IOException: Signals that an I/O exception of some sort has occurred.  Reason:  {0} Remote Host: {1}  Remote Port: {2}
  </MsgText>
  <Explanation>
    An I/O exception has occurred. The specified class is the general class of exceptions produced by failed or interrupted I/O operations.
  </Explanation>
  <UserResponse>
    See the description of the exception for more information.
  </UserResponse>
</Message>
<Message ID="JSSL0110E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.SSLKeyException" varFormat="Java">
    IIOPSSLConnectionClient.SSLKeyException=JSSL0110E: javax.net.ssl.SSLKeyException - Reports a bad SSL key.  Reason: {0}
  </MsgText>
  <Explanation>
    A bad Secure Sockets Layer (SSL) key was encountered.
  </Explanation>
  <UserResponse>
    This problem usually indicates that there is a server configuration problem, or there is a problem with a client&apos;s SSL certificate and private key. See the description of the exception for more information.
  </UserResponse>
</Message>
<Message ID="JSSL0150I" severity="I" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.ServerAliases" varFormat="Java">
    IIOPSSLConnectionClient.ServerAliases=JSSL0150I: Server aliases to choose from: {0}
  </MsgText>
  <Explanation>
    This list indicates the server keystore aliases that can be selected.
  </Explanation>
  <UserResponse>
    No action required.
  </UserResponse>
</Message>
<Message ID="JSSL0120E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.SSLException" varFormat="Java">
    IIOPSSLConnectionClient.SSLException=JSSL0120E: javax.net.ssl.SSLException: Indicates some kind of error detected by an SSL subsystem.  Reason: {0}
  </MsgText>
  <Explanation>
    This problem usually indicates that a Secure Sockets Layer (SSL) subsystem detected an error.
  </Explanation>
  <UserResponse>
    Verify that the SSL configuration is setup correctly.
  </UserResponse>
</Message>
<Message ID="JSSL0090E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.SSLProtocolException" varFormat="Java">
    IIOPSSLConnectionClient.SSLProtocolException=JSSL0090E: javax.net.ssl.SSLProtocolException - Reports an error in the operation of the SSL protocol.  Reason: {0}
  </MsgText>
  <Explanation>
    An error occured during the operation of the Secure Sockets Layer (SSL) protocol.
  </Explanation>
  <UserResponse>
    This problem usually indicates that there is a flaw in one of the protocol implementations.
  </UserResponse>
</Message>
<Message ID="JSSL0204E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.KeyStoreBadURLSyntax" varFormat="Java">
    IIOPSSLConnectionClient.KeyStoreBadURLSyntax=JSSL0204E: The keystore file {0} was not found, or the URL syntax is not correct.
  </MsgText>
  <Explanation>
    Either the specified keystore file does not exist, or URL specification used to access this file is incorrect.
  </Explanation>
  <UserResponse>
    Make sure that the specified file name is the name of a valid keystore file and that the file is accessible. If the file name is valid and the file is accessible, make sure that the URL being used to access this file is also valid and accessible.
  </UserResponse>
</Message>
<Message ID="JSSL0190I" severity="I" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.ServerAliasChosen" varFormat="Java">
    IIOPSSLConnectionClient.ServerAliasChosen=JSSL0190I: SSL server alias chosen: {0}
  </MsgText>
  <Explanation>
    The specified server alias is the server alias that will be used to make the Secure Sockets Layer (SSL) connection.
  </Explanation>
  <UserResponse>
    No action required.
  </UserResponse>
</Message>
<Message ID="JSSL0180I" severity="I" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.ClientAliasChosen" varFormat="Java">
    IIOPSSLConnectionClient.ClientAliasChosen=JSSL0180I: SSL client alias chosen: {0}
  </MsgText>
  <Explanation>
    The specified client alias is the client alias that will be used to make the Secure Sockets Layer (SSL) connection.
  </Explanation>
  <UserResponse>
    No action required.
  </UserResponse>
</Message>
<Message ID="JSSL0050E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnection.initContext" varFormat="Java">
    IIOPSSLConnection.initContext=JSSL0050E: IIOPSSLConnection.initContext(...) threw an INTERNAL exception. Additional: information {0}.
  </MsgText>
  <Explanation>
    A problem occurred while the Secure Sockets Layer (SSL) context was being created in preparation for the server socket.
  </Explanation>
  <UserResponse>
    This problem usually indicates that there is a problem with the SSL configuration.  Make sure that the SSL keystore and truststore files are valid and contain the correct certificates, and that these files have valid passwords.  Also make sure that the file types specified are the correct types for the files they represent, for example JKS, JCEK, and so forth. You can use the Application Server&apos;s IKeyMan tool to validate the keystore and truststore files.
  </UserResponse>
</Message>
<Message ID="JSSL0020E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnection.targetRequires" varFormat="Java">
    IIOPSSLConnection.targetRequires=JSSL0020E: The SSLServerConnectionData object that is passed to createSSLServerSocket returned a value from getTargetRequiresQOP() that is less than 1.
  </MsgText>
  <Explanation>
    There might be a problem with the server&apos;s Secure Sockets Layer (SSL) configuration.
  </Explanation>
  <UserResponse>
    Use the administrative console to review the settings for the server&apos;s SSL configuration.
  </UserResponse>
</Message>
<Message ID="JSSL0201E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.GetPKCSKeyStoreFailed" varFormat="Java">
    IIOPSSLConnectionClient.GetPKCSKeyStoreFailed=JSSL0201E: Unable to get a PKCS keystore. Library name: {0}
  </MsgText>
  <Explanation>
    A PKCS keystore instance cannot be obtained.
  </Explanation>
  <UserResponse>
    Make sure the Cryptographic token configuration is valid.
  </UserResponse>
</Message>
<Message ID="JSSL0070E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.createSSLSocket" varFormat="Java">
    IIOPSSLConnectionClient.createSSLSocket=JSSL0070E: IIOPSSLConnectionClient.createSSLSocket(...) threw an INTERNAL exception. Additional information: {0}
  </MsgText>
  <Explanation>
    A problem occurred while a Secure Sockets Layer (SSL) client socket was being created.
  </Explanation>
  <UserResponse>
    This problem usually indicates that there is a problem with the client&apos;s SSL configuration. Make sure that the SSL keystore and truststore files are valid and contain the correct certificates, and that these files have valid passwords.  Also make sure that the file types specified are the correct types for the files they represent, for example JKS, JCEK, and so forth. You can use the Application Server&apos;s IKeyMan tool to validate the keystore and truststore files.
  </UserResponse>
</Message>
<Message ID="JSSL0080E" severity="E" prefix="yes">
  <MsgText pgmKey="IIOPSSLConnectionClient.SSLHandshakeException" varFormat="Java">
    IIOPSSLConnectionClient.SSLHandshakeException=JSSL0080E: javax.net.ssl.SSLHandshakeException - The client and server could not negotiate the desired level of security.  Reason: {0}
  </MsgText>
  <Explanation>
    The client and server could not negotiate the desired level of security. The connection is no longer usable.
  </Explanation>
  <UserResponse>
    Make sure that the server&apos;s trust store has the signer certificate from the client.
  </UserResponse>
</Message>
<!-- END MESSAGES -->
</TMSSource>
