<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="../../resources/stylesheets/wasmsgxml.css"?>
<TMSSource name="TivoliMessages" tmsVersion="1.0" xml:lang="en">
<!-- CMVC MSG File Name = OMGR/ws/code/objectmanager/src/com/ibm/ws/objectManager/CWSOMMessages.nlsprops -->
<!-- DO NOT EDIT THIS FILE - This file was generated by the XML/Html & Property emitter -->
<!-- BEGIN MESSAGES -->
<Message ID="CWSOM1007E" severity="E" prefix="yes">
  <MsgText pgmKey="StatisticsNameNotFoundException_info" varFormat="Java">
    StatisticsNameNotFoundException_info=CWSOM1007E: The statistics named={0}(String) is not recognized.
  </MsgText>
  <Explanation>
    The application requested a set of statistics that is not recognized.
  </Explanation>
  <UserResponse>
    Correct the name of the requested statistics set.
  </UserResponse>
</Message>
<Message ID="CWSOM1029E" severity="E" prefix="yes">
  <MsgText pgmKey="CheckpointEndNotFoundException_info" varFormat="Java">
    CheckpointEndNotFoundException_info=CWSOM1029E: No CheckpointEndLogRecord was found in the log file={0}(String).
  </MsgText>
  <Explanation>
    The log file ended before a checkpoint end record was found. The log files should contain at least one checkpoint start and one checkpoint end LogRecord.
  </Explanation>
  <UserResponse>
    Determine how the log file became corrupted and restore a backup log file.
  </UserResponse>
</Message>
<Message ID="CWSOM1002E" severity="E" prefix="yes">
  <MsgText pgmKey="DuplicateObjectStoreNameException_info" varFormat="Java">
    DuplicateObjectStoreNameException_info=CWSOM1002E: Attempt to construct an ObjectStore using, storeName={0}(String) which has already been used by ObjectStore={1}.
  </MsgText>
  <Explanation>
    ObjectStore names must be unique within an ObjectManager.
  </Explanation>
  <UserResponse>
    Choose a different name for the ObjectStore.
  </UserResponse>
</Message>
<Message ID="CWSOM1016E" severity="E" prefix="yes">
  <MsgText pgmKey="InvalidTransactionException_info" varFormat="Java">
    InvalidTransactionException_info=CWSOM1016E: Attempt to unlock or replace a ManagedObject={0}(ManagedObject) by InternalTransaction={1}(InternalTransaction), when it was locked under transactionLock={2}(TransactionLock).
  </MsgText>
  <Explanation>
    An attempt was made to unlock or replace a ManagedObject under a different transaction to the one that locked it. The attempt is rejected.
  </Explanation>
  <UserResponse>
    Examine the logic of the application that uses the ObjectManager Transaction.unlock(ManagedObject) interface and determine why the two transactions are different.
  </UserResponse>
</Message>
<Message ID="CWSOM1048E" severity="E" prefix="yes">
  <MsgText pgmKey="GuardBytesException_info" varFormat="Java">
    GuardBytesException_info=CWSOM1048E: Object={0} discovered potentially corrupted data in Object={1}(Object).
  </MsgText>
  <Explanation>
    For data protected by Guard bytes, the ObjectManager discovered a mismatch in the value of the Guard bytes.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="CWSOM1031E" severity="E" prefix="yes">
  <MsgText pgmKey="SimplifiedSerializationSizeExceptionException_info" varFormat="Java">
    SimplifiedSerializationSizeExceptionException_info=CWSOM1031E: Simplified serialization size exceeded maximumSize={0}(long) actualSize={1}(long).
  </MsgText>
  <Explanation>
    The size of a serialized ManagedObject exceeded the expected maximum size.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="CWSOM1043E" severity="E" prefix="yes">
  <MsgText pgmKey="InvalidLogFileTypeException_info" varFormat="Java">
    InvalidLogFileTypeException_info=CWSOM1043E: ObjectManager was passed an invalid log file type={0}(int).
  </MsgText>
  <Explanation>
    The ObjectManager constructor was passed a log file type that was not recognized as one of the LOG_FILE_TYPE_XXXX types. The ObjectManager is not instantiated.
  </Explanation>
  <UserResponse>
    Change the constructor invocation to use a recognized log file type.
  </UserResponse>
</Message>
<Message ID="CWSOM1038E" severity="E" prefix="yes">
  <MsgText pgmKey="NoRestartableObjectStoresAvailableException_info" varFormat="Java">
    NoRestartableObjectStoresAvailableException_info=CWSOM1038E: ObjectManager={0} found that no restartable ObjectStores were available.
  </MsgText>
  <Explanation>
    The ObjectManager was asked to store a reference to a named ManagedObject. However there are no restartable ObjectStores in which to store it.
  </Explanation>
  <UserResponse>
    Determine whether you need to use a named ManagedObject. If you do need to use a named ManagedObject, create a restartable ObjectStore.
  </UserResponse>
</Message>
<Message ID="CWSOM1022E" severity="E" prefix="yes">
  <MsgText pgmKey="LogFileInUseException_info" varFormat="Java">
    LogFileInUseException_info=CWSOM1022E: The log file name={0}(String), is already in use.
  </MsgText>
  <Explanation>
    The ObjectManager tried to obtain an exclusive lock on the log file but it was already in use.
  </Explanation>
  <UserResponse>
    Determine if another ObjectManager or another program is trying to use the same log file.
  </UserResponse>
</Message>
<Message ID="CWSOM1006E" severity="E" prefix="yes">
  <MsgText pgmKey="InvalidObjectStoreNameException_info" varFormat="Java">
    InvalidObjectStoreNameException_info=CWSOM1006E: ObjectStore={0}(ObjectStore) was pass an invalid name={1}(String).
  </MsgText>
  <Explanation>
    An ObjectStore was constructed using a name that is not valid. The ObjectManager did not create the ObjectStore.
  </Explanation>
  <UserResponse>
    Examine the name to determine why it is not valid.
  </UserResponse>
</Message>
<Message ID="CWSOM1013E" severity="E" prefix="yes">
  <MsgText pgmKey="NonExistentTransactionException_info" varFormat="Java">
    NonExistentTransactionException_info=CWSOM1013E: Attempt to deregister a transaction that was not registered, transaction={0}(InternalTransaction).
  </MsgText>
  <Explanation>
    An internal error has been detected inside the ObjectManager. No further actions are allowed on the Transaction.
  </Explanation>
  <UserResponse>
    CMG0002
  </UserResponse>
</Message>
<Message ID="CWSOM1009E" severity="E" prefix="yes">
  <MsgText pgmKey="StoreSequenceException_info" varFormat="Java">
    StoreSequenceException_info=CWSOM1009E: ObjectStore={0}(ObjectStore) generated sequenceNumber={1}(Long) which was already used by{2}(ManagedObject).
  </MsgText>
  <Explanation>
    An internal error has occurred in the ObjectStore.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="CWSOM1027E" severity="E" prefix="yes">
  <MsgText pgmKey="LogFileFullException_info" varFormat="Java">
    LogFileFullException_info=CWSOM1027E: Log file was too full to accommodate a total of {0}(long) bytes, the request reserved {1}(long) additional bytes and the space available is {2}(long) bytes.
  </MsgText>
  <Explanation>
    An attempt was made to write more data to the log than the available file space allowed. The attempt is rejected and the transaction state is unchanged.
  </Explanation>
  <UserResponse>
    Either, reduce the number of objects you update within your transactions. Reduce the number of transactions that are simultaneously active. Reduce the size of the ManagedObjects you update. Increase the size of your log file.
  </UserResponse>
</Message>
<Message ID="CWSOM1033E" severity="E" prefix="yes">
  <MsgText pgmKey="CollectionNotEmptyException_info" varFormat="Java">
    CollectionNotEmptyException_info=CWSOM1033E: Collection {0} is not empty dirty size={1}(long), transaction={2}(Transaction).
  </MsgText>
  <Explanation>
    The ObjectManager was asked to delete a collection ( Map or List ) that was not empty.The collection contained some entries that were not deleted or were deleted by a transaction other than the one trying to delete the collection.
  </Explanation>
  <UserResponse>
    Examine the logic of the application and discover why the transaction is tryingto delete the collection while it contains entries.
  </UserResponse>
</Message>
<Message ID="CWSOM1003E" severity="E" prefix="yes">
  <MsgText pgmKey="StateErrorException_info" varFormat="Java">
    StateErrorException_info=CWSOM1003E: Object {0} is now in error state, its previous invalid state={1}(int) {2}(String).
  </MsgText>
  <Explanation>
    An operation was requested on an object which is in a state, that is not valid for the operation. The operation fails and the object is transitioned to an error state.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="CWSOM1015E" severity="E" prefix="yes">
  <MsgText pgmKey="UnexpectedExceptionException_info" varFormat="Java">
    UnexpectedExceptionException_info=CWSOM1015E: ObjectManager unexpectedly caught exception={0}(Exception).
  </MsgText>
  <Explanation>
    An exception was caught by the ObjectManager, the ObjectManager was not able to take a reasonable action in response to the exception.
  </Explanation>
  <UserResponse>
    Investigate and resolve the cause of the underlying exception.
  </UserResponse>
</Message>
<Message ID="CWSOM1041E" severity="E" prefix="yes">
  <MsgText pgmKey="PermanentNIOException_info" varFormat="Java">
    PermanentNIOException_info=CWSOM1041E: ObjectManager caught Exception={0}(java.nio.XXX Exception).
  </MsgText>
  <Explanation>
    An nio Exception was caught by the ObjectManager, the Input/Output operation could not be safely retried and was abandoned.
  </Explanation>
  <UserResponse>
    The nio Exception contains the cause of the underlying problem. Investigate and fix the cause of the underlying nio Exception.
  </UserResponse>
</Message>
<Message ID="CWSOM1040E" severity="E" prefix="yes">
  <MsgText pgmKey="StoreFileSizeTooSmallException_info" varFormat="Java">
    StoreFileSizeTooSmallException_info=CWSOM1040E: ObjectStore fileSize too small, requested size={0}(long), existing size={1}(long) used size={2}(long).
  </MsgText>
  <Explanation>
    The ObjectManager was asked to reduce the size of a store file to a length that cannot not contain the existing ManagedObjects in the file.
  </Explanation>
  <UserResponse>
    Make a request that is for enough  space to contain the existing ManagedObjects.
  </UserResponse>
</Message>
<Message ID="CWSOM0001I" severity="I" prefix="yes">
  <MsgText pgmKey="ObjectManagerState_ColdStart" varFormat="Java">
    ObjectManagerState_ColdStart=CWSOM0001I: ObjectManager using logFile {0} was cold started.
  </MsgText>
  <Explanation>
    An empty logfile was given to the ObjectManager so it was cold started.
  </Explanation>
  <UserResponse>
    None, unless you expected the ObjectManager to warm start. In which case, investigate why the log file was empty.
  </UserResponse>
</Message>
<Message ID="CWSOM1011E" severity="E" prefix="yes">
  <MsgText pgmKey="InvalidStateException_info" varFormat="Java">
    InvalidStateException_info=CWSOM1011E: An invalid operation was attempted on Object={0} while it was in state={1}(int) {2}(String).
  </MsgText>
  <Explanation>
    An operation was attempted on the Object. The operation is not valid when the Object is in its current state. For example, you may have tried to delete a ManagedObject that is already deleted. The operation is rejected and the Object remains unchanged.
  </Explanation>
  <UserResponse>
    Investigate the state of the Object and why the operation is being attempted.
  </UserResponse>
</Message>
<Message ID="CWSOM1051E" severity="E" prefix="yes">
  <MsgText pgmKey="ThreadNotRunningException_info" varFormat="Java">
    ThreadNotRunningException_info=CWSOM1051E: Thread={0} was asked to perform request={1} after it had stopped running.
  </MsgText>
  <Explanation>
    The specified thread failed or been requested to stop when the request was made.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="CWSOM1030E" severity="E" prefix="yes">
  <MsgText pgmKey="InMemoryObjectNotAvailableException_info" varFormat="Java">
    InMemoryObjectNotAvailableException_info=CWSOM1030E: A memory based ObjectStore {0} was asked to retrieve a ManagedObject for Token={0}(Token), that was not already in memory.
  </MsgText>
  <Explanation>
    The ObjectManager was asked to retrieve a ManagedObject which should have been in memory but was not found.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="CWSOM1036E" severity="E" prefix="yes">
  <MsgText pgmKey="StoreFileInUseExceptionException_info" varFormat="Java">
    StoreFileInUseExceptionException_info=CWSOM1036E: ObjectStore={0}(ObjectStore) name={1}(String) is already in use.
  </MsgText>
  <Explanation>
    The ObjectStore found that it was already locked when it tried to take an exclusive lock on its file.
  </Explanation>
  <UserResponse>
    Determine if the ObjectStore file is being used by another ObjectManager of if the file is being used by another program.
  </UserResponse>
</Message>
<Message ID="CWSOM0200W" severity="W" prefix="yes">
  <MsgText pgmKey="ObjectStore_UnsafeToFlush" varFormat="Java">
    ObjectStore_UnsafeToFlush=CWSOM0200W: The ObjectStore {0} with strategy STRATEGY_SAVE_ONLY_ON_SHUTDOWN could not safely be closed.
  </MsgText>
  <Explanation>
    If there are active transactions at shutdown. ObjectStores with strategy STRATEGY_SAVE_ONLY_ON_SHUTDOWN cannot safely close as active transactions exist. Closing the ObjectStore might lead to it saving inconsistent data.  The ObjectStore is left unchanged.
  </Explanation>
  <UserResponse>
    Examine why active transactions exist. These active transactions might exist be because you are using an external transaction manager. If you cannot avoid having active transactions at shutdown then use an ObjectStore with a different storage strategy.
  </UserResponse>
</Message>
<Message ID="CWSOM1004E" severity="E" prefix="yes">
  <MsgText pgmKey="PermanentIOException_info" varFormat="Java">
    PermanentIOException_info=CWSOM1004E: ObjectManager caught IOException={0}(java.io.IOException).
  </MsgText>
  <Explanation>
    An IOException was caught by the ObjectManager, the IO operation could not be safely retried and was abandoned.
  </Explanation>
  <UserResponse>
    The IOException describes the specific error. Investigate and fix the cause of the underlying IOException.
  </UserResponse>
</Message>
<Message ID="CWSOM0005W" severity="W" prefix="yes">
  <MsgText pgmKey="ObjectManagerState_LogTooFull" varFormat="Java">
    ObjectManagerState_LogTooFull=CWSOM0005W: The ObjectManager found that the logFile was too full and will back out transaction {0}.
  </MsgText>
  <Explanation>
    The ObjectManager was short of log file space after it had completed a checkpoint, it backed out the largest transaction in the log in order to release some space.
  </Explanation>
  <UserResponse>
    You are trying to do too much transactional work for the size of log file you have configured. Consider whether your transactions are attempting to do too many updates, or whether you are trying to update too many large objects, or whether you are trying to run too many transactions at the same time, or whether your log file is too small and should be made larger.
  </UserResponse>
</Message>
<Message ID="CWSOM1045E" severity="E" prefix="yes">
  <MsgText pgmKey="ObjectSignatureNotFoundException_info" varFormat="Java">
    ObjectSignatureNotFoundException_info=CWSOM1045E: The ObjectManager attempted to deserialize a ManagedObject with signature={0}(int) which it did not recognize.
  </MsgText>
  <Explanation>
    An unrecognized signature was found in a ManagedObject.Thus the deserialization was abandoned.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="CWSOM1008E" severity="E" prefix="yes">
  <MsgText pgmKey="InvalidObjectToStoreException_info" varFormat="Java">
    InvalidObjectToStoreException_info=CWSOM1008E: ObjectStore={0}(ObjectStore) was requested to store invalid ManagedObject={1} (ManagedObject).
  </MsgText>
  <Explanation>
    An ObjectStore was asked to store a ManagedObject that is not valid. The Objectstore did not store the ManagedObject.
  </Explanation>
  <UserResponse>
    Examine the ManagedObject to be stored and determine why it is not valid. For example it might be a null ManagedObject.
  </UserResponse>
</Message>
<Message ID="CWSOM1028E" severity="E" prefix="yes">
  <MsgText pgmKey="InvalidLogRecordPartTypeException_info" varFormat="Java">
    InvalidLogRecordPartTypeException_info=CWSOM1028E: Invalid Log Record part type={0}(byte).
  </MsgText>
  <Explanation>
    A type flag on log record part was not recognized.
  </Explanation>
  <UserResponse>
    Determine how the log file became corrupted and restore a backup log file.
  </UserResponse>
</Message>
<Message ID="CWSOM1025E" severity="E" prefix="yes">
  <MsgText pgmKey="XIDTooLongException_info" varFormat="Java">
    XIDTooLongException_info=CWSOM1025E: Attempt to set a transaction XID which is too long XID.length={0}(int).
  </MsgText>
  <Explanation>
    An X/Open transaction identifier XID can have a maximum length as specified by java.lang.Short.MAX_VALUE.
  </Explanation>
  <UserResponse>
    Use a shorter XID length.
  </UserResponse>
</Message>
<Message ID="CWSOM1042E" severity="E" prefix="yes">
  <MsgText pgmKey="ObjectStoreFullException_info" varFormat="Java">
    ObjectStoreFullException_info=CWSOM1042E: ObjectStore={0}(ObjectStore) was asked to allocate space for ManagedObject={1}(ManagedObject) when it was full.
  </MsgText>
  <Explanation>
    An ObjectStore was already full when a new allocate request was made. The allocation request is refused.
  </Explanation>
  <UserResponse>
    Decide if you should make the ObjectStore larger or determine whether to remove some existing objects. Also you might be trying to store more or larger objects than you had planned.
  </UserResponse>
</Message>
<Message ID="CWSOM1035E" severity="E" prefix="yes">
  <MsgText pgmKey="TransactionCapacityExceededException_info" varFormat="Java">
    TransactionCapacityExceededException_info=CWSOM1035E: The maximum number of active transactions was temporarily reduced current active transactions={0}(long) current capacity ={1}(long).
  </MsgText>
  <Explanation>
    The ObjectManager was asked to start more transactions than it can support with the resources available to it. The ObjectManager reduces the number of tranactions it will start so that checkpoints can complete before the log file fills.The new transaction did not begin.
  </Explanation>
  <UserResponse>
    Either increase the size of the log file or start fewer transactions.
  </UserResponse>
</Message>
<Message ID="CWSOM0201W" severity="W" prefix="yes">
  <MsgText pgmKey="ObjectStore_AllocateFileSpaceFailed" varFormat="Java">
    ObjectStore_AllocateFileSpaceFailed=CWSOM0201W: The ObjectStore requested {0} bytes of storage when it currently has {1} bytes but received exception{2}.
  </MsgText>
  <Explanation>
    The file system cannot allocate the required space. Attempts to allocate objects in the ObjectStore will fail.
  </Explanation>
  <UserResponse>
    Examine the exception and determine why the space cannot be allocated in thefile system.
  </UserResponse>
</Message>
<Message ID="CWSOM9999E" severity="E" prefix="yes">
  <MsgText pgmKey="TEMPORARY_SIOM9999" varFormat="Java">
    TEMPORARY_SIOM9999=CWSOM9999E: {0}
  </MsgText>
  <Explanation>
    If the message does not give sufficient information.See related messages for further help.
  </Explanation>
  <UserResponse>
    See previous messages for further information.
  </UserResponse>
</Message>
<Message ID="CWSOM1018E" severity="E" prefix="yes">
  <MsgText pgmKey="LogFileExhaustedException_info" varFormat="Java">
    LogFileExhaustedException_info=CWSOM1018E: The Object={0}(Object) detected the end of the input log file because of the underlying Exception={1}(Exception).
  </MsgText>
  <Explanation>
    The ObjectManager has detected the end of the input log file.
  </Explanation>
  <UserResponse>
    No action is required if this exception has occurred as a result of reading the log to the end at restart of the ObjectManager.
  </UserResponse>
</Message>
<Message ID="CWSOM1044E" severity="E" prefix="yes">
  <MsgText pgmKey="SubListEntryNotInListException_info" varFormat="Java">
    SubListEntryNotInListException_info=CWSOM1044E: List={0}(List) was asked to create a sublist delimited by List.Entry={1}(List.Entry) which it did not contain.
  </MsgText>
  <Explanation>
    A list was requested to create a sublist delimited by entries it did not contain. The sublist was not created.
  </Explanation>
  <UserResponse>
    Review the application code to determine why the entry was not in the list. For example the entry might have already been removed from the list.
  </UserResponse>
</Message>
<Message ID="CWSOM0004I" severity="I" prefix="yes">
  <MsgText pgmKey="ObjectManagerState_ShutdownFast" varFormat="Java">
    ObjectManagerState_ShutdownFast=CWSOM0004I: ObjectManager using logFile {0} has shut down without performing a final checkpoint.
  </MsgText>
  <Explanation>
    The ObjectManager was requested to shutdown without performing a final checkpoint, or shut down because of some previous error.
  </Explanation>
  <UserResponse>
    None, unless you did not expect the ObjectManager to shut down without performing a final checkpoint. Examine diagnostic output to determine the cause of a unexpected shutdown.
  </UserResponse>
</Message>
<Message ID="CWSOM1039E" severity="E" prefix="yes">
  <MsgText pgmKey="DuplicateKeyExceptionException_info" varFormat="Java">
    DuplicateKeyExceptionException_info=CWSOM1039E: Duplicate key={0}(Object) conflicts with existing entry={1}(Map.Entry) locked by transaction={3}(InternalTransaction).
  </MsgText>
  <Explanation>
    An attempt was made to add a unique key to a Map when an identical key already exists in the Map.The existing key is already part of another transaction and cannot be replaced with the new key.
  </Explanation>
  <UserResponse>
    Either request addition of a duplicate key using the putDuplicate methodor find out why the application is trying to replace an existing key.
  </UserResponse>
</Message>
<Message ID="CWSOM1020E" severity="E" prefix="yes">
  <MsgText pgmKey="UnknownObjectStoreException_info" varFormat="Java">
    UnknownObjectStoreException_info=CWSOM1020E: Attempt to locate an ObjectStore that was not registered, storeName={0}(String).
  </MsgText>
  <Explanation>
    The ObjectManager was asked to locate an ObjectStore that was not registered with it.
  </Explanation>
  <UserResponse>
    The ObjectStore may have been removed from the ObjectManager. Recreate the ObjectStore.
  </UserResponse>
</Message>
<Message ID="CWSOM1024E" severity="E" prefix="yes">
  <MsgText pgmKey="XIDModificationException_info" varFormat="Java">
    XIDModificationException_info=CWSOM1024E: Attempt to set a transaction XID when it is already set existing XID={0}([]byte) rejectedXID={1}([]byte).
  </MsgText>
  <Explanation>
    A transaction may only have one X/Open transaction identifier XID only. This cannot be modified after it is set.
  </Explanation>
  <UserResponse>
    Examine the logic of the application and determine why it is trying to change the XID of a transaction that the application has already set.
  </UserResponse>
</Message>
<Message ID="CWSOM0002I" severity="I" prefix="yes">
  <MsgText pgmKey="ObjectManagerState_WarmStart" varFormat="Java">
    ObjectManagerState_WarmStart=CWSOM0002I: ObjectManager using logFile {0} was warm started logFileType={1}.
  </MsgText>
  <Explanation>
    A valid logfile was given to the ObjectManager which it was able to restart from.
  </Explanation>
  <UserResponse>
    None, unless you expected the ObjectManager to cold start. In which case, investigate why the log file was not empty.
  </UserResponse>
</Message>
<Message ID="CWSOM1049E" severity="E" prefix="yes">
  <MsgText pgmKey="InvalidStoreSignatureException_info" varFormat="Java">
    InvalidStoreSignatureException_info=CWSOM1049E: ObjectStore name={0} discovered corrupted signature={1}(String) instead of the correct signature={2}(String).
  </MsgText>
  <Explanation>
    The ObjectStore has a corrupted header and cannot be processed.
  </Explanation>
  <UserResponse>
    Determine how the file became corrupted and restore a backup.
  </UserResponse>
</Message>
<Message ID="CWSOM1010E" severity="E" prefix="yes">
  <MsgText pgmKey="ReplacementException_info" varFormat="Java">
    ReplacementException_info=CWSOM1010E: ObjectStore {0} was asked to replace ManagedObject {1} referenced by Token {2} when a different Token {3} which already existed in the store.
  </MsgText>
  <Explanation>
    A Token is identified by an objectStoreIdentifier and a storedObjectIdentifier. Only one token of each identity store may exist, but the new Token and an existing one share the same identity.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="CWSOM1050E" severity="E" prefix="yes">
  <MsgText pgmKey="InvalidLogFileSignatureException_info" varFormat="Java">
    InvalidLogFileSignatureException_info=CWSOM1050E: A corrupted signature={0}(String) was found in the log file instead of the correct signature={1}(String).
  </MsgText>
  <Explanation>
    The log file has a corrupted header and cannot be processed.
  </Explanation>
  <UserResponse>
    Determine how the file became corrupted and restore a backup.
  </UserResponse>
</Message>
<Message ID="CWSOM1037E" severity="E" prefix="yes">
  <MsgText pgmKey="PrematureEndOfLogFileException_info" varFormat="Java">
    PrematureEndOfLogFileException_info=CWSOM1037E: Log File name={0}(String), physical size found shorter than expected size={1}(long) trying to access byte={2}(Long).
  </MsgText>
  <Explanation>
    The log file does not end normally, the physical file might be truncated.
  </Explanation>
  <UserResponse>
    Determine of the log file is damaged, restore the original undamaged file.
  </UserResponse>
</Message>
<Message ID="CWSOM1021E" severity="E" prefix="yes">
  <MsgText pgmKey="InvalidConditionException_info" varFormat="Java">
    InvalidConditionException_info=CWSOM1021E: Invalid condition detected by {0}(Object). Variable={1} contained value={2}.
  </MsgText>
  <Explanation>
    In internal error has occurred and a condition that is not valid has been found.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="CWSOM1046E" severity="E" prefix="yes">
  <MsgText pgmKey="InvalidStoreStrategyException_info" varFormat="Java">
    InvalidStoreStrategyException_info=CWSOM1046E: ObjectStore={0} was constructed using an invalid store strategy={1}(int).
  </MsgText>
  <Explanation>
    ObjectStores can only be constructed with valid storage strategies.
  </Explanation>
  <UserResponse>
    Use a valid storage strategy to construct the ObjectStore. Refer to the ObjectManagerjavadoc for valid strategies.
  </UserResponse>
</Message>
<Message ID="CWSOM1052E" severity="E" prefix="yes">
  <MsgText pgmKey="NonExistentObjectStoreFileException_info" varFormat="Java">
    NonExistentObjectStoreFileException_info=CWSOM1052E: ObjectStore={0}(ObjectStore) caught exception={1}(Exception) trying to locate or create file name={2}(String).
  </MsgText>
  <Explanation>
    An exception was caught when the ObjectStore tried to open the named file. The ObjectManager will not start.
  </Explanation>
  <UserResponse>
    Verify that the file name is valid, that the file exists, and that the ObjectManager has the appropriate permissions to write it. If necessary provide a mapping of the logical store name to the physical location of the file when the ObjectManager starts.
  </UserResponse>
</Message>
<Message ID="CWSOM1017E" severity="E" prefix="yes">
  <MsgText pgmKey="NonExistentLogFileException_info" varFormat="Java">
    NonExistentLogFileException_info=CWSOM1017E: ObjectManagerState={0}(ObjectManagerState) caught exception={1}(Exception) trying to locate or create log file name={2}(String).
  </MsgText>
  <Explanation>
    An exception was caught when the ObjectManager tried to open the named log file. The ObjectManager will not start.
  </Explanation>
  <UserResponse>
    Verify that the log file name is valid, and that the ObjectManager has the appropriate permissions to write it.
  </UserResponse>
</Message>
<Message ID="CWSOM1014E" severity="E" prefix="yes">
  <MsgText pgmKey="NonExistentObjectStoreTemporaryIOException_info" varFormat="Java">
    NonExistentObjectStoreTemporaryIOException_info=CWSOM1014E: Attempt to locate an ObjectStore that was not registered, storeIdentifier={0}(int).
  </MsgText>
  <Explanation>
    A reference was made by a token to an ObjectStore that is not known to the ObjectManager.
  </Explanation>
  <UserResponse>
    If the ObjectStore was removed from the ObjectManager this exception will be caught whenever existing Tokens reference the Objectstore. Reinstate the ObjectStore or stop using the Tokens that attempt to access it.
  </UserResponse>
</Message>
<Message ID="CWSOM1026E" severity="E" prefix="yes">
  <MsgText pgmKey="InterfaceDisabledExceptionException_info" varFormat="Java">
    InterfaceDisabledExceptionException_info=CWSOM1026E: Attempt to use disabled  methodName={1}(String) in source={0}(Object).
  </MsgText>
  <Explanation>
    An attempt was made to use an interface that is disabled.
  </Explanation>
  <UserResponse>
    Stop using the interface, or switch to a version of the ObjectManager that supports the interface.
  </UserResponse>
</Message>
<Message ID="CWSOM1005E" severity="E" prefix="yes">
  <MsgText pgmKey="TemporaryIOException_info" varFormat="Java">
    TemporaryIOException_info=CWSOM1005E: ObjectManager caught IOException={0}(java.io.IOException).
  </MsgText>
  <Explanation>
    An IOException was caught by the ObjectManager, the IO operation was abandoned, but could be safely retried by retrying the ObjectManager application programming interface (API), after the underlying cause is fixed.
  </Explanation>
  <UserResponse>
    The IOException describes the specific error. Investigate and fix the cause of the underlying IOException, then retry the operation.
  </UserResponse>
</Message>
<Message ID="CWSOM1012E" severity="E" prefix="yes">
  <MsgText pgmKey="DuplicateTransactionException_info" varFormat="Java">
    DuplicateTransactionException_info=CWSOM1012E: ObjectManagerState={0}(ObjectManagerState) attempted to register or free a new transaction={1}(InternalTransaction) that the same LogicalUnitOfWork identifier as transaction={2}(InternalTransaction).
  </MsgText>
  <Explanation>
    The ObjectManager has discovered a new and existing transaction that have the same transaction identifier. This is an internal error and should not occur.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="CWSOM1001E" severity="E" prefix="yes">
  <MsgText pgmKey="ClassNotFoundException_info" varFormat="Java">
    ClassNotFoundException_info=CWSOM1001E: ObjectManager caught ClassNotFoundException={0}(java.lang.ClassNotFoundException) while trying to deserialize an ManagedObject.
  </MsgText>
  <Explanation>
    A java.lang.ClassNotFoundException was caught when the ObjectManager attempted to deserialize a ManagedObject.
  </Explanation>
  <UserResponse>
    The exception contains the name of the class that could not be found. Make it available to the ObjectManagers class loader, for example by including the class file on the class path.
  </UserResponse>
</Message>
<Message ID="CWSOM1023E" severity="E" prefix="yes">
  <MsgText pgmKey="LogFileHeaderCorruptException_info" varFormat="Java">
    LogFileHeaderCorruptException_info=CWSOM1023E: Log file has no valid header.
  </MsgText>
  <Explanation>
    The transaction log file contained data that the ObjectManager cannot interpret.
  </Explanation>
  <UserResponse>
    Check that the log file is the correct file.
  </UserResponse>
</Message>
<Message ID="CWSOM0003I" severity="I" prefix="yes">
  <MsgText pgmKey="ObjectManagerState_Shutdown" varFormat="Java">
    ObjectManagerState_Shutdown=CWSOM0003I: ObjectManager using logFile {0} has shut down.
  </MsgText>
  <Explanation>
    The ObjectManager was requested to shutdown.
  </Explanation>
  <UserResponse>
    None, unless you did not expect the ObjectManager to shut down.
  </UserResponse>
</Message>
<Message ID="CWSOM1019E" severity="E" prefix="yes">
  <MsgText pgmKey="InvalidLogRecordTypeException_info" varFormat="Java">
    InvalidLogRecordTypeException_info=CWSOM1019E: Invalid log record type={0}(int) was read from the transaction log.
  </MsgText>
  <Explanation>
    The ObjectManager was recovering and found a log record with a type that it did not recognize, the ObjectManager is not instantiated.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="CWSOM1047E" severity="E" prefix="yes">
  <MsgText pgmKey="DuplicateObjectStoreIdentifierException_info" varFormat="Java">
    DuplicateObjectStoreIdentifierException_info=CWSOM1047E: Attempt to construct an ObjectStore using, storeName={0}(String) and identifier {1} which has already been used by ObjectStore={2}
  </MsgText>
  <Explanation>
    ObjectStore identifiers must be unique within an ObjectManager.
  </Explanation>
  <UserResponse>
    Add existing ObjectStores to the ObjectManagerbefore creating new Objectstores. This procedure enables the ObjectManager to avoid reusing the identifier.
  </UserResponse>
</Message>
<Message ID="CWSOM1032E" severity="E" prefix="yes">
  <MsgText pgmKey="LogFileSizeTooSmallException_info" varFormat="Java">
    LogFileSizeTooSmallException_info=CWSOM1032E: Log fileSize too small, existing size={0}(long) requested size ={1}(long) available space={2}(long) predicted occupancy={3}(float) occupancy threshold={4}(float).
  </MsgText>
  <Explanation>
    The ObjectManager was asked to reduce the size of the transaction log. The requested size was too small to contain the existing log data. The new size is below the limit which will currently allow the ObjectManager to function without continually performing checkpoints.
  </Explanation>
  <UserResponse>
    Make a larger request or reduce the load on the log by writing fewer or smaller ManagedObjects.
  </UserResponse>
</Message>
<Message ID="CWSOM1034E" severity="E" prefix="yes">
  <MsgText pgmKey="TooManyTransactionsException_info" varFormat="Java">
    TooManyTransactionsException_info=CWSOM1034E: An application attempted to start more that the defined maximum={0}(long) number of transactions.
  </MsgText>
  <Explanation>
    The ObjectManager was asked to start more transactions than specified in its configuration.The new transaction did not begin.
  </Explanation>
  <UserResponse>
    Examine the logic of the application and discover why it tried to start too many transactions. It is possible that the application is starting transactions, but not committing them or backing them out.
  </UserResponse>
</Message>
<Message ID="CWSOM0100W" severity="W" prefix="yes">
  <MsgText pgmKey="InternalTransaction_BackoutOrphan" varFormat="Java">
    InternalTransaction_BackoutOrphan=CWSOM0100W: A transaction {0} was discovered during garbage collection and will be backed out.
  </MsgText>
  <Explanation>
    The application lost its reference to a transaction and cannot complete the transaction. Thus, the ObjectManager will back out the transaction in order to free up its resources.
  </Explanation>
  <UserResponse>
    Your application lost its reference to a transaction. If the application terminated abnormally there us nothing further to do. If however, the application lost its reference without terminating abnormally this could be considered to be a logic error in the application.
  </UserResponse>
</Message>
<!-- END MESSAGES -->
</TMSSource>
