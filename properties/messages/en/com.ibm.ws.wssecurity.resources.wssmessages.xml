<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="../../resources/stylesheets/wasmsgxml.css"?>
<TMSSource name="TivoliMessages" tmsVersion="1.0" xml:lang="en">
<!-- CMVC MSG File Name = ws/code/security.wssecurity/src/com/ibm/ws/webservices/wssecurity/resources/wssmessages.nlsprops --> 
<!-- DO NOT EDIT THIS FILE - This file was generated by the XML/Html & Property emitter -->
<!-- BEGIN MESSAGES -->
<Message ID="CWWSS5680E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.XPathElementSelector.s01" varFormat="Java">
    security.wssecurity.XPathElementSelector.s01=CWWSS5680E: Tranforming the XPath expression {0} produced the following exception: {1}
  </MsgText>
  <Explanation>
    The specified XPath expression was not properly formed. 
  </Explanation>
  <UserResponse>
    Correct the XPath expression in the policy. 
  </UserResponse>
</Message>
<Message ID="CWWSS5328E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.IdUtil.s01" varFormat="Java">
    security.wssecurity.IdUtil.s01=CWWSS5328E: The {0} identifier is used to identify multiple sections of the message.
  </MsgText>
  <Explanation>
    An identifier is used to uniquely label a section of a message. If more than one section have the same identifier, then it is impossible to associate the id to a unique section. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS0166E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0166E" varFormat="Java">
    security.wssecurity.WSEC0166E=CWWSS0166E: Global security must be enabled in order to use the Web services security token propagation feature.
  </MsgText>
  <Explanation>
    An attempt was made to use the Web services security token propagation feature, but global security was not enabled in the Application Server. 
  </Explanation>
  <UserResponse>
    Enable global security in the Application Server. 
  </UserResponse>
</Message>
<Message ID="CWWSS6718E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6718E" varFormat="Java">
    security.wssecurity.WSEC6718E=CWWSS6718E: Namespace value used to get the Qualified Name (QName) is null.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6826W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6826W" varFormat="Java">
    security.wssecurity.WSEC6826W=CWWSS6826W: The {0} certificate cache size is less than the allowed minimum size {1}. The default {2} cache size is used.
  </MsgText>
  <Explanation>
    The certificate cache size is less than the allowed minimum size. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6717W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6717W" varFormat="Java">
    security.wssecurity.WSEC6717W=CWWSS6717W: Default CallbackHandler element is not defined.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6825W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6825W" varFormat="Java">
    security.wssecurity.WSEC6825W=CWWSS6825W: The {0} seconds value for the certificate cache timeout is less than the minimum. The minimum {1} seconds is used.
  </MsgText>
  <Explanation>
    The certificate cache timeout has a minimum value. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5173E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.soapsecurityexception.orig.fault" varFormat="Java">
    security.wssecurity.soapsecurityexception.orig.fault=CWWSS5173E: The original fault is: {0}
  </MsgText>
  <Explanation>
    This message is a formatted version of a SOAP fault message. 
  </Explanation>
  <UserResponse>
    Examine the formatted SOAP fault message, which will list the actual problem. 
  </UserResponse>
</Message>
<Message ID="CWWSS6716W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6716W" varFormat="Java">
    security.wssecurity.WSEC6716W=CWWSS6716W: Default TokenGenerator element is not defined.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7202E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTGenerateLoginModule.issueSCT" varFormat="Java">
    security.wssecurity.SCTGenerateLoginModule.issueSCT=CWWSS7202E: Issuing of Security Context Token fails. The exception is : {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6824W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6824W" varFormat="Java">
    security.wssecurity.WSEC6824W=CWWSS6824W: The configured Nonce length {0} is not a valid integer. Using default Nonce length {1}.
  </MsgText>
  <Explanation>
    Nonce length must be an integer. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7518E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.wsanamespace" varFormat="Java">
    security.wssecurity.trust.client.wsanamespace=CWWSS7518E: Invalid WS-Addressing namespace [{0}].
  </MsgText>
  <Explanation>
    The WS-Addressing namespace specified is not a valid namespace. 
  </Explanation>
  <UserResponse>
    Specify a WS-Addressing namespace that is supported by the trust client. 
  </UserResponse>
</Message>
<Message ID="CWWSS7566E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7566E" varFormat="Java">
    security.wssecurity.CWWSS7566E=CWWSS7566E: The SecurityToken of type {0} must contain an OMElement representation.
  </MsgText>
  <Explanation>
    A SecurityToken was identified in the security header without an OMElement representation 
  </Explanation>
  <UserResponse>
    The token generator must be configured to create tokens using an OMElement representation. 
  </UserResponse>
</Message>
<Message ID="CWWSS6715W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6715W" varFormat="Java">
    security.wssecurity.WSEC6715W=CWWSS6715W: Default KeyInfoContentGenerator element is not defined.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8029E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8029E" varFormat="Java">
    security.wssecurity.CWWSS8029E=CWWSS8029E: The SAML AudienceRestriction MUST contain EntityID [{0}] of the service provider.
  </MsgText>
  <Explanation>
    The SAML AudienceRestriction does not contain the service provider&apos;s EntityID. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits the correct AudienceRestriction. 
  </UserResponse>
</Message>
<Message ID="CWWSS6823W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6823W" varFormat="Java">
    security.wssecurity.WSEC6823W=CWWSS6823W: The configured Nonce cache size {0} is not a valid integer. Using default Nonce cache size {1}.
  </MsgText>
  <Explanation>
    Nonce cache size must be an integer. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7565E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7565E" varFormat="Java">
    security.wssecurity.CWWSS7565E=CWWSS7565E: No unique Id was defined in the SAML attributes.
  </MsgText>
  <Explanation>
    A unique Id is required but was not found in the SAML attributes. 
  </Explanation>
  <UserResponse>
    Define a uniqueId for the SAML token in the bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS6714W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6714W" varFormat="Java">
    security.wssecurity.WSEC6714W=CWWSS6714W: Default KeyLocator element is not defined.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8028E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8028E" varFormat="Java">
    security.wssecurity.CWWSS8028E=CWWSS8028E: The received Assertion must not exceed the time in the SessionNotOnOrAfter attribute in the &lt;AuthnStatement&gt; element.
  </MsgText>
  <Explanation>
    The received Assertion has exceeded the SessionNotOnOrAfter attribute from &lt;AuthnStatement&gt; element. 
  </Explanation>
  <UserResponse>
    Synchronize the system clocks between your SAML identity provider and WebSphere Application Server service provider, and ensure SessionNotOnOrAfter is large enough for recipient processing. 
  </UserResponse>
</Message>
<Message ID="CWWSS6859E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6859E" varFormat="Java">
    security.wssecurity.WSEC6859E=CWWSS6859E: A renewable security token has expired.
  </MsgText>
  <Explanation>
    The security token has expired. 
  </Explanation>
  <UserResponse>
    Renew the security token. 
  </UserResponse>
</Message>
<Message ID="CWWSS5114E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EncryptionReceiver.enc13" varFormat="Java">
    security.wssecurity.EncryptionReceiver.enc13=CWWSS5114E: The EncryptedData element cannot be found however, the ({0}) element is found.
  </MsgText>
  <Explanation>
    The XML encryption process requires the EncryptedData element, which cannot be found. 
  </Explanation>
  <UserResponse>
    Verify that you encrypted the SOAP message correctly using W3C XML encryption and Organization for the Advancement of Structured Information Standards (OASIS) Web service security specifications. 
  </UserResponse>
</Message>
<Message ID="CWWSS7564E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7564E" varFormat="Java">
    security.wssecurity.CWWSS7564E=CWWSS7564E: No principal was defined in the SAML attributes.
  </MsgText>
  <Explanation>
    A principal is required but was not found in the SAML attributes. 
  </Explanation>
  <UserResponse>
    Define a principal for the SAML token in the bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS6713W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6713W" varFormat="Java">
    security.wssecurity.WSEC6713W=CWWSS6713W: Java Authentication and Authorization Service (JAAS) configuration is not defined.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7204E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTGenerateLoginModule.DKG02" varFormat="Java">
    security.wssecurity.SCTGenerateLoginModule.DKG02=CWWSS7204E: Derived key is not valid
  </MsgText>
  <Explanation>
    Might be due to a problem during the derived key generation 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8027E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8027E" varFormat="Java">
    security.wssecurity.CWWSS8027E=CWWSS8027E: The NotBefore attribute in the &lt;SubjectConfirmationData&gt; element is not allowed.
  </MsgText>
  <Explanation>
    The NotBefore attribute in the &lt;SubjectConfirmationData&gt; element is not allowed. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it does not emit the NotBefore attribute in the &lt;SubjectConfirmationData&gt; element. 
  </UserResponse>
</Message>
<Message ID="CWWSS6822E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6822E" varFormat="Java">
    security.wssecurity.WSEC6822E=CWWSS6822E: The {0} token consumer that refers to the required security token in the policy is used for decryption. Use the required security token for stand-alone tokens.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6858E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6858E" varFormat="Java">
    security.wssecurity.WSEC6858E=CWWSS6858E: The requested scope is not valid or not supported.
  </MsgText>
  <Explanation>
    The Application Server cannot process the request because the requested scope is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation or the configuration to determine the valid scopes. 
  </UserResponse>
</Message>
<Message ID="CWWSS7066E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CertificateFactory.getInstance" varFormat="Java">
    security.wssecurity.CertificateFactory.getInstance=CWWSS7066E: Certificate type {0} is not supported, exception: {1}
  </MsgText>
  <Explanation>
    This error is caused by the requested certificate type is not available from the JCE provider. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7563E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7563E" varFormat="Java">
    security.wssecurity.CWWSS7563E=CWWSS7563E: No realm was defined in the SAML attributes.
  </MsgText>
  <Explanation>
    A realm is required but was not found in the SAML attributes. 
  </Explanation>
  <UserResponse>
    Define a realm for the SAML token in the bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS6712W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6712W" varFormat="Java">
    security.wssecurity.WSEC6712W=CWWSS6712W: Default TokenConsumer element is not defined.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8026E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8026E" varFormat="Java">
    security.wssecurity.CWWSS8026E=CWWSS8026E: The SAML Assertion must not pass NotOnOrAfter in the &lt;SubjectConfirmationData&gt; element.
  </MsgText>
  <Explanation>
    The SAML Assertion has passed NotOnOrAfter in the &lt;SubjectConfirmationData&gt; element. 
  </Explanation>
  <UserResponse>
    Synchronize the system clocks between your SAML identity provider and WebSphere Application Server service provider, and ensure NotOnOrAfter is large enough for recipient processing. 
  </UserResponse>
</Message>
<Message ID="CWWSS6821E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6821E" varFormat="Java">
    security.wssecurity.WSEC6821E=CWWSS6821E: The {0} token consumer that refers to the required security token in the policy is used for signature verification. Use the required security token for stand-alone tokens.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6857E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6857E" varFormat="Java">
    security.wssecurity.WSEC6857E=CWWSS6857E: The requested time range is not valid or not supported.
  </MsgText>
  <Explanation>
    The Application Server cannot process the request because the requested time range is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation or the configuration to determine the valid time ranges. 
  </UserResponse>
</Message>
<Message ID="CWWSS7562E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7562E" varFormat="Java">
    security.wssecurity.CWWSS7562E=CWWSS7562E: The SAML token contains more than one unique ID.
  </MsgText>
  <Explanation>
    Only one unique ID may be defined for a SAML token 
  </Explanation>
  <UserResponse>
    Define a single unique ID for the SAML token in the bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS6711W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6711W" varFormat="Java">
    security.wssecurity.WSEC6711W=CWWSS6711W: Default KeyInfoContentConsumer element is not defined.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7308E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSOutboundConfig.s01" varFormat="Java">
    security.wssecurity.WSSOutboundConfig.s01=CWWSS7308E: The WSS API configuration is not valid. The following exception occurred: {0}
  </MsgText>
  <Explanation>
    The WSS API configuration is not valid. See the referenced exception. 
  </Explanation>
  <UserResponse>
    Correct the WSS API configuration. 
  </UserResponse>
</Message>
<Message ID="CWWSS8025E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8025E" varFormat="Java">
    security.wssecurity.CWWSS8025E=CWWSS8025E: The SAML recipient attribute [{0}] MUST match the assertion consumer service URL [{1}].
  </MsgText>
  <Explanation>
    The SAML recipient is a URI specifying the entity or location to which an attesting entity can present the assertion. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits a correct Recipient attribute. 
  </UserResponse>
</Message>
<Message ID="CWWSS7533E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.requestfailed" varFormat="Java">
    security.wssecurity.trust.client.requestfailed=CWWSS7533E: The trust client request failed [{0}].
  </MsgText>
  <Explanation>
    The trust client failed to establish communications with the specified trust service provider. 
  </Explanation>
  <UserResponse>
    Verify that the specified trust service provider Web service address is correct, and the application trust policy set and bindings are configured correctly for the trust service provider. 
  </UserResponse>
</Message>
<Message ID="CWWSS6820E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6820E" varFormat="Java">
    security.wssecurity.WSEC6820E=CWWSS6820E: The {0} security token does not have a token consumer references.
  </MsgText>
  <Explanation>
    The Security token need a token consumer reference. 
  </Explanation>
  <UserResponse>
    Check binding file for the security token type. 
  </UserResponse>
</Message>
<Message ID="CWWSS6856E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6856E" varFormat="Java">
    security.wssecurity.WSEC6856E=CWWSS6856E: The request data is out of date.
  </MsgText>
  <Explanation>
    The data in the request has expired. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7318E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KRBGenerateLoginModule.s03" varFormat="Java">
    security.wssecurity.KRBGenerateLoginModule.s03=CWWSS7318E: Invalid SPN format: {0}. Expected format: service_name/hostname
  </MsgText>
  <Explanation>
    The format to use for the property is in service_name/hostname. 
  </Explanation>
  <UserResponse>
    Verify the value of property named com.ibm.wsspi.wssecurity.krbtoken.serviceSPN. 
  </UserResponse>
</Message>
<Message ID="CWWSS7317E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KRBGenerateLoginModule.s02" varFormat="Java">
    security.wssecurity.KRBGenerateLoginModule.s02=CWWSS7317E: Failed to login for Kerberos AP_REQ token generation due to exception {0}.
  </MsgText>
  <Explanation>
    Kerberos login failed to generate the Kerberos AP_REQ token for the current message due to the exception stated. 
  </Explanation>
  <UserResponse>
    Verify the intended user is valid in Kerberos registry and specified correctly in the binding file. Set JVM properties, com.ibm.security.jgss.debug=all, com.ibm.security.krb5.Krb5Debug=all, com.ibm.security.ktp.debug=all for more log messages. 
  </UserResponse>
</Message>
<Message ID="CWWSS7292E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KRBGenerateLoginModule.s01" varFormat="Java">
    security.wssecurity.KRBGenerateLoginModule.s01=CWWSS7292E: Failed to login for Kerberos AP_REQ token generation due to exception {0} from Kerberos Token Profile processing runtime.
  </MsgText>
  <Explanation>
    Kerberos login failed to generate the Kerberos AP_REQ token for the current message due to the exception. 
  </Explanation>
  <UserResponse>
    Verify the intended user is valid in Kerberos registry and specified correctly in the binding file. Set JVM properties, com.ibm.security.jgss.debug=all, com.ibm.security.krb5.Krb5Debug=all, com.ibm.security.ktp.debug=all for more log messages. 
  </UserResponse>
</Message>
<Message ID="CWWSS7531E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.instance" varFormat="Java">
    security.wssecurity.trust.client.instance=CWWSS7531E: Unable to create a new instance of the trust client.
  </MsgText>
  <Explanation>
    The trust client was unable to access the necessary resources to create a new instance. 
  </Explanation>
  <UserResponse>
    Verify that the product was installed properly, and the application classpath is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS7561E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7561E" varFormat="Java">
    security.wssecurity.CWWSS7561E=CWWSS7561E: The SAML attribute for unique ID has more than one value.
  </MsgText>
  <Explanation>
    The SAML attribute defining the unique ID can have only one value. 
  </Explanation>
  <UserResponse>
    Assign a single value to the SAML attribute defining the unique ID in the bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS8024E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8024E" varFormat="Java">
    security.wssecurity.CWWSS8024E=CWWSS8024E: The SAML Assertion MUST contain a Recipient in the &lt;SubjectConfirmationData&gt; element.
  </MsgText>
  <Explanation>
    The SAML Assertion does not contain a required Recipient in &lt;SubjectConfirmationData&gt; element. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits &lt;SubjectConfirmationData&gt; element. 
  </UserResponse>
</Message>
<Message ID="CWWSS6855E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6855E" varFormat="Java">
    security.wssecurity.WSEC6855E=CWWSS6855E: The specified RequestSecurityToken token is not understood.
  </MsgText>
  <Explanation>
    The Application Server cannot process the request because elements exist that are not understood. 
  </Explanation>
  <UserResponse>
    Refer to the information center for information on the request formats. 
  </UserResponse>
</Message>
<Message ID="CWWSS7560E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7560E" varFormat="Java">
    security.wssecurity.CWWSS7560E=CWWSS7560E: The SAML token contains more than one realm.
  </MsgText>
  <Explanation>
    Only one realm may be defined for a SAML token 
  </Explanation>
  <UserResponse>
    Define a single realm for the SAML token in the bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS8023E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8023E" varFormat="Java">
    security.wssecurity.CWWSS8023E=CWWSS8023E: The SAML Assertion MUST contain a SubjectConfirmation Method of urn:oasis:names:tc:SAML:2.0:cm:bearer.
  </MsgText>
  <Explanation>
    The SAML Assertion does not contain a required SubjectConfirmation Method of urn:oasis:names:tc:SAML:2.0:cm:bearer. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits a bearer Subject Confirmation method. 
  </UserResponse>
</Message>
<Message ID="CWWSS6854E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6854E" varFormat="Java">
    security.wssecurity.WSEC6854E=CWWSS6854E: The digest elements are not sufficient.
  </MsgText>
  <Explanation>
    The request is missing some of the required authentication information. 
  </Explanation>
  <UserResponse>
    Refer to the information center for information on the authentication requirements. 
  </UserResponse>
</Message>
<Message ID="CWWSS8022E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8022E" varFormat="Java">
    security.wssecurity.CWWSS8022E=CWWSS8022E: The SAML Assertion MUST contain a &lt;Subject&gt; element.
  </MsgText>
  <Explanation>
    The SAML Assertion MUST contain a &lt;Subject&gt; element. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits a &lt;Subject&gt; element. 
  </UserResponse>
</Message>
<Message ID="CWWSS6853E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6853E" varFormat="Java">
    security.wssecurity.WSEC6853E=CWWSS6853E: Security token has been revoked.
  </MsgText>
  <Explanation>
    The security token is not valid. 
  </Explanation>
  <UserResponse>
    Obtain a new security token. 
  </UserResponse>
</Message>
<Message ID="CWWSS7294E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KRBConsumeLoginModule.s02" varFormat="Java">
    security.wssecurity.KRBConsumeLoginModule.s02=CWWSS7294E: Failed to login for Kerberos AP_REQ token consumption due to exception {0}.
  </MsgText>
  <Explanation>
    Kerberos login failed to consume the Kerberos AP_REQ token for the current message due to the exception. 
  </Explanation>
  <UserResponse>
    Verify the Kerberos Distribution Center(KDC) is configured properly to accept the request AP_REQ token. Set JVM properties, com.ibm.security.jgss.debug=all, com.ibm.security.krb5.Krb5Debug=all, com.ibm.security.ktp.debug=all for more log messages. 
  </UserResponse>
</Message>
<Message ID="CWWSS7293E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KRBConsumeLoginModule.s01" varFormat="Java">
    security.wssecurity.KRBConsumeLoginModule.s01=CWWSS7293E: Failed to login for Kerberos AP_REQ token consumption due to exception {0} from Kerberos Token Profile processing runtime.
  </MsgText>
  <Explanation>
    Kerberos login failed to consume the Kerberos AP_REQ token for the current message due to the exception. 
  </Explanation>
  <UserResponse>
    Verify the Kerberos Distribution Center(KDC) is configured properly to accept the request AP_REQ token. Set JVM properties, com.ibm.security.jgss.debug=all, com.ibm.security.krb5.Krb5Debug=all, com.ibm.security.ktp.debug=all for more log messages. 
  </UserResponse>
</Message>
<Message ID="CWWSS8021E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8021E" varFormat="Java">
    security.wssecurity.CWWSS8021E=CWWSS8021E: The SAML assertions MUST contain at least one &lt;AuthnStatement&gt; element that reflects the authentication of the principal to the identity provider.
  </MsgText>
  <Explanation>
    The SAML assertions do not contain a required &lt;AuthnStatement&gt; element that reflects the authentication of the principal to the identity provider. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits at least one &lt;AuthStatement&gt; element. 
  </UserResponse>
</Message>
<Message ID="CWWSS6852E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6852E" varFormat="Java">
    security.wssecurity.WSEC6852E=CWWSS6852E: The specified request failed.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5533E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ReferenceProcessor.s01" varFormat="Java">
    security.wssecurity.ReferenceProcessor.s01=CWWSS5533E: A digest value over {0} and the containing element {1} does not satisfy onlySignEntireHeadersAndBody assertion.
  </MsgText>
  <Explanation>
    A signature digest must cover over the entire soap body, or cover over an entire soap header, or cover over a direct child element of the security header when the onlySignEntireHeadersAndBody assertion presents. Please refer to Section 6.6 &quot;[Entire Header and Body Signatures] Property&quot; of the WS-SecurityPolicy v1.2 Specification. 
  </Explanation>
  <UserResponse>
    Check the security policy for both server and client applications and correct the corresponding SignedElements assertion. 
  </UserResponse>
</Message>
<Message ID="CWWSS8020E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8020E" varFormat="Java">
    security.wssecurity.CWWSS8020E=CWWSS8020E: The SAML response MUST contain at least one &lt;Assertion&gt; element.
  </MsgText>
  <Explanation>
    The SAML response does not contain a required &lt;Assertion&gt; element. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits at least one &lt;Assertion&gt; element. 
  </UserResponse>
</Message>
<Message ID="CWWSS6851E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6851E" varFormat="Java">
    security.wssecurity.WSEC6851E=CWWSS6851E: Authentication failed.
  </MsgText>
  <Explanation>
    The request does not meet the authentication requirements. 
  </Explanation>
  <UserResponse>
    Refer to the configuration files for the authentication requirements. 
  </UserResponse>
</Message>
<Message ID="CWWSS6850E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6850E" varFormat="Java">
    security.wssecurity.WSEC6850E=CWWSS6850E: The request is not valid or is malformed.
  </MsgText>
  <Explanation>
    The request might be missing required elements. 
  </Explanation>
  <UserResponse>
    Refer to the information center for information on the request formats. 
  </UserResponse>
</Message>
<Message ID="CWWSS6016E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyInfoConsumer.getValueType03" varFormat="Java">
    security.wssecurity.KeyInfoConsumer.getValueType03=CWWSS6016E: The Embedded Element was not processed.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6015E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyInfoConsumer.getValueType02" varFormat="Java">
    security.wssecurity.KeyInfoConsumer.getValueType02=CWWSS6015E: The KeyIdentifier Element was not processed.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6014E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyInfoConsumer.getValueType01" varFormat="Java">
    security.wssecurity.KeyInfoConsumer.getValueType01=CWWSS6014E: The Reference Element was not processed.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS0031E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ctxmgr.isnull" varFormat="Java">
    security.wssecurity.ctxmgr.isnull=CWWSS0031E: The Application Server cannot retrieve the ContextManager class. The ContextManager class is null.
  </MsgText>
  <Explanation>
    The ContextManager class manages the state information for a request that is being processed. The code cannot access the ContextManager class for this message. Therefore, the code does not have access to this information. 
  </Explanation>
  <UserResponse>
    No user action is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS7509W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityConsumerHandler.s05" varFormat="Java">
    security.wssecurity.WSSecurityConsumerHandler.s05=CWWSS7509W: The received SOAP request message is rejected becasue it does not correctly specify SOAP action and WS-Addressing action while there is at least one PolicySet attachment at operation level of the {0} service.
  </MsgText>
  <Explanation>
    Web services security runtime cannot find correrct SOAP action or correct WS-Addressing action to determine whether an operation level PolicySet must be used to validate the received message. The request message is therefore rejected for security consideration. 
  </Explanation>
  <UserResponse>
    Modify web services client so that correct SOAP action or WS-Addressing action is specified in request messages. 
  </UserResponse>
</Message>
<Message ID="CWWSS7244E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityConsumerHandler.s04" varFormat="Java">
    security.wssecurity.WSSecurityConsumerHandler.s04=CWWSS7244E: The Application Server was unable to load the trust related policy set for the {0} resource.
  </MsgText>
  <Explanation>
    The trust related policy set for the resource failed to load. 
  </Explanation>
  <UserResponse>
    Verify that the trust related policy set for the resource is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS7059E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityConsumerHandler.s03" varFormat="Java">
    security.wssecurity.WSSecurityConsumerHandler.s03=CWWSS7059E: Unable to process inbound SOAP message.  Unexpected object {0} in PolicyTypeBinding.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7058E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityConsumerHandler.s02" varFormat="Java">
    security.wssecurity.WSSecurityConsumerHandler.s02=CWWSS7058E: Unable to process inbound SOAP message.  Exception retrieved from PolicyTypeLoader:
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7034W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityConsumerHandler.s01" varFormat="Java">
    security.wssecurity.WSSecurityConsumerHandler.s01=CWWSS7034W: Both Policy Set and WSSAPI configurations have been read. Policy Set configuration will override WSSAPI configuration.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7239E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7239E" varFormat="Java">
    security.wssecurity.WSEC7239E=CWWSS7239E: The Application Server encountered an invalid Soap Envelope Body. The Soap Envelope Body must consist of exactly one RequestSecurityToken element.
  </MsgText>
  <Explanation>
    One possibility is that the RequestSecurityToken element was not present in the sent message. Another is that the soap message may not have been decrypted, because of an issue with the policy set. 
  </Explanation>
  <UserResponse>
    Verify that the policy set is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS5660E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.DTKeyInfoResolver.s01" varFormat="Java">
    security.wssecurity.DTKeyInfoResolver.s01=CWWSS5660E: All the attempts based on each KeyInfoConsumer failed. The last exception is: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7038E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTGenerateLoginModule.getClientConfigurationFactory" varFormat="Java">
    security.wssecurity.SCTGenerateLoginModule.getClientConfigurationFactory=CWWSS7038E: Unable to get ClientConfigurationFactory.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7238E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7238E" varFormat="Java">
    security.wssecurity.WSEC7238E=CWWSS7238E: The Application Server encountered the {0} token type, which is invalid for the {1} endpoint.
  </MsgText>
  <Explanation>
    The token type that was specified is not valid for the endpoint. 
  </Explanation>
  <UserResponse>
    Verify that the token type is valid for the endpoint. 
  </UserResponse>
</Message>
<Message ID="CWWSS6527E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.X509TokenGenerator.s03" varFormat="Java">
    security.wssecurity.X509TokenGenerator.s03=CWWSS6527E: Unable to find the processing result of the login module: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6526E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.X509TokenGenerator.s02" varFormat="Java">
    security.wssecurity.X509TokenGenerator.s02=CWWSS6526E: The callback handler {0} cannot handle the callbacks correctly.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6525E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.X509TokenGenerator.s01" varFormat="Java">
    security.wssecurity.X509TokenGenerator.s01=CWWSS6525E: The {0} callback handler instantiation failed
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6002E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyInfoGenerator.getKey03" varFormat="Java">
    security.wssecurity.KeyInfoGenerator.getKey03=CWWSS6002E: The KeyInfo type {0} is not valid. The Key object was not obtained.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6001E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyInfoGenerator.getKey02" varFormat="Java">
    security.wssecurity.KeyInfoGenerator.getKey02=CWWSS6001E: Key object was not obtained.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6000E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyInfoGenerator.getKey01" varFormat="Java">
    security.wssecurity.KeyInfoGenerator.getKey01=CWWSS6000E: The configuration for the KeyInfo was not obtained.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7040E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTGenerateLoginModule.getAxisConfiguration" varFormat="Java">
    security.wssecurity.SCTGenerateLoginModule.getAxisConfiguration=CWWSS7040E: Unable to get AxisConfiguration.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6521E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.X509TokenConsumer.s02" varFormat="Java">
    security.wssecurity.X509TokenConsumer.s02=CWWSS6521E: The Login failed because of an exception
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6520E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.X509TokenConsumer.s01" varFormat="Java">
    security.wssecurity.X509TokenConsumer.s01=CWWSS6520E: An Exception occured during the construction of the login context
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7235I" severity="I" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7235I" varFormat="Java">
    security.wssecurity.WSEC7235I=CWWSS7235I: The specified SecurityContextToken could not be renewed. A new context token will be issued.
  </MsgText>
  <Explanation>
    This is information only. 
  </Explanation>
  <UserResponse>
    No action is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS7218E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTConsumeLoginModule.invalidSCT05" varFormat="Java">
    security.wssecurity.SCTConsumeLoginModule.invalidSCT05=CWWSS7218E: SCT is not valid for the webservice endpoint &quot;{0}&quot;.  SCT is issued for &quot;{1}&quot;.
  </MsgText>
  <Explanation>
    The security context token is valid at the webservice endpoint specified in the RequestSecurityToken. 
  </Explanation>
  <UserResponse>
    Ensure the endpoint address of the webservice (To: header) matches the AppliesTo URL specified in the RequestSecurityToken including port number.  Verify an intermediate server is not modifying the To: header. 
  </UserResponse>
</Message>
<Message ID="CWWSS7216E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTConsumeLoginModule.invalidSCT04" varFormat="Java">
    security.wssecurity.SCTConsumeLoginModule.invalidSCT04=CWWSS7216E: Missing instance information in the Security Context Token.
  </MsgText>
  <Explanation>
    The security context is associated with more than one instance 
  </Explanation>
  <UserResponse>
    Security Context Token should have instance information 
  </UserResponse>
</Message>
<Message ID="CWWSS7215E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTConsumeLoginModule.invalidSCT03" varFormat="Java">
    security.wssecurity.SCTConsumeLoginModule.invalidSCT03=CWWSS7215E: Cannot get valid security context token from the cache
  </MsgText>
  <Explanation>
    The security context token might be expired or the token does not exist in the cache 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7214E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTConsumeLoginModule.invalidSCT02" varFormat="Java">
    security.wssecurity.SCTConsumeLoginModule.invalidSCT02=CWWSS7214E: Cannot get valid security context token from the trust service
  </MsgText>
  <Explanation>
    The security context token might be expired or there is a problem retrieving the token from the trust service 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7234I" severity="I" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7234I" varFormat="Java">
    security.wssecurity.WSEC7234I=CWWSS7234I: The SecurityContextToken is either invalidated or not renewable. Cancel request is not procsssed.
  </MsgText>
  <Explanation>
    This is information only. 
  </Explanation>
  <UserResponse>
    No action is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS7530E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.loadpolicyset" varFormat="Java">
    security.wssecurity.trust.client.loadpolicyset=CWWSS7530E: Unable to load the application trust policyset and bindings [{0}], [{1}, {2}, {3}, {4}, {5}].
  </MsgText>
  <Explanation>
    Loading the application trust policy set and bindings produced an error. 
  </Explanation>
  <UserResponse>
    Verify that the specified policy set and bindings names are correct.  Also, verify that the policy set and bindings files exist, and are in the correct location. 
  </UserResponse>
</Message>
<Message ID="CWWSS7320E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityDefaultGeneratorConfig.s01" varFormat="Java">
    security.wssecurity.WSSecurityDefaultGeneratorConfig.s01=CWWSS7320E: A securityTokenReference with name [{0}] was found in a token generator of type [{1}] when loading default bindings. A securityTokenReference is not supported on default bindings.
  </MsgText>
  <Explanation>
    A securityTokenReference is not supported on default bindings. 
  </Explanation>
  <UserResponse>
    Regenerate the token generator in the default bindings, so the securityTokenReference is removed. 
  </UserResponse>
</Message>
<Message ID="CWWSS5710E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.DecryptedPartChecker.s01" varFormat="Java">
    security.wssecurity.DecryptedPartChecker.s01=CWWSS5710E: A required message part [{0}] is not encrypted.
  </MsgText>
  <Explanation>
    The policy expected the specified message part to be encrypted. 
  </Explanation>
  <UserResponse>
    Verify that the policies on both the client and the server specify the same EncryptedParts and EncryptedElements. 
  </UserResponse>
</Message>
<Message ID="CWWSS7319E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityDefaultConsumerConfig.s04" varFormat="Java">
    security.wssecurity.WSSecurityDefaultConsumerConfig.s04=CWWSS7319E: A securityTokenReference with name [{0}] was found in the token consumer of type [{1}] when loading default bindings. A securityTokenReference is not supported on default bindings.
  </MsgText>
  <Explanation>
    A securityTokenReference is not supported on default bindings. 
  </Explanation>
  <UserResponse>
    Regenerate the token consumer in the default bindings, so the securityTokenReference is removed. 
  </UserResponse>
</Message>
<Message ID="CWWSS7043E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityDefaultConsumerConfig.s03" varFormat="Java">
    security.wssecurity.WSSecurityDefaultConsumerConfig.s03=CWWSS7043E: An invalid algorithm parameter has been found. Specified parameters were: [{0}]
  </MsgText>
  <Explanation>
    A not valid parameter for a cryptographic algorithm has been found. 
  </Explanation>
  <UserResponse>
    Check parameters and ensure they are valid. 
  </UserResponse>
</Message>
<Message ID="CWWSS7042E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityDefaultConsumerConfig.s02" varFormat="Java">
    security.wssecurity.WSSecurityDefaultConsumerConfig.s02=CWWSS7042E: An invalid cryptographic algorithm has been specified . The requested algorithm was {0} and the caught exception is [{1}]
  </MsgText>
  <Explanation>
    The requested cryptographic algorithm is not available on this environment. 
  </Explanation>
  <UserResponse>
    Specify an available cryptographic algorithm. 
  </UserResponse>
</Message>
<Message ID="CWWSS7041E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityDefaultConsumerConfig.s01" varFormat="Java">
    security.wssecurity.WSSecurityDefaultConsumerConfig.s01=CWWSS7041E: An exception has been caught while selecting an X509Certificate. The exception is [{0}]
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7289E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSAuditEventGeneratorImpl.s03" varFormat="Java">
    security.wssecurity.WSSAuditEventGeneratorImpl.s03=CWWSS7289E: Insufficient data to generate the specified security audit event.
  </MsgText>
  <Explanation>
    The WebSphere platform audit subsystem platform implementation cannot generate a security audit event because critical data was missing. 
  </Explanation>
  <UserResponse>
    Contact WebSphere support for help. 
  </UserResponse>
</Message>
<Message ID="CWWSS7288W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSAuditEventGeneratorImpl.s02" varFormat="Java">
    security.wssecurity.WSSAuditEventGeneratorImpl.s02=CWWSS7288W: Caught Exception [{0}] when generating security audit events.
  </MsgText>
  <Explanation>
    The WebSphere platform audit subsystem platform implementation failed generating a security audit event. 
  </Explanation>
  <UserResponse>
    Examine the exception for possible cause. Contact WebSphere support for help if this problem was not caused by a configuration problem or failure of an external component such as an event log database. 
  </UserResponse>
</Message>
<Message ID="CWWSS0127W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0127W" varFormat="Java">
    security.wssecurity.WSEC0127W=CWWSS0127W: The specified value of {0} for the Nonce length is less than the allowed minimum of {1}. The default of {2} is used. The Nonce is a randomly generated value.
  </MsgText>
  <Explanation>
    The specified Nonce length is less than the minimum value that is required. The Nonce is a randomly generated value. 
  </Explanation>
  <UserResponse>
    Specify the Nonce length greater the minimum. The Nonce length value can be specified by the com.ibm.websphere.wssecurity.util.nonceLength Java system property. The Nonce is a randomly generated value. 
  </UserResponse>
</Message>
<Message ID="CWWSS7201E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTGenerateLoginModule.getSCTLifetime" varFormat="Java">
    security.wssecurity.SCTGenerateLoginModule.getSCTLifetime=CWWSS7201E: Lifetime information of the Security Context Token is not valid
  </MsgText>
  <Explanation>
    Requested Security Token Response message does not have the valid life time information of the Security Context Token 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7012E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7012E" varFormat="Java">
    security.wssecurity.WSEC7012E=CWWSS7012E: This method is unsupported in the current implementation: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5419E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s20" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s20=CWWSS5419E: EncryptedParts, or SignedParts: Namespace attribute is required: {0}.
  </MsgText>
  <Explanation>
    When specifying a Header to be signed or encrypted, the Namespace attribute is required. 
  </Explanation>
  <UserResponse>
    Specify the Namespace attribute for the Header on the EncryptedParts or SignedParts. 
  </UserResponse>
</Message>
<Message ID="CWWSS7528E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.rstc.provider" varFormat="Java">
    security.wssecurity.trust.client.rstc.provider=CWWSS7528E: The specified request security token trust service provider [{0}] must match the existing provider [{1}] in the collection.
  </MsgText>
  <Explanation>
    The request security token cannot be added to the collection because the token trust service provider address does not match the trust service provider address of the existing requests in the collection. 
  </Explanation>
  <UserResponse>
    Ensure that the trust service provider of the request security token matches the provider of existing requests in the collection. 
  </UserResponse>
</Message>
<Message ID="CWWSS5418E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s19" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s19=CWWSS5418E: KeyStore: KeyStore should have one of the following. Either KeyStoreRef attribute or storepass, path, type attributes.
  </MsgText>
  <Explanation>
    KeyStore doesnot have one of the following. Either KeyStoreRef attribute or storepass, path, type attributes. 
  </Explanation>
  <UserResponse>
    Change the keystore element to have either KeyStoreRef or storepass,path,type attributes 
  </UserResponse>
</Message>
<Message ID="CWWSS5417E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s18" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s18=CWWSS5417E: KeyStore: KeyStore referenced is not valid : {0}.
  </MsgText>
  <Explanation>
    Keystore reference is not valid. 
  </Explanation>
  <UserResponse>
    Verify keystore is available, not corrupted and specified correctly in binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS5416E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s17" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s17=CWWSS5416E: name attribute is required: {0} for Key.
  </MsgText>
  <Explanation>
    name attribute required for Key. 
  </Explanation>
  <UserResponse>
    Verify the Key:- name attribute in the binding is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS5415E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s16" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s16=CWWSS5415E: alias attribute is required: {0} for Key.
  </MsgText>
  <Explanation>
    alias attribute required for Key. 
  </Explanation>
  <UserResponse>
    Verify the Key:- alias attribute in the binding is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS5314E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s15" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s15=CWWSS5314E: missing storepass attribute {0} for KeyStore.
  </MsgText>
  <Explanation>
    storepass attribute required for KeyStore. 
  </Explanation>
  <UserResponse>
    Verify the KeyStore:- storepass attribute in the binding is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS5413E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s14" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s14=CWWSS5413E: missing path attribute {0} for KeyStore.
  </MsgText>
  <Explanation>
    path attribute required for KeyStore. 
  </Explanation>
  <UserResponse>
    Verify the KeyStore:- path attribute in the binding is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS7011E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7011E" varFormat="Java">
    security.wssecurity.WSEC7011E=CWWSS7011E: The argument to the get factory method in the following class has a null value: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5412E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s13" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s13=CWWSS5412E: missing type attribute {0} for KeyStore.
  </MsgText>
  <Explanation>
    type attribute required for KeyStore. 
  </Explanation>
  <UserResponse>
    Verify the KeyStore:- type attribute in the binding is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS5409E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s10" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s10=CWWSS5409E: MessageParts, Timestamp, or Nonce: keyword attribute is required: {0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6060E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyNameContentConsumer.getKeyName01" varFormat="Java">
    security.wssecurity.KeyNameContentConsumer.getKeyName01=CWWSS6060E: The KeyName Element was not processed.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5408E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s09" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s09=CWWSS5408E: MessageParts, Timestamp, or Nonce: dialect attribute is required: {0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5407E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s08" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s08=CWWSS5407E: Integrity or Confidentiality: Processing order MUST be zero or positive number: {0}.
  </MsgText>
  <Explanation>
    The order is negative or not valid value. 
  </Explanation>
  <UserResponse>
    Verify the order is specified correctly in the binding.  The order mentions how to process signature and encryption. 
  </UserResponse>
</Message>
<Message ID="CWWSS5406E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s07" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s07=CWWSS5406E: Missing required MessageParts {0} for (Required)Integrity or (Required)Confidentiality.
  </MsgText>
  <Explanation>
    (Required)Integrity or (Required)Confidentiality: At least one MessagePart is required. 
  </Explanation>
  <UserResponse>
    Provide Required)Integrity or (Required)Confidentiality message part. 
  </UserResponse>
</Message>
<Message ID="CWWSS5405E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s06" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s06=CWWSS5405E: At least one transform is required: {0} in the PartReference in SigningInfo.
  </MsgText>
  <Explanation>
    transform information for the signing algorithm is not valid or incomplete 
  </Explanation>
  <UserResponse>
    Verify transform information in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS7314E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSWSSLoginModule.s02" varFormat="Java">
    security.wssecurity.WSWSSLoginModule.s02=CWWSS7314E: The asserted identity {0} is not trusted.
  </MsgText>
  <Explanation>
    Realm of the asserted identity is not in list of trusted inbound realms. 
  </Explanation>
  <UserResponse>
    Verify the list of inbound trusted realms. 
  </UserResponse>
</Message>
<Message ID="CWWSS5404E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s05" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s05=CWWSS5404E: DigestMethod is required: {0}.
  </MsgText>
  <Explanation>
    information for the signing algorithm is not valid or incomplete. 
  </Explanation>
  <UserResponse>
    One of the places to verify is the binding, ensure the algorithm provided is valid. 
  </UserResponse>
</Message>
<Message ID="CWWSS7297E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSWSSLoginModule.s01" varFormat="Java">
    security.wssecurity.WSWSSLoginModule.s01=CWWSS7297E: Failed to update Subject with Kerberos credentials due to exception {0} in Caller processing.
  </MsgText>
  <Explanation>
    Caller processing failed due to the exception. 
  </Explanation>
  <UserResponse>
    Verify the caller configuration and look for other failures in JGSS and Java Kerberos logs. 
  </UserResponse>
</Message>
<Message ID="CWWSS5403E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s04" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s04=CWWSS5403E: referenced message part is required: {0}.
  </MsgText>
  <Explanation>
    There is mismatch of referencing signed parts in policy and binding. 
  </Explanation>
  <UserResponse>
    PartReference in SigningInfo is required to be referenced correctly in the policy and binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS7010E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7010E" varFormat="Java">
    security.wssecurity.WSEC7010E=CWWSS7010E: The Application Server cannot obtain a part from the partMap field.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5083E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.BinaryTokenReceiver.token16" varFormat="Java">
    security.wssecurity.BinaryTokenReceiver.token16=CWWSS5083E: The ValueType attribute for the KeyIdentifier element cannot be found.
  </MsgText>
  <Explanation>
    The KeyIdentifier element requires the ValueType attribute, which cannot be found. 
  </Explanation>
  <UserResponse>
    Verify that you specified the ValueType attribute for the KeyIdentifier element in the SOAP message. 
  </UserResponse>
</Message>
<Message ID="CWWSS5402E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s03" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s03=CWWSS5402E: At least one AlgorithmURI is required: {0}.
  </MsgText>
  <Explanation>
    The Algorithm URI information could be missing or not valid in the binding. 
  </Explanation>
  <UserResponse>
    Verify the Algorithm information in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS5082E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.BinaryTokenReceiver.token15" varFormat="Java">
    security.wssecurity.BinaryTokenReceiver.token15=CWWSS5082E: The {0} encoding is not supported.
  </MsgText>
  <Explanation>
    The encoding type that you requested is not supported. 
  </Explanation>
  <UserResponse>
    Verify that you encoded the SOAP message with the supported encoding type. 
  </UserResponse>
</Message>
<Message ID="CWWSS5401E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s02" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s02=CWWSS5401E: factoryname is not available for the algorithm mapping configuration: {0}.
  </MsgText>
  <Explanation>
    One of the possible reasons be the Algorithm URI couldnot be mapped to the Algorithm Factory. 
  </Explanation>
  <UserResponse>
    Verify the algorithm information in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS5400E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateCommonConfig.s01" varFormat="Java">
    security.wssecurity.PrivateCommonConfig.s01=CWWSS5400E: algorithm attribute is required but found: {0}.
  </MsgText>
  <Explanation>
    Missing or incorrect algorithm attribute. 
  </Explanation>
  <UserResponse>
    Verify the algorithm has been specified in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS0124W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0124W" varFormat="Java">
    security.wssecurity.WSEC0124W=CWWSS0124W: The specified value of {0} for the Nonce cache size is less than the allowed minimum value of {1}. The default value of {2} is used. The Nonce is a randomly generated value.
  </MsgText>
  <Explanation>
    The specified Nonce cache size is less than the minimum value that is required. The Nonce is a randomly generated value. 
  </Explanation>
  <UserResponse>
    Specify a cache size greater the minimum value. The Nonce cache size value can be specified by the custom property com.ibm.ws.wssecurity.config.token.BasicAuth.Nonce.cacheSize in the WS-Security bindings or the com.ibm.websphere.wssecurity.util.nonceCacheSize Java system property. The Nonce is a randomly generated value. 
  </UserResponse>
</Message>
<Message ID="CWWSS7347E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyOutboundConfig.s10" varFormat="Java">
    security.wssecurity.PolicyOutboundConfig.s10=CWWSS7347E: Failed to load bootstrap configuration. The following exception was caught: [{0}].
  </MsgText>
  <Explanation>
    There was a problem loading the bootstrap configuration. The caught exception has the precise reason. 
  </Explanation>
  <UserResponse>
    Look at the exception that was caught and take appropriate action. 
  </UserResponse>
</Message>
<Message ID="CWWSS7339E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyOutboundConfig.s09" varFormat="Java">
    security.wssecurity.PolicyOutboundConfig.s09=CWWSS7339E: Can not find encryption bindings for specified confidential parts for an outbound message in the default bindings.
  </MsgText>
  <Explanation>
    Confidential parts were specified for outbound messages in the policy, but there was no matching encryption information on the outbound section of the default bindings. 
  </Explanation>
  <UserResponse>
    Regenerate the default bindings, so there are encryption bindings for the specified outbound integral parts. 
  </UserResponse>
</Message>
<Message ID="CWWSS7338E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyOutboundConfig.s08" varFormat="Java">
    security.wssecurity.PolicyOutboundConfig.s08=CWWSS7338E: Can not find signature bindings for specified integral parts for an outbound message in the default bindings.
  </MsgText>
  <Explanation>
    Integral parts were specified for outbound messages in the policy, but there was no matching signing information on the outbound section of the default bindings. 
  </Explanation>
  <UserResponse>
    Regenerate the default bindings, so there are signature bindings for the specified outbound integral parts. 
  </UserResponse>
</Message>
<Message ID="CWWSS7328E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyOutboundConfig.s07" varFormat="Java">
    security.wssecurity.PolicyOutboundConfig.s07=CWWSS7328E: Did not find a token generator for the supporting token of type [{0}].
  </MsgText>
  <Explanation>
    A token generator was not found in the bindings for the supporting token of this type. 
  </Explanation>
  <UserResponse>
    Correct the bindings so a token generator for the supporting token in the policy is defined. 
  </UserResponse>
</Message>
<Message ID="CWWSS7326E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyOutboundConfig.s06" varFormat="Java">
    security.wssecurity.PolicyOutboundConfig.s06=CWWSS7326E: Found two UsernameToken Token generators one configured as trusted id and the other as a caller id, of UsernameToken type [{0}] in the default bindings, but only one UsernameToken SupportingToken assertion in the policy. Do not know which generator to chose.
  </MsgText>
  <Explanation>
    Two UsernameToken token generators, one configured as trusted id and the other as a caller id  were found, but do not know which one to use, as only one UsernameToken assertion was found in the policy. This is an ambiguous situation. 
  </Explanation>
  <UserResponse>
    Correct the policy so two Usernametoken SupportingToken assertions are in the policy, or remove one of the two UsernameToken token generators from the default bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS7122W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SecureConversationCacheImpl.s01" varFormat="Java">
    security.wssecurity.SecureConversationCacheImpl.s01=CWWSS7122W: Failed to create distributed SecurityContextToken cache.
  </MsgText>
  <Explanation>
    The request to using distributed SecurityContextToken cache could not be done. SecurityContextToken will be cached in local server only, and will not be distributed to all other cluster members. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7323E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyOutboundConfig.s05" varFormat="Java">
    security.wssecurity.PolicyOutboundConfig.s05=CWWSS7323E: More than one supporting token generator of the type [{0}] found on the default bindings. Only one token generator per supporting token type is allowed.
  </MsgText>
  <Explanation>
    Only one token generator per supporting token type is allowed. 
  </Explanation>
  <UserResponse>
    Correct the default bindings so only one token generator for each supporting token type is configured. 
  </UserResponse>
</Message>
<Message ID="CWWSS7322E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyOutboundConfig.s04" varFormat="Java">
    security.wssecurity.PolicyOutboundConfig.s04=CWWSS7322E: More than one idAssertion UsernameToken generator of type [{0}] was found in the default bindings.
  </MsgText>
  <Explanation>
    In default bindings only one idAssertion UsernameToken generator is allowed. 
  </Explanation>
  <UserResponse>
    Correct the bindings and ensure that it has exactly one idAssertion UsernameToken generator. 
  </UserResponse>
</Message>
<Message ID="CWWSS7321E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyOutboundConfig.s03" varFormat="Java">
    security.wssecurity.PolicyOutboundConfig.s03=CWWSS7321E: More than one trustedId UsernameToken generator of type [{0}] was found in the default bindings.
  </MsgText>
  <Explanation>
    In default bindings only one trustedId UsernameToken generator is allowed. 
  </Explanation>
  <UserResponse>
    Correct the bindings and ensure that it has exactly one trustedId UsernameToken generator. 
  </UserResponse>
</Message>
<Message ID="CWWSS7287W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSAuditEventGeneratorFactory.s01" varFormat="Java">
    security.wssecurity.WSSAuditEventGeneratorFactory.s01=CWWSS7287W: Caught Exception [{0}] during audit subsystem initialization.
  </MsgText>
  <Explanation>
    The audit subsystem failed initialization.  One possible reason is the implementation class cannot be found or loaded. 
  </Explanation>
  <UserResponse>
    Examine the exception for possible cause. Contact the vendor who provided the audit service extension implementation for help. 
  </UserResponse>
</Message>
<Message ID="CWWSS6515E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s16" varFormat="Java">
    security.wssecurity.LoginProcessor.s16=CWWSS6515E: Private Credentials already exist in the subject.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7291E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyOutboundConfig.s02" varFormat="Java">
    security.wssecurity.PolicyOutboundConfig.s02=CWWSS7291E: Lightweight Third-Party Authentication (LTPA) token is not supported on Thinclient environment.
  </MsgText>
  <Explanation>
    The LTPA token is only supported on WebSphere Server. 
  </Explanation>
  <UserResponse>
    Change the token type in the policy and regenerate the file. 
  </UserResponse>
</Message>
<Message ID="CWWSS6514E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s15" varFormat="Java">
    security.wssecurity.LoginProcessor.s15=CWWSS6514E: Public Credentials already exist in the subject.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7290E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyOutboundConfig.s01" varFormat="Java">
    security.wssecurity.PolicyOutboundConfig.s01=CWWSS7290E: Value type {0} not valid for the token generator configuration when the {1} property is set to false. Value type {2} must be used.
  </MsgText>
  <Explanation>
    The above property determines what the valid value types are. 
  </Explanation>
  <UserResponse>
    Change the value type in the binding and regenerate the file, or set the above property to true. 
  </UserResponse>
</Message>
<Message ID="CWWSS6513E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s14" varFormat="Java">
    security.wssecurity.LoginProcessor.s14=CWWSS6513E: The Principal already exists in the subject.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6512E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s13" varFormat="Java">
    security.wssecurity.LoginProcessor.s13=CWWSS6512E: The protection token of type [{0}] is used as a caller token, but a total number of {1} were found in the message.
  </MsgText>
  <Explanation>
    This protection token type was designated as a caller, but more than one token of the same type was found in the message. Do not know which one to use as caller. 
  </Explanation>
  <UserResponse>
    Service sending the message with multiple tokens of this same type should be reconfigured to send only one. 
  </UserResponse>
</Message>
<Message ID="CWWSS6511E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s12" varFormat="Java">
    security.wssecurity.LoginProcessor.s12=CWWSS6511E: The supporting token of type [{0}] is used as a caller token, but a total number of {1} were found in the message.
  </MsgText>
  <Explanation>
    This supporting token type was designated as a caller, but more than one token of the same type was found in the message. Do not know which one to use as caller. 
  </Explanation>
  <UserResponse>
    Service sending the message with multiple tokens of this same type should be reconfigured to send only one. 
  </UserResponse>
</Message>
<Message ID="CWWSS6013E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyInfoConsumer.getKeyInfoType01" varFormat="Java">
    security.wssecurity.KeyInfoConsumer.getKeyInfoType01=CWWSS6013E: The KeyInfo type is UNKNOWN.
  </MsgText>
  <Explanation>
    KeyInfo specified in the bindings probably is not valid. 
  </Explanation>
  <UserResponse>
    Check the bindings 
  </UserResponse>
</Message>
<Message ID="CWWSS6510E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s11" varFormat="Java">
    security.wssecurity.LoginProcessor.s11=CWWSS6510E: The following login failure occured : {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6509E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s09" varFormat="Java">
    security.wssecurity.LoginProcessor.s09=CWWSS6509E: A valid WebSphere security subject was not found during caller login. Caller login failed.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6508E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s08" varFormat="Java">
    security.wssecurity.LoginProcessor.s08=CWWSS6508E: The caller of type [{0}] is used as a caller token, but more than one was found in the message.
  </MsgText>
  <Explanation>
    This token type was designated as a caller, but more than one token of the same type was found in the message. Do not know which one to use as caller. 
  </Explanation>
  <UserResponse>
    Service sending the message with multiple tokens of this same type should be reconfigured to send only one. 
  </UserResponse>
</Message>
<Message ID="CWWSS6507E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s07" varFormat="Java">
    security.wssecurity.LoginProcessor.s07=CWWSS6507E: None of the required callers was found in the message.
  </MsgText>
  <Explanation>
    A set of callers was defined in the bindings, and no caller token was found in the incoming message. 
  </Explanation>
  <UserResponse>
    Do not require caller in the bindings or ensure that the client does send the required token. 
  </UserResponse>
</Message>
<Message ID="CWWSS6505E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s06" varFormat="Java">
    security.wssecurity.LoginProcessor.s06=CWWSS6505E: There is more than one token used as caller in the message and no caller order of preference found.
  </MsgText>
  <Explanation>
    More than one caller token type was specified in the bindings without specifying and order attribute, and more than one caller token was found on the message. Not enough information available to decide which token to use as caller. 
  </Explanation>
  <UserResponse>
    Specify a single token type to use as caller in the bindings, or utilize order attribute when specifying multiple callers to eliminate ambiguity. 
  </UserResponse>
</Message>
<Message ID="CWWSS6504E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s05" varFormat="Java">
    security.wssecurity.LoginProcessor.s05=CWWSS6504E: There are more than one candidates used to specify the caller identifier. Only one caller identifier is expected
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6503E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s04" varFormat="Java">
    security.wssecurity.LoginProcessor.s04=CWWSS6503E: There are more than one candidates used to specify the trusted identifier. Only one trust identifier is expected
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6502E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s03" varFormat="Java">
    security.wssecurity.LoginProcessor.s03=CWWSS6502E: The token that is used to specify the caller identity or trusted identity cannot be null.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6501E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s02" varFormat="Java">
    security.wssecurity.LoginProcessor.s02=CWWSS6501E: There is no trusted identity candidate that can be used.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6500E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LoginProcessor.s01" varFormat="Java">
    security.wssecurity.LoginProcessor.s01=CWWSS6500E: There is no caller identity candidate that can be used to login.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6819E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6819E" varFormat="Java">
    security.wssecurity.WSEC6819E=CWWSS6819E: The {0} security token with is the {1} type is required, but it does not have a matching token consumer.
  </MsgText>
  <Explanation>
    The security token type need define a matching token consumer. 
  </Explanation>
  <UserResponse>
    Check binding file for the security token type. 
  </UserResponse>
</Message>
<Message ID="CWWSS7230E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSCCacheCommand.s06" varFormat="Java">
    security.wssecurity.WSSCCacheCommand.s06=CWWSS7230E: The AdminCommand {0} loading failed. The exception is {1}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7229E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSCCacheCommand.s05" varFormat="Java">
    security.wssecurity.WSSCCacheCommand.s05=CWWSS7229E: The AdminCommand {0} creation failed. The exception is {1}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7228E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSCCacheCommand.s04" varFormat="Java">
    security.wssecurity.WSSCCacheCommand.s04=CWWSS7228E: The AdminCommand could not update the WS-SecureConversation client cache configuration file. The exception is {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS0158I" severity="I" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0158I" varFormat="Java">
    security.wssecurity.WSEC0158I=CWWSS0158I: Hardware Crypto Acceleration is enabled: {0}
  </MsgText>
  <Explanation>
    This is for informational purposes only. 
  </Explanation>
  <UserResponse>
    This is for informational purposes only. 
  </UserResponse>
</Message>
<Message ID="CWWSS7227E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSCCacheCommand.s03" varFormat="Java">
    security.wssecurity.WSSCCacheCommand.s03=CWWSS7227E: The AdminCommand could not find the property {0} in WS-SecureConversation client cache configuration file.
  </MsgText>
  <Explanation>
    The requested property is not in WS-SecureConversation client cache configuration file. 
  </Explanation>
  <UserResponse>
    Check WS-SecureConversation client cache configuration file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7226E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSCCacheCommand.s02" varFormat="Java">
    security.wssecurity.WSSCCacheCommand.s02=CWWSS7226E: The AdminCommand could not find WS-SecureConversation client cache configuration file.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS0122E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0122E" varFormat="Java">
    security.wssecurity.WSEC0122E=CWWSS0122E: The Nonce cache is null or is not initialized. The Nonce is a randomly generated value.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7225E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSCCacheCommand.s01" varFormat="Java">
    security.wssecurity.WSSCCacheCommand.s01=CWWSS7225E: The JAXB is unable to load WS-SecureConversation client cache configuration file. The exception is {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7079E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7079E" varFormat="Java">
    security.wssecurity.WSEC7079E=CWWSS7079E: {0} is not instantiated.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS0157W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0157W" varFormat="Java">
    security.wssecurity.WSEC0157W=CWWSS0157W: The {0} algorithm is not supported by this version of the JDK. This algorithm will not be available to applications running on this JDK.
  </MsgText>
  <Explanation>
    The RSA-OAEP algorithm is only supported by JDK Version 1.5 and later. 
  </Explanation>
  <UserResponse>
    If the application is not configured to use the RSA-OAEP algorithm, no action is required. If the application is configured to use the RSA-OAEP algorithm, change the Web services security binding configuration to use the http://www.w3.org/2001/04/xmlenc#rsa-1_5 algorithm instead. 
  </UserResponse>
</Message>
<Message ID="CWWSS7312E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSRealmImpl.s02" varFormat="Java">
    security.wssecurity.WSSRealmImpl.s02=CWWSS7312E: Failed to parse realm qualified identity.
  </MsgText>
  <Explanation>
    The identity delimiter pattern appears more than once. 
  </Explanation>
  <UserResponse>
    Either the user name or the unique representation of the user in the identity string {0} contains the identity delimeter pattern {1}. Modify the name representation to remove any ambiguity. 
  </UserResponse>
</Message>
<Message ID="CWWSS6818E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6818E" varFormat="Java">
    security.wssecurity.WSEC6818E=CWWSS6818E: The {0} security token does not have a token generator references.
  </MsgText>
  <Explanation>
    The Security token need a token generator reference. 
  </Explanation>
  <UserResponse>
    Check binding file for the security token type. 
  </UserResponse>
</Message>
<Message ID="CWWSS7311W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSRealmImpl.s01" varFormat="Java">
    security.wssecurity.WSSRealmImpl.s01=CWWSS7311W: Failed to construct realm qualified identity.
  </MsgText>
  <Explanation>
    A RunAs Subject may not exist or may not contain WebSphere user security attributes. 
  </Explanation>
  <UserResponse>
    Check if the application server security is enabled. 
  </UserResponse>
</Message>
<Message ID="CWWSS0121E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0121E" varFormat="Java">
    security.wssecurity.WSEC0121E=CWWSS0121E: The Nonce is null or of zero length. The Nonce is a randomly generated value.
  </MsgText>
  <Explanation>
    The value of the Nonce is either missing from the SOAP message or it was not encoded with a supported encoding type. The Nonce is a randomly generated value. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7078E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7078E" varFormat="Java">
    security.wssecurity.WSEC7078E=CWWSS7078E: Nonce manager must not be accessed.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS0120W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0120W" varFormat="Java">
    security.wssecurity.WSEC0120W=CWWSS0120W: The Application Server cannot parse the {0} value for the Nonce clock skew. The default value of {1} seconds was used instead. The Nonce is a randomly generated value.
  </MsgText>
  <Explanation>
    The format for the value of the Nonce clock skew is not an integer. The Nonce is a randomly generated value. 
  </Explanation>
  <UserResponse>
    Change the value for the Nonce clock skew to an integer. The Nonce clock skew value is specified by the custom property com.ibm.wsspi.wssecurity.core.NonceClockSkew in the WS-Security bindings. The Nonce is a randomly generated value. 
  </UserResponse>
</Message>
<Message ID="CWWSS7559E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7559E" varFormat="Java">
    security.wssecurity.CWWSS7559E=CWWSS7559E: The SAML attribute for realm has more than one value.
  </MsgText>
  <Explanation>
    The SAML attribute defining the realm can have only one value. 
  </Explanation>
  <UserResponse>
    Assign a single value to the SAML attribute defining the realm in the bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS6020E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.STRReferenceContentGenerator.getKey01" varFormat="Java">
    security.wssecurity.STRReferenceContentGenerator.getKey01=CWWSS6020E: The TokenGenerator object is not obtained.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6817E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6817E" varFormat="Java">
    security.wssecurity.WSEC6817E=CWWSS6817E: The {0} security token with the {1} type does not have a matching token generator..
  </MsgText>
  <Explanation>
    The security token need a matching token generator. 
  </Explanation>
  <UserResponse>
    Check binding file for the security token type. 
  </UserResponse>
</Message>
<Message ID="CWWSS7077E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7077E" varFormat="Java">
    security.wssecurity.WSEC7077E=CWWSS7077E: The login module name is null.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7558E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7558E" varFormat="Java">
    security.wssecurity.CWWSS7558E=CWWSS7558E: The SAML token contains more than one principal.
  </MsgText>
  <Explanation>
    Only one principal may be defined for a SAML token 
  </Explanation>
  <UserResponse>
    Define a single principal for the SAML token in the bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS6816E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6816E" varFormat="Java">
    security.wssecurity.WSEC6816E=CWWSS6816E: The {0} token generator that refers to the security token in the policy is used for encryption. The security token should be used for stand-alone tokens.
  </MsgText>
  <Explanation>
    The security token should be used for stand-alone tokens. 
  </Explanation>
  <UserResponse>
    Check the binding file. 
  </UserResponse>
</Message>
<Message ID="CWWSS0155E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0155E" varFormat="Java">
    security.wssecurity.WSEC0155E=CWWSS0155E: Retrieving the byte array representation of an X.509 Certificate caused a CertificateEncodingException. The exception is: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7076E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7076E" varFormat="Java">
    security.wssecurity.WSEC7076E=CWWSS7076E: {0} is not instantiated.
  </MsgText>
  <Explanation>
    A required class could not be instantiated. 
  </Explanation>
  <UserResponse>
    If the class was specified for token generators or consumers, make sure the class name is correct and that the class is in the correct location. 
  </UserResponse>
</Message>
<Message ID="CWWSS6040E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EmbeddedContentConsumer.getKey01" varFormat="Java">
    security.wssecurity.EmbeddedContentConsumer.getKey01=CWWSS6040E: TokenConsumer object is not obtained.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7557E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7557E" varFormat="Java">
    security.wssecurity.CWWSS7557E=CWWSS7557E: The SAML attribute for principal has more than one value.
  </MsgText>
  <Explanation>
    The SAML attribute defining the principal can have only one value. 
  </Explanation>
  <UserResponse>
    Assign a single value to the SAML attribute defining the principal in the bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS6815E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6815E" varFormat="Java">
    security.wssecurity.WSEC6815E=CWWSS6815E: The {0} token generator that refers to the security token in the policy is used for signature. The security token should be used for stand-alone tokens.
  </MsgText>
  <Explanation>
    The security token should be used for stand-alone tokens. 
  </Explanation>
  <UserResponse>
    Check binding file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7527E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.rstc.header" varFormat="Java">
    security.wssecurity.trust.client.rstc.header=CWWSS7527E: The specified request security token header [{0}] must match the existing header [{1}] in the collection.
  </MsgText>
  <Explanation>
    The request security token cannot be added to the collection because the token header does not match the header of the existing requests in the collection. 
  </Explanation>
  <UserResponse>
    Ensure that the request security token header matches the header of the existing requests in the collection. 
  </UserResponse>
</Message>
<Message ID="CWWSS7075E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7075E" varFormat="Java">
    security.wssecurity.WSEC7075E=CWWSS7075E: The duration is invalid.
  </MsgText>
  <Explanation>
    The default duration for the timestamp for WSS APIs does not have a valid format. This value is defined in the web services security runtime. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5122E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.FileConfigSSR.init" varFormat="Java">
    security.wssecurity.FileConfigSSR.init=CWWSS5122E: The WS-Security configuration object cannot be created. Error: {0}
  </MsgText>
  <Explanation>
    Internal configuration files cannot be loaded. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7556E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7556E" varFormat="Java">
    security.wssecurity.CWWSS7556E=CWWSS7556E: The [{0}] SAML confirmation method is not supported by login module [{1}].  
  </MsgText>
  <Explanation>
    The SAML token specifies a confirmation method that is not supported by the login module. 
  </Explanation>
  <UserResponse>
    The SAML token provider must be configured to not send SAML tokens with the unsupported confirmation method. 
  </UserResponse>
</Message>
<Message ID="CWWSS8019E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8019E" varFormat="Java">
    security.wssecurity.CWWSS8019E=CWWSS8019E: Authentication Error: HTTP Artifact Binding is not supported.
  </MsgText>
  <Explanation>
    Authentication Error: HTTP Artifact Binding is not supported. 
  </Explanation>
  <UserResponse>
    Contact WebSphere Application Server support for help. 
  </UserResponse>
</Message>
<Message ID="CWWSS0153E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0153E" varFormat="Java">
    security.wssecurity.WSEC0153E=CWWSS0153E: The callback handler encountered an unsupported callback.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7315E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WasConfigHelperImpl.s01" varFormat="Java">
    security.wssecurity.WasConfigHelperImpl.s01=CWWSS7315E: Caught an exception attempting to create default configuration objects. The following exception occurred: {0}
  </MsgText>
  <Explanation>
    There was a problem loading named bindings or default bindings for this application. 
  </Explanation>
  <UserResponse>
    Exception will have details on what went wrong during loading. Please examine specific exception and take corrective actions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7522E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.axisserviceparam" varFormat="Java">
    security.wssecurity.trust.client.axisserviceparam=CWWSS7522E: The specified configuration setting is invalid: [{0}, {1}].
  </MsgText>
  <Explanation>
    The trust client cannot configure the outgoing request with the specified configuration setting. 
  </Explanation>
  <UserResponse>
    Verify that the configuration setting is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS7074E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7074E" varFormat="Java">
    security.wssecurity.WSEC7074E=CWWSS7074E: The key is not retrieved. The exception is:
  </MsgText>
  <Explanation>
    The decrypting key or verifying key could not be retrieved from the security token because an exception was received. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7555E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7555E" varFormat="Java">
    security.wssecurity.CWWSS7555E=CWWSS7555E: More than one bootstrap binding was found in the bindings.
  </MsgText>
  <Explanation>
    There can be at most one bootstrap binding in the bindings. 
  </Explanation>
  <UserResponse>
    Regenerate the bindings and insure only a single bootstrap binding is present. 
  </UserResponse>
</Message>
<Message ID="CWWSS8018E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8018E" varFormat="Java">
    security.wssecurity.CWWSS8018E=CWWSS8018E: Authentication Error: SAMLResponse could not be verified. Please review and correct the TAI configuration, and try again.
  </MsgText>
  <Explanation>
    Authentication Error: SAMLResponse could not be verified. Please review and correct the TAI configuration, and try again. 
  </Explanation>
  <UserResponse>
    Contact WebSphere Application Server support for help if this problem was not caused by a configuration problem. 
  </UserResponse>
</Message>
<Message ID="CWWSS6813E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6813E" varFormat="Java">
    security.wssecurity.WSEC6813E=CWWSS6813E: The issuer name {0} retrieved from the message is different from the issuer name {1} acquired from the keystore Path: {2}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7073E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7073E" varFormat="Java">
    security.wssecurity.WSEC7073E=CWWSS7073E: The key is not retrieved. The exception is:
  </MsgText>
  <Explanation>
    The encrypting key or signing key could not be retrieved from the security token. Either an exception occurred or null was returned. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7554E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7554E" varFormat="Java">
    security.wssecurity.CWWSS7554E=CWWSS7554E: More than one application binding was found in the bindings.
  </MsgText>
  <Explanation>
    There can be at most one application binding in the bindings. 
  </Explanation>
  <UserResponse>
    Regenerate the bindings and insure only a single application binding is present. 
  </UserResponse>
</Message>
<Message ID="CWWSS8017E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8017E" varFormat="Java">
    security.wssecurity.CWWSS8017E=CWWSS8017E: Authentication Error: Single-Sign-on cookie is not present or could not be verified. Please login to the SAML Identity Provider, and try again.
  </MsgText>
  <Explanation>
    Authentication Error: There is no valid Single-Sign-on cookie. Please login to the SAML Identity Provider, and try again. 
  </Explanation>
  <UserResponse>
    Please login to the SAML Identity Provider, and try again. 
  </UserResponse>
</Message>
<Message ID="CWWSS6812E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6812E" varFormat="Java">
    security.wssecurity.WSEC6812E=CWWSS6812E: The key name {0} retrieved from the message is different from the key name {1} acquired from the keystore Path: {2}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7072E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7072E" varFormat="Java">
    security.wssecurity.WSEC7072E=CWWSS7072E: The Securtiy Context Token is expired and is not renewable.
  </MsgText>
  <Explanation>
    The Security Context Token is not renewable after expiration. 
  </Explanation>
  <UserResponse>
    Make sure the renewableAfterExpiration property is set to true in the security token service (STS) configuration if the desired behavior is to renew the Security Context Token after expiration. 
  </UserResponse>
</Message>
<Message ID="CWWSS7553E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7553E" varFormat="Java">
    security.wssecurity.CWWSS7553E=CWWSS7553E: The keyType attribute with value of {0} is not valid for the {1} confirmation method.
  </MsgText>
  <Explanation>
    The keyType attribute for this request is not valid this confirmation method. 
  </Explanation>
  <UserResponse>
    Select an appropriate keyType attribute for the given confirmation method. 
  </UserResponse>
</Message>
<Message ID="CWWSS8016E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8016E" varFormat="Java">
    security.wssecurity.CWWSS8016E=CWWSS8016E: Authentication Error: SAMLResponse is required for this operation. Please login to the SAML Identity Provider, and try again.
  </MsgText>
  <Explanation>
    Authentication Error: SAMLResponse is required for the request to SAML AssertionConsumerService. Please login to the SAML Identity Provider, and try again. 
  </Explanation>
  <UserResponse>
    Contact WebSphere Application Server support for help if this problem was not caused by a configuration problem. 
  </UserResponse>
</Message>
<Message ID="CWWSS6811E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6811E" varFormat="Java">
    security.wssecurity.WSEC6811E=CWWSS6811E: The key identifier {0} retrieved from the message is different from the key identifier {1} acquired from the keystore Path: {2}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7071E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7071E" varFormat="Java">
    security.wssecurity.WSEC7071E=CWWSS7071E: The Security Context Token is not validated. The exception is:
  </MsgText>
  <Explanation>
    The Security Context Token could not be validated because an exception was received. 
  </Explanation>
  <UserResponse>
    Make sure the security token service (STS) is configured correctly, and that the WSSGenerationContext and WSSConsumingContext specified on the validate operation are correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS6054E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyIdContentConsumer.getIdentifierType01" varFormat="Java">
    security.wssecurity.KeyIdContentConsumer.getIdentifierType01=CWWSS6054E: The IdentifierType attribute is not found
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7552E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7552E" varFormat="Java">
    security.wssecurity.CWWSS7552E=CWWSS7552E: The RunAs subject might not exist, might not contain the required SecurityToken or might contain more than one required SecurityToken.  
  </MsgText>
  <Explanation>
    The outgoing request is not able to use the token in the RunAs subject to exchange it for the requested token from the security token service. 
  </Explanation>
  <UserResponse>
    If a token cannot be extracted from the RunAs subject, change the configuration to issue a new token by removing the custom property, useRunAsSubjectOnly, from the callback handler. 
  </UserResponse>
</Message>
<Message ID="CWWSS8015E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8015E" varFormat="Java">
    security.wssecurity.CWWSS8015E=CWWSS8015E: The Single-Sign-on partner was not established in the SAML TAI configuration.
  </MsgText>
  <Explanation>
    The Single-Sign-on partner is required in the SAML TAI configuration. 
  </Explanation>
  <UserResponse>
    Check the SAML TAI configuration, and ensure at least one Single-Sign-On partner is created. 
  </UserResponse>
</Message>
<Message ID="CWWSS6810E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6810E" varFormat="Java">
    security.wssecurity.WSEC6810E=CWWSS6810E: The runtime can not identify the key corresponding to the identifier [{0}].
  </MsgText>
  <Explanation>
    The keystore configuration used by key locator is not defined in the consumer side. 
  </Explanation>
  <UserResponse>
    Check binding file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7070E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7070E" varFormat="Java">
    security.wssecurity.WSEC7070E=CWWSS7070E: The Security Context Token is not renewable. The exception is:
  </MsgText>
  <Explanation>
    The Security Context Token could not be renewed because an exception was received. 
  </Explanation>
  <UserResponse>
    Make sure the security token service (STS) is configured to allow the Security Context Token to be renewed. Also check that the WSSGenerationContext and WSSConsumingContext specified on the renew operation are correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS7551E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7551E" varFormat="Java">
    security.wssecurity.CWWSS7551E=CWWSS7551E: The value of the ValueType attribute for the SAML token cannot be determined. This token cannot be parsed. 
  </MsgText>
  <Explanation>
    To parse a SAML token, the parser is required to determine the value of the ValueType attribute for the token.  Receiving an unsupported SAML token type is one possible cause for this error. 
  </Explanation>
  <UserResponse>
    Ensure the security token service that provides the token is configured to return a supported SAML token type. See the Information Center for list of supported SAML token types. 
  </UserResponse>
</Message>
<Message ID="CWWSS8014E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8014E" varFormat="Java">
    security.wssecurity.CWWSS8014E=CWWSS8014E: The Issuer name in the SAML Assertion is not trusted. [{0}]  
  </MsgText>
  <Explanation>
    The Issuer name in the SAML Assertion does not match the value configured for the [allowedIssuerName] custom property on the service provider. 
  </Explanation>
  <UserResponse>
    Check TAI configuration to make sure the issuer name is trusted. 
  </UserResponse>
</Message>
<Message ID="CWWSS7550E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7550E" varFormat="Java">
    security.wssecurity.CWWSS7550E=CWWSS7550E: The request to the security token service does not return a GenericSecurityToken object, or the value of the ValueType attribute for the returned token is not [{0}].  
  </MsgText>
  <Explanation>
    The outgoing request is not able to use the token in the RunAsSubject to exchange it for the requested token from the security token service. 
  </Explanation>
  <UserResponse>
    Configure the security token service to return a GenericSecurityToken with the expected ValueType attribute value. 
  </UserResponse>
</Message>
<Message ID="CWWSS7065W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.Instantiate" varFormat="Java">
    security.wssecurity.Instantiate=CWWSS7065W: Unable to instantiate the class {0}.
  </MsgText>
  <Explanation>
    The may be caused by instantiation of class that is an abstract class, an interface, an array class, a primitive type, or void, or the class has no default constructor, but could also be other reasons. 
  </Explanation>
  <UserResponse>
    Make sure the class specified is not an abstract class, an interface, an array class, a primitive type, or void, and has default constructor. 
  </UserResponse>
</Message>
<Message ID="CWWSS8013E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8013E" varFormat="Java">
    security.wssecurity.CWWSS8013E=CWWSS8013E: The Signature element in the SAML Assertion is not valid.  
  </MsgText>
  <Explanation>
    The Signature element in the SAML Assertion is not valid. 
  </Explanation>
  <UserResponse>
    Examine the exception for possible cause. Contact WebSphere Application Server support for help if this problem was not caused by a configuration problem. 
  </UserResponse>
</Message>
<Message ID="CWWSS6844E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6844E" varFormat="Java">
    security.wssecurity.WSEC6844E=CWWSS6844E: The following authentication result exists in the pool but it is not candidate for trusted identity: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6735E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6735E" varFormat="Java">
    security.wssecurity.WSEC6735E=CWWSS6735E: The user registry or login is unable to validate the {0} . {1}
  </MsgText>
  <Explanation>
    It might be that the user is not included in token, or the user is not in user registry, or the token could not be validated. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8012E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8012E" varFormat="Java">
    security.wssecurity.CWWSS8012E=CWWSS8012E: The Signature element in the response is not valid.  
  </MsgText>
  <Explanation>
    The Signature element in the SAML response is not valid. 
  </Explanation>
  <UserResponse>
    Examine the exception for possible cause. Contact WebSphere Application Server support for help if this problem was not caused by a configuration problem. 
  </UserResponse>
</Message>
<Message ID="CWWSS6843E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6843E" varFormat="Java">
    security.wssecurity.WSEC6843E=CWWSS6843E: The following authentication result exists in the pool but it is not a candidate for the caller identity: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8011W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8011W" varFormat="Java">
    security.wssecurity.CWWSS8011W=CWWSS8011W: The Extension element in the response is ignored.  
  </MsgText>
  <Explanation>
    The Extension element in the SAML response is not validated. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider if you do not want the Extension element present. 
  </UserResponse>
</Message>
<Message ID="CWWSS6734E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6734E" varFormat="Java">
    security.wssecurity.WSEC6734E=CWWSS6734E: The generator or consumer configuration for Web services security is missing from message.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8047E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8047E" varFormat="Java">
    security.wssecurity.CWWSS8047E=CWWSS8047E: The signer certificate is not available.  Either the SAML Assertion was not signed or it was not required to be signed.  Ensure that the [{0}] custom property is set to true.
  </MsgText>
  <Explanation>
    A value has been specified for the [trustedSubjectDN_n] custom property in the SAML token consumer configuration. The value for the [trustedSubjectDN_n] custom property must match the Subject DN of the signer certificate in the SAML Assertion.  The signer certificate is not available so the comparison could not be made.  The signer certificate will only be available if the signature of the SAML Assertion is expected to be validated.  Two possible causes of this failure are: 1) The SAML Assertion is not signed, 2) The [signatureRequired] SAML token consumer callback handler custom property is set to false. 
  </Explanation>
  <UserResponse>
    Ensure that the SAML Assertion is signed and check the SAML token consumer callback handler configuration to make sure that the [signatureRequired] custom property is set to true in the WS-Security bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS6842E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6842E" varFormat="Java">
    security.wssecurity.WSEC6842E=CWWSS6842E: The Application Server cannot validate the trusted identity because a list of trusted identities is not specified.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6733E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6733E" varFormat="Java">
    security.wssecurity.WSEC6733E=CWWSS6733E: Multiple namespaces exist in the Web Services Addressing (WS-Addressing) headers.
  </MsgText>
  <Explanation>
    Multiple conflicting Web Services Addressing (WS-Addressing) namespaces in the SOAP message. 
  </Explanation>
  <UserResponse>
    Make sure the correct and supported WS-Addressing namespace is used. 
  </UserResponse>
</Message>
<Message ID="CWWSS8010E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8010E" varFormat="Java">
    security.wssecurity.CWWSS8010E=CWWSS8010E: The SAML response Destination [{0}] is not for the service provider [{1}].  
  </MsgText>
  <Explanation>
    A URI reference indicating the address to which the request has been sent. The Destination attribute in response is present, but it does not match the configured AssertionConsumerService URL. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider. Ensure it either does not emit the Destination attribute, or the Destination matches the partner&apos;s AssertionConsumerService URL. 
  </UserResponse>
</Message>
<Message ID="CWWSS7340E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.nullValueType" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.nullValueType=CWWSS7340E: The token generator with name {0} has a null ValueType. The ValueType is required.
  </MsgText>
  <Explanation>
    The ValueType on the token generator is missing. 
  </Explanation>
  <UserResponse>
    Check and correct the ValueType information in the bindings. The token generator configuration must specify a valid ValueType. 
  </UserResponse>
</Message>
<Message ID="CWWSS8046E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8046E" varFormat="Java">
    security.wssecurity.CWWSS8046E=CWWSS8046E: The Issuer name [{0}] in the SAML Assertion is not trusted.
  </MsgText>
  <Explanation>
    The Issuer name in the SAML Assertion does not match any of the values configured for the [trustedIssuer_n] custom properties on the SAML token consumer. 
  </Explanation>
  <UserResponse>
    Check the SAML token consumer configuration to make sure the issuer name is trusted. 
  </UserResponse>
</Message>
<Message ID="CWWSS6841E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6841E" varFormat="Java">
    security.wssecurity.WSEC6841E=CWWSS6841E: The AxisService class value is NULL. The Application Server cannot decide if the object is a service provider or requester.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5557E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSGenerator.s14" varFormat="Java">
    security.wssecurity.WSSGenerator.s14=CWWSS5557E: More than one parent elements exists. Cannot move the Timestamp element.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5556E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSGenerator.s13" varFormat="Java">
    security.wssecurity.WSSGenerator.s13=CWWSS5556E: A Timestamp element was not found. Cannot move the Timestamp element.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5555E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSGenerator.s12" varFormat="Java">
    security.wssecurity.WSSGenerator.s12=CWWSS5555E: The mustUnderstand attribute on the Security header does not have the required value: existing value={0}, required value={1}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5554E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSGenerator.s11" varFormat="Java">
    security.wssecurity.WSSGenerator.s11=CWWSS5554E: Unknown version of the SOAP specification: versionId={0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7313W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.UNTConsumeLoginModule.s03" varFormat="Java">
    security.wssecurity.UNTConsumeLoginModule.s03=CWWSS7313W: The received identity should be but is not qualified by realm name.
  </MsgText>
  <Explanation>
    The user identity should be qualified by realm name when the com.ibm.wsspi.wssecurity.token.IDAssertion.sendRealm property value is set to true. 
  </Explanation>
  <UserResponse>
    Check if the com.ibm.wsspi.wssecurity.token.IDAssertion.sendRealm property is set to true in binding on sending side. 
  </UserResponse>
</Message>
<Message ID="CWWSS7224E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SecurityTokenImpl.version" varFormat="Java">
    security.wssecurity.SecurityTokenImpl.version=CWWSS7224E: The serialized security token version is different from current token version.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8045E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8045E" varFormat="Java">
    security.wssecurity.CWWSS8045E=CWWSS8045E: The Subject DN [{0}] of the signer certificate in the SAML Assertion is not trusted.
  </MsgText>
  <Explanation>
    The Subject DN of the signer certificate in the SAML Assertion does not match any of the values configured for the [trustedSubjectDN_n] custom properties on the SAML token consumer. 
  </Explanation>
  <UserResponse>
    Check the SAML token consumer configuration to make sure the Subject DN of the signer certificate is trusted. 
  </UserResponse>
</Message>
<Message ID="CWWSS5018E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CommonReceiverConfig.s22" varFormat="Java">
    security.wssecurity.CommonReceiverConfig.s22=CWWSS5018E: The {0} provider does not exist. Error: {1}
  </MsgText>
  <Explanation>
    The specified provider is not configured. 
  </Explanation>
  <UserResponse>
    Verify that you configured the specified provider correctly. 
  </UserResponse>
</Message>
<Message ID="CWWSS6840E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6840E" varFormat="Java">
    security.wssecurity.WSEC6840E=CWWSS6840E: The certificate cache manager is not initialized on the Java 2 Platform, Enterprise Edition (J2EE) client side or the server side.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5017E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CommonReceiverConfig.s21" varFormat="Java">
    security.wssecurity.CommonReceiverConfig.s21=CWWSS5017E: The {0} algorithm parameter is not valid.
  </MsgText>
  <Explanation>
    The specified initialization parameters for this certificate store are incorrect. 
  </Explanation>
  <UserResponse>
    Verify that you specified the certificate store configuration in the binding correctly. 
  </UserResponse>
</Message>
<Message ID="CWWSS5016E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CommonReceiverConfig.s20" varFormat="Java">
    security.wssecurity.CommonReceiverConfig.s20=CWWSS5016E: The provider does not support the {0} certificate store type.
  </MsgText>
  <Explanation>
    The certificate store type is not available or supported by the provider. 
  </Explanation>
  <UserResponse>
    Verify that you specified a supported certificate store type. 
  </UserResponse>
</Message>
<Message ID="CWWSS5553E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSGenerator.s04" varFormat="Java">
    security.wssecurity.WSSGenerator.s04=CWWSS5553E: The message cannot be generated. Unexpected configuration found: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5552E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSGenerator.s03" varFormat="Java">
    security.wssecurity.WSSGenerator.s03=CWWSS5552E: Found an unexpected element as the parent element: {0}. Expected the {1} element with a supported namespace.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5550E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSGenerator.s01" varFormat="Java">
    security.wssecurity.WSSGenerator.s01=CWWSS5550E: Unable to obtain the message context.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5635E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SignatureGenerator.s13" varFormat="Java">
    security.wssecurity.SignatureGenerator.s13=CWWSS5635E: Null is not allowed as the parent element of the {0} element.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5634E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SignatureGenerator.s12" varFormat="Java">
    security.wssecurity.SignatureGenerator.s12=CWWSS5634E: Signing the message produced the following exception: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5633E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SignatureGenerator.s11" varFormat="Java">
    security.wssecurity.SignatureGenerator.s11=CWWSS5633E: Constructing the Signature element produced the following exception: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8044E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8044E" varFormat="Java">
    security.wssecurity.CWWSS8044E=CWWSS8044E: The allowed issuer validation failed for the [{0}] SAML issuer name and the [{1}] Subject DN of the signer certificate.  The SAML issuer and Subject DN are part of a pair so both must be trusted.
  </MsgText>
  <Explanation>
    The Issuer name and the Subject DN shown in the message are part of a trusted pair in the SAML token consumer configuration.  A trusted pair is [trustedIssuer_n] and [trustedSubjectDN_n] where n is the same number.  Either the Issuer name in the token is part of a pair and the Subject DN of the signer certificate doesn&apos;t match its pair or the other way around.  The Issuer or Subject DN that is not trusted will be added as a cause to this message and will be visible in the FFDC logs. 
  </Explanation>
  <UserResponse>
    Do one of the following: 1) Ensure that the SAML token contains the Issuer name shown in the message and is signed with a certificate that has the Subject DN shown in the message.  2) Change the [trustedIssuer_n] [trustedSubjectDN_n] pair in the SAML token consumer configuration to be the Issuer name and the Subject DN of the signer certificate of the SAML token.  3) Remove the pair association of [trustedIssuer_n] [trustedSubjectDN_n] in your SAML token consumer by changing the &apos;n&apos; to different numbers for each custom property. 
  </UserResponse>
</Message>
<Message ID="CWWSS5010E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CommonReceiverConfig.s12" varFormat="Java">
    security.wssecurity.CommonReceiverConfig.s12=CWWSS5010E: The key store is invalid, exception: {0}. Verify the key store is properly setup and configured for the parameter to PKIXBuilderParameters.
  </MsgText>
  <Explanation>
    The key store file does not contain at least one trusted certificate entry or has not successfully initialized. 
  </Explanation>
  <UserResponse>
    Verify that the key store file is correctly configured for the parameters that the PKIXBuilderParameters object specifies. Verify that the key store file contains at least one trusted certificate entry. 
  </UserResponse>
</Message>
<Message ID="CWWSS5195E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5195E" varFormat="Java">
    security.wssecurity.WSEC5195E=CWWSS5195E: The Application Server cannot obtain the {0} algorithm from the {1} provider, which resulted in the following exception: {2}
  </MsgText>
  <Explanation>
    An implementation of the specified algorithm could not be obtained from the JCE provider. 
  </Explanation>
  <UserResponse>
    Make sure that the JCE provider being used does provide the specified algorithm. 
  </UserResponse>
</Message>
<Message ID="CWWSS5632E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SignatureGenerator.s03" varFormat="Java">
    security.wssecurity.SignatureGenerator.s03=CWWSS5632E: The {0} value is not supported when selecting elements.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5631E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SignatureGenerator.s02" varFormat="Java">
    security.wssecurity.SignatureGenerator.s02=CWWSS5631E: The {0} type is not supported when selecting elements.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5630E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SignatureGenerator.s01" varFormat="Java">
    security.wssecurity.SignatureGenerator.s01=CWWSS5630E: Null is not allowed for the type when selecting elements.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8043E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8043E" varFormat="Java">
    security.wssecurity.CWWSS8043E=CWWSS8043E: The allowed issuer validation failed for the certificate Subject DN.  The signer certificate is not available.  Ensure that the [{0}] custom property is set to true.
  </MsgText>
  <Explanation>
    A value has been specified for the [allowedIssuerDN] custom property.  The value for the [allowedIssuerDN] custom property must match the Subject DN of the signer certificate in the SAML Assertion.  The signer certificate is not available so the comparison could not be made.  The signer certificate will only be available if the signature of the SAML Assertion is validated.  Two possible causes of this failure are: 1) The SAML Assertion is not signed, 2) The [wantAssertionsSigned] SAML TAI custom property is set to false for the active service provider. 
  </Explanation>
  <UserResponse>
    Ensure that the SAML Assertion is signed and check the SAML TAI configuration to make sure that the [wantAssertionsSigned] custom property is set to true for the active service provider. 
  </UserResponse>
</Message>
<Message ID="CWWSS8042E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8042E" varFormat="Java">
    security.wssecurity.CWWSS8042E=CWWSS8042E: The Subject DN of the signer certificate in the SAML Assertion is not trusted: [{0}]
  </MsgText>
  <Explanation>
    The Subject DN of the signer certificate in the SAML Assertion does not match the value configured for the [allowedIssuerDN] custom property on the service provider. 
  </Explanation>
  <UserResponse>
    Check the SAML TAI configuration to make sure the Subject DN of the signer certificate is trusted. 
  </UserResponse>
</Message>
<Message ID="CWWSS5193E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5193E" varFormat="Java">
    security.wssecurity.WSEC5193E=CWWSS5193E: The nonce, which is a randomly generated value, has expired.
  </MsgText>
  <Explanation>
    The timestamp of the nonce is too old and has expired. The message might have taken too long to arrive, or there could be a time syncronization problem between client and server. 
  </Explanation>
  <UserResponse>
    Ensure that the date, time, and time zone are synchronized for both the client and the server. If they are both syncronized, it will need to be determined why the message is taking so long to arrive. 
  </UserResponse>
</Message>
<Message ID="CWWSS7532E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.provider" varFormat="Java">
    security.wssecurity.trust.client.provider=CWWSS7532E: An invalid trust service provider webservice address [{0}] was specified.
  </MsgText>
  <Explanation>
    The specified trust service provider is not a valid Web service address for processing trust client requests. 
  </Explanation>
  <UserResponse>
    Verify that the specified trust service provider Web service address is correct and accessible. 
  </UserResponse>
</Message>
<Message ID="CWWSS8041E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8041E" varFormat="Java">
    security.wssecurity.CWWSS8041E=CWWSS8041E: No unique Id was defined in the SAML attributes.
  </MsgText>
  <Explanation>
    A unique Id is required but was not found in the SAML attributes. 
  </Explanation>
  <UserResponse>
    Define a uniqueId for the SAML token in the TAI. 
  </UserResponse>
</Message>
<Message ID="CWWSS7217E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSTrustCallbackHandler.expiredSCT02" varFormat="Java">
    security.wssecurity.WSTrustCallbackHandler.expiredSCT02=CWWSS7217E: Security context token is expired and is not renewable after expiration
  </MsgText>
  <Explanation>
    Cannot renew the security context token 
  </Explanation>
  <UserResponse>
    set renewableAfterExpiration property to true 
  </UserResponse>
</Message>
<Message ID="CWWSS7009E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7009E" varFormat="Java">
    security.wssecurity.WSEC7009E=CWWSS7009E: The argument in WSSTimestampImpl.setDuration(Duration time) method has a null value.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7529E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.setting" varFormat="Java">
    security.wssecurity.trust.client.setting=CWWSS7529E: The specified trust client settings [{0}, {1}] is invalid.
  </MsgText>
  <Explanation>
    The specified trust client key value settings is not valid. 
  </Explanation>
  <UserResponse>
    Verify that the value of the trust client settings key is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS8040E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8040E" varFormat="Java">
    security.wssecurity.CWWSS8040E=CWWSS8040E: No principal was defined in the SAML attributes.
  </MsgText>
  <Explanation>
    A principal is required but was not found in the SAML attributes. 
  </Explanation>
  <UserResponse>
    Define a principal for the SAML token in the TAI. 
  </UserResponse>
</Message>
<Message ID="CWWSS2502I" severity="I" prefix="yes">
  <MsgText pgmKey="security.xml.AlgorithmFactory.s03" varFormat="Java">
    security.xml.AlgorithmFactory.s03=CWWSS2502I: Hardware key store is used.
  </MsgText>
  <Explanation>
    This message is for informational purposes only. 
  </Explanation>
  <UserResponse>
    No action is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS2501I" severity="I" prefix="yes">
  <MsgText pgmKey="security.xml.AlgorithmFactory.s02" varFormat="Java">
    security.xml.AlgorithmFactory.s02=CWWSS2501I: Hardware Cryptographic Acceleration is enabled.
  </MsgText>
  <Explanation>
    This message is for informational purposes only. 
  </Explanation>
  <UserResponse>
    No action is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS5490E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSFactory.s01" varFormat="Java">
    security.wssecurity.WSSFactory.s01=CWWSS5490E: Unsupported type of WS-Security factory: {0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS2500E" severity="E" prefix="yes">
  <MsgText pgmKey="security.xml.AlgorithmFactory.s01" varFormat="Java">
    security.xml.AlgorithmFactory.s01=CWWSS2500E: Failed to use hardware cryptographic provider and continue to process cryptographic operations using software provider.
  </MsgText>
  <Explanation>
    Cryptographic operations are processed using the software provider because the hardware cryptographic processing has failed. 
  </Explanation>
  <UserResponse>
    Check the first failure data capture (FFDC) log file for error details and make sure the hardware cryptographic provider is properly configured. 
  </UserResponse>
</Message>
<Message ID="CWWSS7008E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7008E" varFormat="Java">
    security.wssecurity.WSEC7008E=CWWSS7008E: The argument in the WSSGenerationContextImpl.generate(Object obj) method has a null value.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5685E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.QNameHeaderSelector.s01" varFormat="Java">
    security.wssecurity.QNameHeaderSelector.s01=CWWSS5685E: The required Header/@Namespace attribute was not specified.
  </MsgText>
  <Explanation>
    The Header/@Namespace attribute is required. The Header/@Name attribute is optional. 
  </Explanation>
  <UserResponse>
    Verify that the Header/@Namespace is specified correctly in the policy. 
  </UserResponse>
</Message>
<Message ID="CWWSS7280E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s34" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s34=CWWSS7280E: Token Generator token type [{0}] does not match encryption token type defined in the policy.
  </MsgText>
  <Explanation>
    The Token Generator token type in the bindings file must match the encryption token type in the policy file. 
  </Explanation>
  <UserResponse>
    Correct the policy or binding file and regenerate the file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7279E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s33" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s33=CWWSS7279E: Token Generator token type [{0}] does not match signature token type defined in the policy.
  </MsgText>
  <Explanation>
    The Token Generator token type in the bindings file must match the signature token type in the policy file. 
  </Explanation>
  <UserResponse>
    Correct the policy or binding file and regenerate the file. 
  </UserResponse>
</Message>
<Message ID="CWWSS6630E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PKCS7CallbackHandler.s01" varFormat="Java">
    security.wssecurity.PKCS7CallbackHandler.s01=CWWSS6630E: An exception occured during the handling a Public Key Cryptograpgy Standards (PKCS7) object.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5190W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5190W" varFormat="Java">
    security.wssecurity.WSEC5190W=CWWSS5190W: The {0} property contains the {1} value, which is a non-integer string value. The {2} default value has been used instead.
  </MsgText>
  <Explanation>
    The Application Server expects an integer value. However, the specified value is not an integer number. 
  </Explanation>
  <UserResponse>
    Correct the value for the property so that it is an integer number. 
  </UserResponse>
</Message>
<Message ID="CWWSS0006W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.load.cell.wssecurity.xml" varFormat="Java">
    security.wssecurity.load.cell.wssecurity.xml=CWWSS0006W: The binding loader cannot load {0} from the repository.  The file is a cell-level configuration file for Web services security.
  </MsgText>
  <Explanation>
    The system cannot load the cell-level ws-security.xml configuration file.  The file might be corrupted, missing, or in the wrong location. 
  </Explanation>
  <UserResponse>
    Verify that the configuration file exists.  If the file is missing, copy the ws-security.xml file from the ${USER_INSTALL_ROOT}/config/templates directory. 
  </UserResponse>
</Message>
<Message ID="CWWSS7117W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s17" varFormat="Java">
    security.wssecurity.sct.s17=CWWSS7117W: Could not extract UUID from the ValidateTarget element in the request.
  </MsgText>
  <Explanation>
    Failed to extract the UUID of the security context token from the ValidateTarget element in the request. The UUID is needed to fulfill the validate request. 
  </Explanation>
  <UserResponse>
    Refer to the documentation for acceptable validate request formats. 
  </UserResponse>
</Message>
<Message ID="CWWSS7116W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s16" varFormat="Java">
    security.wssecurity.sct.s16=CWWSS7116W: The specified validate request is missing the ValidateTarget element.
  </MsgText>
  <Explanation>
    Validate requests must have the ValidateTarget element, which specifies the UUID of the security context token to validate. 
  </Explanation>
  <UserResponse>
    Refer to the documentation for acceptable validate request formats. 
  </UserResponse>
</Message>
<Message ID="CWWSS5303E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.DOMUtil.s04" varFormat="Java">
    security.wssecurity.DOMUtil.s04=CWWSS5303E: The Application Server cannot parse an input source. The following exception occurred: {0}
  </MsgText>
  <Explanation>
    There has been an error processing an XML file. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7115E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s15" varFormat="Java">
    security.wssecurity.sct.s15=CWWSS7115E: The algorithm and provider information is missing from the cached security context token.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5302E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.DOMUtil.s03" varFormat="Java">
    security.wssecurity.DOMUtil.s03=CWWSS5302E: The following file does not exist and can not be loaded: {0}.
  </MsgText>
  <Explanation>
    A configuration file is missing. 
  </Explanation>
  <UserResponse>
    Verify that the configuration file is in the specified location. 
  </UserResponse>
</Message>
<Message ID="CWWSS7114W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s14" varFormat="Java">
    security.wssecurity.sct.s14=CWWSS7114W: Could not extract UUID from the RenewTarget element in the request.
  </MsgText>
  <Explanation>
    Failed to extract the UUID of the security context token from the RenewTarget element in the request. The UUID is needed to fulfill the renew request. 
  </Explanation>
  <UserResponse>
    Refer to the documentation for acceptable renew request formats. 
  </UserResponse>
</Message>
<Message ID="CWWSS5301E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.DOMUtil.s02" varFormat="Java">
    security.wssecurity.DOMUtil.s02=CWWSS5301E: The Application Server cannot resolve an entry with publicId={0} and systemId={1} values. The following exception occurred: {2}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7113W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s13" varFormat="Java">
    security.wssecurity.sct.s13=CWWSS7113W: The specified renew request is missing the RenewTarget element.
  </MsgText>
  <Explanation>
    Renew requests must have the RenewTarget element, which specifies the UUID of the security context token to renew. 
  </Explanation>
  <UserResponse>
    Refer to the documentation for acceptable renew request formats. 
  </UserResponse>
</Message>
<Message ID="CWWSS7112E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s12" varFormat="Java">
    security.wssecurity.sct.s12=CWWSS7112E: The SCT renew request handler class is not initialized.
  </MsgText>
  <Explanation>
    The SCT handler classes must be initialized before use. 
  </Explanation>
  <UserResponse>
    Refresh the Security Token Service or restart the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS7111W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s11" varFormat="Java">
    security.wssecurity.sct.s11=CWWSS7111W: Could not extract UUID from the CancelTarget element in the request.
  </MsgText>
  <Explanation>
    Failed to extract the UUID of the security context token from the CancelTarget element in the request. The UUID is needed to fulfill the cancel request. 
  </Explanation>
  <UserResponse>
    Refer to the documentation for acceptable cancel request formats. 
  </UserResponse>
</Message>
<Message ID="CWWSS0111E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS0111E" varFormat="Java">
    security.wssecurity.CWWSS0111E=CWWSS0111E: The SecurityTokenServiceAdmin MBean failed to start. The exception is {0}
  </MsgText>
  <Explanation>
    There is a problem with the Java message beans that has prevented the SecurityTokenServiceAdmin MBean from activating.  This message bean is used to perform a live refresh of the configuration of the Security Token Service. 
  </Explanation>
  <UserResponse>
    There is no user action to correct this problem. 
  </UserResponse>
</Message>
<Message ID="CWWSS7110W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s10" varFormat="Java">
    security.wssecurity.sct.s10=CWWSS7110W: The specified cancel request is missing the CancelTarget element.
  </MsgText>
  <Explanation>
    Cancel requests must have the CancelTarget element, which specifies the UUID of the security context token to cancel. 
  </Explanation>
  <UserResponse>
    Refer to the documentation for acceptable cancel request formats. 
  </UserResponse>
</Message>
<Message ID="CWWSS5458E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s29" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s29=CWWSS5458E: Missing TokenGenerator reference in the KeyInfo.
  </MsgText>
  <Explanation>
    Missing TokenGenerator reference in the KeyInfo. 
  </Explanation>
  <UserResponse>
    Verify the binding for TokenGenerator reference in KeyInfo. 
  </UserResponse>
</Message>
<Message ID="CWWSS7007E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7007E" varFormat="Java">
    security.wssecurity.WSEC7007E=CWWSS7007E: The Application Server cannot obtain the class name from the generatorMap field.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5457E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s28" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s28=CWWSS5457E: Null or empty is not allowed to the name of KeyInfo.
  </MsgText>
  <Explanation>
    Null or empty is not allowed to the name of KeyInfo. 
  </Explanation>
  <UserResponse>
    Verify the binding for valid name attribute for KeyInfo. 
  </UserResponse>
</Message>
<Message ID="CWWSS5455E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s26" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s26=CWWSS5455E: Null or empty is not allowed to the name of TokenGenerator or TokenConsumer.
  </MsgText>
  <Explanation>
    Null or empty is not allowed to the name of TokenGenerator or TokenConsumer. 
  </Explanation>
  <UserResponse>
    Verify the binding for valid name attribute for TokenGenerator and TokenConsumer. 
  </UserResponse>
</Message>
<Message ID="CWWSS5454E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s25" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s25=CWWSS5454E: Unable to find the default configuration.
  </MsgText>
  <Explanation>
    Unable to find the default configuration. 
  </Explanation>
  <UserResponse>
    Verify default binding have not been modified, deleted or corrupted. 
  </UserResponse>
</Message>
<Message ID="CWWSS5453E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s24" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s24=CWWSS5453E: AddCreateTimestamp/@expires has invalid format string: {0}
  </MsgText>
  <Explanation>
    AddCreateTimestamp/@expires has a not valid format string. 
  </Explanation>
  <UserResponse>
    Verify binding for valid timestamp format. 
  </UserResponse>
</Message>
<Message ID="CWWSS5452E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s23" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s23=CWWSS5452E: Null or empty is not allowed to the name of SecurityToken or RequiredSecurityToken.
  </MsgText>
  <Explanation>
    Null or empty is not allowed to the name of SecurityToken or RequiredSecurityToken. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5450E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s21" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s21=CWWSS5450E: Null or empty is not allowed to the name of Integrity, Confidentiality, RequiredIntegrity, or RequiredConfidentiality.
  </MsgText>
  <Explanation>
    Null or empty is not allowed to the name of Integrity, Confidentiality, RequiredIntegrity, or RequiredConfidentiality. 
  </Explanation>
  <UserResponse>
    Verify wsu:Id value is set valid for Integrity and Confidentiality in policy. 
  </UserResponse>
</Message>
<Message ID="CWWSS7109W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s09" varFormat="Java">
    security.wssecurity.sct.s09=CWWSS7109W: The URI for the WSC namespace could not be created. The exception is: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7108E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s08" varFormat="Java">
    security.wssecurity.sct.s08=CWWSS7108E: The requested security context token cannot be issued due to cache failure.
  </MsgText>
  <Explanation>
    The attempt to cache the security context token failed. 
  </Explanation>
  <UserResponse>
    Verify that the SCT configuration file contains the fully qualified name of an accessible token cache factory class under the property tokenCacheFactory. 
  </UserResponse>
</Message>
<Message ID="CWWSS7107W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s07" varFormat="Java">
    security.wssecurity.sct.s07=CWWSS7107W: The request is missing entropy information.
  </MsgText>
  <Explanation>
    Requests are required to contain Entropy and BinarySecret elements. 
  </Explanation>
  <UserResponse>
    Refer to the documentation for acceptable issue request formats. 
  </UserResponse>
</Message>
<Message ID="CWWSS7106E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s06" varFormat="Java">
    security.wssecurity.sct.s06=CWWSS7106E: The SCT issue request handler class is not initialized.
  </MsgText>
  <Explanation>
    The SCT handler classes must be initialized before use. 
  </Explanation>
  <UserResponse>
    Refresh the Security Token Service or restart the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS7105W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s05" varFormat="Java">
    security.wssecurity.sct.s05=CWWSS7105W: No custom property in the SCT plugin configuration is defined for the validate request type.
  </MsgText>
  <Explanation>
    A valid URI value for the validate request type must be present in the SCT configuration. 
  </Explanation>
  <UserResponse>
    Verify that the SCT configuration file contains a valid URI for the custom property validateRequestTypeRST. 
  </UserResponse>
</Message>
<Message ID="CWWSS7104W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s04" varFormat="Java">
    security.wssecurity.sct.s04=CWWSS7104W: No custom property in the SCT plugin configuration is defined for the renew request type.
  </MsgText>
  <Explanation>
    A valid URI value for the renew request type must be present in the SCT configuration. 
  </Explanation>
  <UserResponse>
    Verify that the SCT configuration file contains a valid URI for the custom property renewRequestTypeRST. 
  </UserResponse>
</Message>
<Message ID="CWWSS7103W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s03" varFormat="Java">
    security.wssecurity.sct.s03=CWWSS7103W: No custom property in the SCT plugin configuration is defined for the cancel request type.
  </MsgText>
  <Explanation>
    A valid URI value for the cancel request type must be present in the SCT configuration. 
  </Explanation>
  <UserResponse>
    Verify that the SCT configuration file contains a valid URI for the custom property cancelRequestTypeRST. 
  </UserResponse>
</Message>
<Message ID="CWWSS7102W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s02" varFormat="Java">
    security.wssecurity.sct.s02=CWWSS7102W: No custom property in the SCT plugin configuration is defined for the issue request type.
  </MsgText>
  <Explanation>
    A valid URI value for the issue request type must be present in the SCT configuration. 
  </Explanation>
  <UserResponse>
    Verify that the SCT configuration file contains a valid URI for the custom property issueRequestTypeRST. 
  </UserResponse>
</Message>
<Message ID="CWWSS7101E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.sct.s01" varFormat="Java">
    security.wssecurity.sct.s01=CWWSS7101E: No handler for request type: {0}
  </MsgText>
  <Explanation>
    The request type is not recognized. 
  </Explanation>
  <UserResponse>
    Verify that the plugins configuration file contains the correct information. 
  </UserResponse>
</Message>
<Message ID="CWWSS7006E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7006E" varFormat="Java">
    security.wssecurity.WSEC7006E=CWWSS7006E: The transform(Object obj) method in the following class has a null value: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5445W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s16" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s16=CWWSS5445W: There are no allowed key encryption algorithms defined.
  </MsgText>
  <Explanation>
    There are no allowed key encryption algorithms defined. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5444W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s15" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s15=CWWSS5444W: There are no allowed data encryption algorithms defined.
  </MsgText>
  <Explanation>
    There are no allowed data encryption algorithms defined. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5443W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s14" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s14=CWWSS5443W: There are no allowed digest algorithms defined.
  </MsgText>
  <Explanation>
    There are no allowed digest algorithms defined. 
  </Explanation>
  <UserResponse>
    Verify the algorithm attributes in binding and algorithmSuite in policy are valid. 
  </UserResponse>
</Message>
<Message ID="CWWSS5442W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s13" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s13=CWWSS5442W: There are no allowed signature algorithms defined.
  </MsgText>
  <Explanation>
    There are no allowed signature algorithms defined. 
  </Explanation>
  <UserResponse>
    Verify the algorithm attributes in binding and algorithmSuite in policy are valid. 
  </UserResponse>
</Message>
<Message ID="CWWSS5441W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s12" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s12=CWWSS5441W: There are no allowed canonicalization algorithms defined.
  </MsgText>
  <Explanation>
    There are no allowed canonicalization algorithms defined. 
  </Explanation>
  <UserResponse>
    Verify the algorithm attributes in binding and algorithmSuite in policy are valid. 
  </UserResponse>
</Message>
<Message ID="CWWSS5440W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s11" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s11=CWWSS5440W: There are no allowed transform algorithms defined.
  </MsgText>
  <Explanation>
    There are no allowed transform algorithms defined. 
  </Explanation>
  <UserResponse>
    Verify if the transform algorithm in binding and algorithmSuite in policy are valid. 
  </UserResponse>
</Message>
<Message ID="CWWSS7005E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7005E" varFormat="Java">
    security.wssecurity.WSEC7005E=CWWSS7005E: The argument in the OMStructure.isFeatureSupported(String feature) method has a null value.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5437E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s08" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s08=CWWSS5437E: The combination of secret key algorithms [{0}] and the type of key information [{1}] is not allowed.
  </MsgText>
  <Explanation>
    The combination of secret key algorithms [{0}] and the type of key information [{1}] is not allowed. 
  </Explanation>
  <UserResponse>
    Verify if the secret key algorithm information provided in policy and key information provided in binding are valid. 
  </UserResponse>
</Message>
<Message ID="CWWSS5436E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s07" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s07=CWWSS5436E: Missing or invalid keyinfo in Generator - SigningInfo or EncryptionInfo: Only one KeyInfo is required found: {0}.
  </MsgText>
  <Explanation>
    Generator SigningInfo or EncryptionInfo: Only one KeyInfo is required. 
  </Explanation>
  <UserResponse>
    Verify the binding for keyinfo information. 
  </UserResponse>
</Message>
<Message ID="CWWSS5435E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s06" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s06=CWWSS5435E: BasicAuth: User id is null, but user password is not null.
  </MsgText>
  <Explanation>
    BasicAuth: User id is null, but user password is not null. 
  </Explanation>
  <UserResponse>
    Verify the User ID and password for the BasicAuth in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS5434E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s05" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s05=CWWSS5434E: Missing classname attribute {0} in CallbackHandler.
  </MsgText>
  <Explanation>
    CallbackHandler classname attribute is required. 
  </Explanation>
  <UserResponse>
    Verify the binding if the CallbackHandler className is valid. 
  </UserResponse>
</Message>
<Message ID="CWWSS5433E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s04" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s04=CWWSS5433E: ValueType is required: {0} for TokenGenerator.
  </MsgText>
  <Explanation>
    TokenGenerator ValueType attribute is required. 
  </Explanation>
  <UserResponse>
    Verify binding for valueType of TokenGenerator. 
  </UserResponse>
</Message>
<Message ID="CWWSS5432E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s03" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s03=CWWSS5432E: error in instantiating the TokenGenerator: {0}.
  </MsgText>
  <Explanation>
    TokenGenerator classname and instance attribute is required. 
  </Explanation>
  <UserResponse>
    Verify binding for correct TokenGenerator classname. 
  </UserResponse>
</Message>
<Message ID="CWWSS5431E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s02" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s02=CWWSS5431E: Expecting only one KeyInfo in Generator EncryptionInfo but found: {0}.
  </MsgText>
  <Explanation>
    Only one KeyInfo is required in Generator EncryptionInfo. 
  </Explanation>
  <UserResponse>
    Verify the binding for the Encryption Generators KeyInfo. 
  </UserResponse>
</Message>
<Message ID="CWWSS5430E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateGeneratorConfig.s01" varFormat="Java">
    security.wssecurity.PrivateGeneratorConfig.s01=CWWSS5430E: Unexpected keyinfo {0} in Generator SigningInfo.
  </MsgText>
  <Explanation>
    Only one KeyInfo is required in Generator SigningInfo. 
  </Explanation>
  <UserResponse>
    Verify the binding for the Signature Generators KeyInfo. 
  </UserResponse>
</Message>
<Message ID="CWWSS0119W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0119W" varFormat="Java">
    security.wssecurity.WSEC0119W=CWWSS0119W: The value of {0} seconds for the Nonce clock skew is not within the valid range of a minimum of {1} seconds and a maximum of {2} seconds. The minimum value of {3} seconds was used instead. The Nonce is a randomly generated value.
  </MsgText>
  <Explanation>
    The specified value for the Nonce clock skew is not within the valid range. The Nonce is a randomly generated value. 
  </Explanation>
  <UserResponse>
    Change the value for the Nonce clock skew to one within the valid range. The Nonce clock skew value is specified by the custom property com.ibm.wsspi.wssecurity.core.NonceClockSkew in the WS-Security bindings. The Nonce is a randomly generated value. 
  </UserResponse>
</Message>
<Message ID="CWWSS5209E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5209E" varFormat="Java">
    security.wssecurity.WSEC5209E=CWWSS5209E: The time stamp value for the nonce, which is a randomly generated value, occurs too far into the future.
  </MsgText>
  <Explanation>
    The clocks on the client and server might not be synchronized. 
  </Explanation>
  <UserResponse>
    Ensure that the date, time, and time zone are synchronized for both the client and the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS7341E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.nullValueType" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.nullValueType=CWWSS7341E: The token consumer with name {0} has a null ValueType. The ValueType is required.
  </MsgText>
  <Explanation>
    The ValueType on the token consumer is missing. 
  </Explanation>
  <UserResponse>
    Check and correct the ValueType information in the bindings. The token consumer configuration must specify a valid ValueType. 
  </UserResponse>
</Message>
<Message ID="CWWSS7063E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSUserRegistryProcessor.s02" varFormat="Java">
    security.wssecurity.WSSUserRegistryProcessor.s02=CWWSS7063E: Failed to check username [{0}] in the UserRegsitry: {1}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7004E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7004E" varFormat="Java">
    security.wssecurity.WSEC7004E=CWWSS7004E: The argument in the JAXWSGenerationContextRetriever.getWSSGeneratoinContext(Object object) method  has a null value.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7062E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSUserRegistryProcessor.s01" varFormat="Java">
    security.wssecurity.WSSUserRegistryProcessor.s01=CWWSS7062E: Failed to check username [{0}] and password in the UserRegsitry: {1}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7508E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityAssertionTransform.s08" varFormat="Java">
    security.wssecurity.WSSecurityAssertionTransform.s08=CWWSS7508E: Security header layout assertion - strict - can not be supported if the EncryptionBeforeSigning assertion is present.
  </MsgText>
  <Explanation>
    Strict header layout can not be guaranteed when encrypting before signing. 
  </Explanation>
  <UserResponse>
    Modify the policy and select an alternative header order. 
  </UserResponse>
</Message>
<Message ID="CWWSS7507E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityAssertionTransform.s07" varFormat="Java">
    security.wssecurity.WSSecurityAssertionTransform.s07=CWWSS7507E: Message part encryption and signing order is unclear
  </MsgText>
  <Explanation>
    The order attribute in the signature and encryption references in the bindings can not be published using WS-Policy 
  </Explanation>
  <UserResponse>
    Modify the bindings to ensure that all signature order attributes are either higher or all lower than the encryption order attribute values. 
  </UserResponse>
</Message>
<Message ID="CWWSS7506E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityAssertionTransform.s06" varFormat="Java">
    security.wssecurity.WSSecurityAssertionTransform.s06=CWWSS7506E: A signature transform was found in the bindings that can not be published
  </MsgText>
  <Explanation>
    The signature reference contains a transformation algorithm that can not be published using WS-Policy 
  </Explanation>
  <UserResponse>
    Modify the WS-Security bindings to remove the transformation algorithm that can not be published using WS-Policy 
  </UserResponse>
</Message>
<Message ID="CWWSS0118W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0118W" varFormat="Java">
    security.wssecurity.WSEC0118W=CWWSS0118W: The value of {0} seconds for the Nonce max age is not within the valid range of a minimum of {1} seconds and a maximum of {2} seconds. The minimum value of {3} seconds was used instead. The Nonce is a randomly generated value.
  </MsgText>
  <Explanation>
    The specified value for the Nonce max age is not within the valid range. The Nonce is a randomly generated value. 
  </Explanation>
  <UserResponse>
    Change the value for the Nonce max age to one within the valid range. The Nonce max age value is specified by the custom property com.ibm.wsspi.wssecurity.core.NonceMaxAge in the WS-Security bindings. The Nonce is a randomly generated value. 
  </UserResponse>
</Message>
<Message ID="CWWSS7505E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityAssertionTransform.s05" varFormat="Java">
    security.wssecurity.WSSecurityAssertionTransform.s05=CWWSS7505E: The signature transform algorithms found in the bindings do not match those found in the policy file.
  </MsgText>
  <Explanation>
    The policy file contains an AlgorithmSuite assertion that has parameters that contradict settings in the bindings. 
  </Explanation>
  <UserResponse>
    Modify either the policy file or the bindings to ensure the Algorithm suite parameters match. 
  </UserResponse>
</Message>
<Message ID="CWWSS7504E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityAssertionTransform.s04" varFormat="Java">
    security.wssecurity.WSSecurityAssertionTransform.s04=CWWSS7504E: The trust service bootstrap policy can not be published.
  </MsgText>
  <Explanation>
    Request message part protection and response message part protection policies must be the same in order for bootstrap policy to be published. 
  </Explanation>
  <UserResponse>
    Modify the trust system policy set to ensure the message part protection policies are the same for request and response. 
  </UserResponse>
</Message>
<Message ID="CWWSS7503E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityAssertionTransform.s03" varFormat="Java">
    security.wssecurity.WSSecurityAssertionTransform.s03=CWWSS7503E: A problem occurred transforming the trust service bootstrap policy
  </MsgText>
  <Explanation>
    None 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWWSS7502E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityAssertionTransform.s02" varFormat="Java">
    security.wssecurity.WSSecurityAssertionTransform.s02=CWWSS7502E: More than one signature or encryption token was found in the WS-Security bindings
  </MsgText>
  <Explanation>
    At most one signature token and one encryption token can be declared in the WS-Security bindings 
  </Explanation>
  <UserResponse>
    Modify the WS-Security bindings to ensure there is no more than one encryption token and one signature token 
  </UserResponse>
</Message>
<Message ID="CWWSS7501E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityAssertionTransform.s01" varFormat="Java">
    security.wssecurity.WSSecurityAssertionTransform.s01=CWWSS7501E: The WS-Policy transform operation was called with incorrect or missing parameters
  </MsgText>
  <Explanation>
    None 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWWSS5208E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5208E" varFormat="Java">
    security.wssecurity.WSEC5208E=CWWSS5208E: The time stamp value occurs too far into the future.
  </MsgText>
  <Explanation>
    The clocks on the client and server might not be synchronized. 
  </Explanation>
  <UserResponse>
    Ensure that the date, time, and time zone are synchronized for both the client and the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS7003E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7003E" varFormat="Java">
    security.wssecurity.WSEC7003E=CWWSS7003E: The following argument in the JAXWSGenerationContextPutter.put(Object messageContext, Object wssGenerationContext) method has a null value: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS0117W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0117W" varFormat="Java">
    security.wssecurity.WSEC0117W=CWWSS0117W: The Application Server cannot parse the {0} value for the Nonce max age. The default value of {1} seconds was used instead. The Nonce is a randomly generated value.
  </MsgText>
  <Explanation>
    The format for the value of the Nonce max age is not an integer. The Nonce is a randomly generated value. 
  </Explanation>
  <UserResponse>
    Change the the value for the Nonce max age to an integer. The Nonce max age value is specified by the custom property com.ibm.wsspi.wssecurity.core.NonceMaxAge in the WS-Security bindings. The Nonce is a randomly generated value. 
  </UserResponse>
</Message>
<Message ID="CWWSS7002W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7002W" varFormat="Java">
    security.wssecurity.WSEC7002W=CWWSS7002W: The following parse error occurred: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5721E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.VerifiedPartChecker.s02" varFormat="Java">
    security.wssecurity.VerifiedPartChecker.s02=CWWSS5721E: A required nonce is not found in the message part [{0}].
  </MsgText>
  <Explanation>
    The policy expected the specified message part to contain a Nonce element, which is a randomly generated value. 
  </Explanation>
  <UserResponse>
    Verify that the policies on both the client and the server specify that a Nonce is required for the specified message part. 
  </UserResponse>
</Message>
<Message ID="CWWSS5720E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.VerifiedPartChecker.s01" varFormat="Java">
    security.wssecurity.VerifiedPartChecker.s01=CWWSS5720E: A required message part [{0}] is not signed.
  </MsgText>
  <Explanation>
    The policy expected the specified message part to be signed. 
  </Explanation>
  <UserResponse>
    Verify that the policies on both the client and the server specify the same SignedParts and SignedElements. 
  </UserResponse>
</Message>
<Message ID="CWWSS7222E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSTrustCallbackHandler.clientCushionAndSCT" varFormat="Java">
    security.wssecurity.WSTrustCallbackHandler.clientCushionAndSCT=CWWSS7222E: Security context token lifetime is lower than the WS- SecureConversation client cache cushion
  </MsgText>
  <Explanation>
    Newly issued security context token should have more lifetime than the WS-SecureConversation client cache cushion 
  </Explanation>
  <UserResponse>
    Either lower the client cache cushion setting or increase the lifetime of the security context token 
  </UserResponse>
</Message>
<Message ID="CWWSS0116W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0116W" varFormat="Java">
    security.wssecurity.WSEC0116W=CWWSS0116W: The value of {0} seconds for the Nonce cache timeout is less than the minimum. The minimum value of {1} seconds was used instead. The Nonce is a randomly generated value.
  </MsgText>
  <Explanation>
    The specified value for the Nonce cache timeout is less than the minimum value that is required. The Nonce is a randomly generated value. 
  </Explanation>
  <UserResponse>
    Change the value for the Nonce cache timeout to one within the valid range. The Nonce cache timeout value is specified by the custom property com.ibm.wsspi.wssecurity.core.NonceCacheTimeout in the WS-Security bindings. The Nonce is a randomly generated value. 
  </UserResponse>
</Message>
<Message ID="CWWSS7061E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityGeneratorHandler.s02" varFormat="Java">
    security.wssecurity.WSSecurityGeneratorHandler.s02=CWWSS7061E: Unable to process outbound SOAP message.  Unexpected object {0} in PolicyTypeBinding.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7060E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityGeneratorHandler.s01" varFormat="Java">
    security.wssecurity.WSSecurityGeneratorHandler.s01=CWWSS7060E: Unable to process outbound SOAP message.  Exception retrieved from PolicyTypeLoader:
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7001W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7001W" varFormat="Java">
    security.wssecurity.WSEC7001W=CWWSS7001W: The builder.getDocumentElement method returns a null value.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5206E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5206E" varFormat="Java">
    security.wssecurity.WSEC5206E=CWWSS5206E: The time stamp is not fresh. The current time in the system is {0}. The creation time for the time stamp in the message is {1}.
  </MsgText>
  <Explanation>
    The clocks on the client and server might not be synchronized. 
  </Explanation>
  <UserResponse>
    Ensure that the date, time, and time zone are synchronized for both the client and the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS5535E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s51" varFormat="Java">
    security.wssecurity.WSSConsumer.s51=CWWSS5535E: The SAML sender-vouches assertion whose ID is [{0}] is not signed by the sender or protected with an SSL client certificate authentication.
  </MsgText>
  <Explanation>
    The SAML sender-vouches assertion must be signed by the sender or protected with an SSL client certificate authentication. 
  </Explanation>
  <UserResponse>
    Verify the SAML sender-vouches assertion is signed with a SOAP message. 
  </UserResponse>
</Message>
<Message ID="CWWSS5534E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s50" varFormat="Java">
    security.wssecurity.WSSConsumer.s50=CWWSS5534E: The SAML holder-of-key assertion whose ID is [{0}] is not used for signing or endorsing a request.
  </MsgText>
  <Explanation>
    The SAML holder-of-key assertion must be used for message signing or endorsing a request. 
  </Explanation>
  <UserResponse>
    Verify the SAML token is configured as a protection token for message signing or endorsing a request. 
  </UserResponse>
</Message>
<Message ID="CWWSS0115W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0115W" varFormat="Java">
    security.wssecurity.WSEC0115W=CWWSS0115W: The Application Server cannot parse the {0} value for the Nonce cache timeout. The default value of {1} seconds was used instead. The Nonce is a randomly generated value.
  </MsgText>
  <Explanation>
    The format for the value for the Nonce cache timeout is not an integer. The Nonce is a randomly generated value. 
  </Explanation>
  <UserResponse>
    Change the value for the Nonce cache timeout to an integer. The Nonce cache timeout value is specified by the custom property com.ibm.wsspi.wssecurity.core.NonceCacheTimeout in the WS-Security bindings. The Nonce is a randomly generated value. 
  </UserResponse>
</Message>
<Message ID="CWWSS5205E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5205E" varFormat="Java">
    security.wssecurity.WSEC5205E=CWWSS5205E: The time stamp in the message has expired.
  </MsgText>
  <Explanation>
    The time stamp in the message is too old and has expired. The message might have taken too long to arrive, or there could be a time syncronization problem between client and server. 
  </Explanation>
  <UserResponse>
    Ensure that the date, time, and time zone are synchronized for both the client and the server. If they are both syncronized, it will need to be determined why the message is taking so long to arrive. 
  </UserResponse>
</Message>
<Message ID="CWWSS7310E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s49" varFormat="Java">
    security.wssecurity.WSSConsumer.s49=CWWSS7310E: XML encryption information exists in the security header, however an inbound XML encryption configuration is not present.
  </MsgText>
  <Explanation>
    The SOAP message that has been received by the consumer or provider contained XML encryption information in the security header. However, the application that is receiving the message is not configured for inbound XML encryption. The security header in the inbound SOAP message contained a mustUnderstand attribute with a value of 1. Therefore, an exception has been created. 
  </Explanation>
  <UserResponse>
    Complete one of the following tasks: - Add inbound XML encryption configuration to the application that is receiving the SOAP message. - Remove outbound XML encryption configuration from the application that is sending the SOAP message. - Configure the application that is sending the SOAP message to not add the mustUnderstand attribute to the SOAP security header. 
  </UserResponse>
</Message>
<Message ID="CWWSS7309E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s48" varFormat="Java">
    security.wssecurity.WSSConsumer.s48=CWWSS7309E: An XML digital signature exists in the security header.  Hoowever an inbound signature configuration is not present.
  </MsgText>
  <Explanation>
    The SOAP message that has been received by the consumer or provider contained an XML digital signature in the security header. However, the application that is receiving the message is not configured for inbound XML digital signature. The security header in the inbound SOAP message contained a mustUnderstand attribute with a value of 1. Therefore, an exception has been created. 
  </Explanation>
  <UserResponse>
    Complete one of the following tasks: - Add an inbound XML digital signature configuration to the application that is receiving the SOAP message. - Remove the outbound XML Digital signature configuration from the application that is sending the SOAP message. - Configure the application that is sending the SOAP message to not add the mustUnderstand attribute to the SOAP security header. 
  </UserResponse>
</Message>
<Message ID="CWWSS7284E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s47" varFormat="Java">
    security.wssecurity.WSSConsumer.s47=CWWSS7284E: The Value type of the token is {0}, but {1} is found in the token consumer configuration.
  </MsgText>
  <Explanation>
    The token consumer specified enforceTokenVersion. The token Value type must match the token consumer configuration. 
  </Explanation>
  <UserResponse>
    Verify that the token generator and consumer configuration is correct. Removing enforceTokenVersion will allow the token with a different Value type to be consumed. 
  </UserResponse>
</Message>
<Message ID="CWWSS5532W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s46" varFormat="Java">
    security.wssecurity.WSSConsumer.s46=CWWSS5532W: A SignatureConfirmation element found, but it is not required. It will not be verified. This might be a configuration error.
  </MsgText>
  <Explanation>
    The RequireSignatureConfirmation policy assertion might be specified in the service policy but not in the client policy. 
  </Explanation>
  <UserResponse>
    Verify that the RequireSignatureConfirmation policy assertion is not needed in the client policy. 
  </UserResponse>
</Message>
<Message ID="CWWSS5531E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s45" varFormat="Java">
    security.wssecurity.WSSConsumer.s45=CWWSS5531E: An EncryptedHeader element with mustUnderstand equal 1 was misunderstood while processing the security header for a Web service.
  </MsgText>
  <Explanation>
    An EncryptedHeader element with mustUnderstand equal 1 was not decrypted while processing the security header for a Web service. 
  </Explanation>
  <UserResponse>
    Verify that the EncryptedHeader element was targeted to the correct role or actor. 
  </UserResponse>
</Message>
<Message ID="CWWSS5530E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s44" varFormat="Java">
    security.wssecurity.WSSConsumer.s44=CWWSS5530E: The response message did not contain the expected signature confirmation element with no Value attribute.
  </MsgText>
  <Explanation>
    The RequireSignatureConfirmation policy assertion might not be specified in the policies for the client or the server. 
  </Explanation>
  <UserResponse>
    Verify that the RequireSignatureConfirmation policy assertion has been specified in the policies for both the client and the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS5529E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s43" varFormat="Java">
    security.wssecurity.WSSConsumer.s43=CWWSS5529E: Expected {0} signature confirmation elements in the response and found {1}.
  </MsgText>
  <Explanation>
    The RequireSignatureConfirmation policy assertion might not be specified in the policies for the client or the server. 
  </Explanation>
  <UserResponse>
    Verify that the RequireSignatureConfirmation policy assertion has been specified in the policies for both the client and the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS7213E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTConsumeLoginModule.invalidValueType" varFormat="Java">
    security.wssecurity.SCTConsumeLoginModule.invalidValueType=CWWSS7213E: Unsupported Value Type. Expecting this [{0}], but found [{1}].
  </MsgText>
  <Explanation>
    The Value Type specified in the token configuration is not correct 
  </Explanation>
  <UserResponse>
    Check and correct the Value Type information in the bindings for the token consumer configuration 
  </UserResponse>
</Message>
<Message ID="CWWSS5528E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s42" varFormat="Java">
    security.wssecurity.WSSConsumer.s42=CWWSS5528E: The signature confirmation value on the response does not match a signature value from the request.
  </MsgText>
  <Explanation>
    The RequireSignatureConfirmation policy assertion might not be specified in the policies for the client or the server. 
  </Explanation>
  <UserResponse>
    Verify that the RequireSignatureConfirmation policy assertion has been specified in the policies for both the client and the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS5527E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s41" varFormat="Java">
    security.wssecurity.WSSConsumer.s41=CWWSS5527E: The response message did not contain the expected Value attribute on the signature confirmation element.
  </MsgText>
  <Explanation>
    The RequireSignatureConfirmation policy assertion might not be specified in the policies for the client or the server. 
  </Explanation>
  <UserResponse>
    Verify that the RequireSignatureConfirmation policy assertion has been specified in the policies for both the client and the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS5526E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s40" varFormat="Java">
    security.wssecurity.WSSConsumer.s40=CWWSS5526E: The server cannot find the security header for a Web service with the actor: {0}
  </MsgText>
  <Explanation>
    The SOAP message might not have the security constraints defined, or the actor on the server and the client do not match. 
  </Explanation>
  <UserResponse>
    Verify that the client has security configured for Web services and that the actor matches on both the client and the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS7245E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyOutboundConfig.encorder" varFormat="Java">
    security.wssecurity.PolicyOutboundConfig.encorder=CWWSS7245E: Order is a required attribute for encryption information on outbound bindings.
  </MsgText>
  <Explanation>
    The attached WS-PolicySet binding file is not valid. 
  </Explanation>
  <UserResponse>
    Regenerate the binding file. 
  </UserResponse>
</Message>
<Message ID="CWWSS5525E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s39" varFormat="Java">
    security.wssecurity.WSSConsumer.s39=CWWSS5525E: The server cannot find the security header for a Web service with no actor.
  </MsgText>
  <Explanation>
    The SOAP message might not have the security constraints defined, or the actor on the server and the client do not match. 
  </Explanation>
  <UserResponse>
    Verify that the client has security configured for Web services and that the actor matches on both the client and the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS5524W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s38" varFormat="Java">
    security.wssecurity.WSSConsumer.s38=CWWSS5524W: The server cannot find the security header for a Web service with the actor: {0}
  </MsgText>
  <Explanation>
    The SOAP message might not have the security constraints defined, or the actor on the server and the client do not match. 
  </Explanation>
  <UserResponse>
    Verify that the client has security configured for Web services and that the actor matches on both the client and the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS5520E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s34" varFormat="Java">
    security.wssecurity.WSSConsumer.s34=CWWSS5520E: An exception occurred during token processing. The exception is: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5519W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s33" varFormat="Java">
    security.wssecurity.WSSConsumer.s33=CWWSS5519W: A valid X509 Certificate is not found in the token.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5518W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s32" varFormat="Java">
    security.wssecurity.WSSConsumer.s32=CWWSS5518W: Unable to obtain the X509 certificate from a token.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7516E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7516E" varFormat="Java">
    security.wssecurity.CWWSS7516E=CWWSS7516E: {0} failed to locate token: {1} for key id: {2}
  </MsgText>
  <Explanation>
    A SAML token cannot be located for the provided ID. 
  </Explanation>
  <UserResponse>
    Provide a valid SAML ID. 
  </UserResponse>
</Message>
<Message ID="CWWSS6545E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TokenManager.finalizeSubject05" varFormat="Java">
    security.wssecurity.TokenManager.finalizeSubject05=CWWSS6545E: The invocation subject was not set correctly to the ContextManager.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6544E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TokenManager.finalizeSubject04" varFormat="Java">
    security.wssecurity.TokenManager.finalizeSubject04=CWWSS6544E: The caller subject was not set correctly to the ContextManager.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6543E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TokenManager.finalizeSubject03" varFormat="Java">
    security.wssecurity.TokenManager.finalizeSubject03=CWWSS6543E: The invocation subject was not obtained from the ContextManager.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6542E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TokenManager.finalizeSubject02" varFormat="Java">
    security.wssecurity.TokenManager.finalizeSubject02=CWWSS6542E: The caller subject was not obtained from the ContextManager.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6541E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TokenManager.finalizeSubject01" varFormat="Java">
    security.wssecurity.TokenManager.finalizeSubject01=CWWSS6541E: The instance of ContextManager was not obtained.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5514E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s23" varFormat="Java">
    security.wssecurity.WSSConsumer.s23=CWWSS5514E: An exception while processing WS-Security message: {0}
  </MsgText>
  <Explanation>
    An exception while processing WS-Security message. 
  </Explanation>
  <UserResponse>
    Turn on trace to collect more debug information. Refer to the information center to collect trace data. 
  </UserResponse>
</Message>
<Message ID="CWWSS5512E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s21" varFormat="Java">
    security.wssecurity.WSSConsumer.s21=CWWSS5512E: Unable to cast to the appropriate SecurityToken {0} into {1}.
  </MsgText>
  <Explanation>
    The securitytoken provided in policy or binding is not supported or valid. 
  </Explanation>
  <UserResponse>
    Verify the Token information in the policy and binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS7057E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s13" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s13=CWWSS7057E: No policy set attachment type found. Cannot determine if policy set is for client, application or system/trust.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7056E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s12" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s12=CWWSS7056E: Policy set attachment type {0} not valid.
  </MsgText>
  <Explanation>
    Valid policy set attachment types are client, application, or system/trust. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7055E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s11" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s11=CWWSS7055E: Exception retrieved from PolicyTypeLoader:
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7054E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s10" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s10=CWWSS7054E: Problem found while loading WSSecurity policy. Expected {0}, found {1}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7221I" severity="I" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSTrustCallbackHandler.expiredSCT" varFormat="Java">
    security.wssecurity.WSTrustCallbackHandler.expiredSCT=CWWSS7221I: Security context token is expired and is not renewable after expiration
  </MsgText>
  <Explanation>
    This is informational message only. Runtime will automatically request for a new SC token 
  </Explanation>
  <UserResponse>
    Informational message 
  </UserResponse>
</Message>
<Message ID="CWWSS7515E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7515E" varFormat="Java">
    security.wssecurity.CWWSS7515E=CWWSS7515E: Wrong token type: {0}
  </MsgText>
  <Explanation>
    The token type must be SAML, which is the only token type processed by this login module. 
  </Explanation>
  <UserResponse>
    Provide a SAML token type. 
  </UserResponse>
</Message>
<Message ID="CWWSS6809E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6809E" varFormat="Java">
    security.wssecurity.WSEC6809E=CWWSS6809E: The X509 certificate owned by {0}, which is created from the binary in the message is different from the X509 certificate owned by {1}, which is acquired from the keystore Path: {2}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5511E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s16" varFormat="Java">
    security.wssecurity.WSSConsumer.s16=CWWSS5511E: An exception occurred during the decryption of a message. The exception is {0}
  </MsgText>
  <Explanation>
    Error during message decryption. 
  </Explanation>
  <UserResponse>
    For more information on error turn on trace to collect more debug information. Refer to the information center to collect trace data. 
  </UserResponse>
</Message>
<Message ID="CWWSS7053W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s09" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s09=CWWSS7053W: No web services security custom bindings were found. Default bindings will be used.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5510E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s15" varFormat="Java">
    security.wssecurity.WSSConsumer.s15=CWWSS5510E: An exception occurred during the signature verification. The exception is {0}
  </MsgText>
  <Explanation>
    Error during signature verification. 
  </Explanation>
  <UserResponse>
    For more information on error turn on trace to collect more debug information. Refer to the information center to collect trace data. 
  </UserResponse>
</Message>
<Message ID="CWWSS7052E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s08" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s08=CWWSS7052E: Policy set not found for application.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5509E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s14" varFormat="Java">
    security.wssecurity.WSSConsumer.s14=CWWSS5509E: A security token whose type is [{0}] is required.
  </MsgText>
  <Explanation>
    Expected Security Token missing. 
  </Explanation>
  <UserResponse>
    Verify the valuetype information of the Token in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS7051E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s07" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s07=CWWSS7051E: No web services security custom bindings or default bindings were found.
  </MsgText>
  <Explanation>
    Loading of default and custom bindings failed. It is impossible to complete configuration. 
  </Explanation>
  <UserResponse>
    Check trace and FFDC logs for problems logged during loading of custom and default bindings and take appropriate action. 
  </UserResponse>
</Message>
<Message ID="CWWSS5508E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s13" varFormat="Java">
    security.wssecurity.WSSConsumer.s13=CWWSS5508E: All the attempts based on each TokenConsumer failed. The last exception is {0}
  </MsgText>
  <Explanation>
    The provided TokenConsumer is corrupted or not valid. 
  </Explanation>
  <UserResponse>
    Verify TokenConsumer information in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS7050E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s06" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s06=CWWSS7050E: Null returned from jaxb for the web services security custom bindings.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5507E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s12" varFormat="Java">
    security.wssecurity.WSSConsumer.s12=CWWSS5507E: All the attempts based on each EncryptionInfo failed. The last exception is {0}
  </MsgText>
  <Explanation>
    The provided EncryptionInfo is corrupted or not valid. 
  </Explanation>
  <UserResponse>
    Verify EncryptionInfo information in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS7049E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s05" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s05=CWWSS7049E: Exception received while loading the web services security custom bindings:
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5506E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s11" varFormat="Java">
    security.wssecurity.WSSConsumer.s11=CWWSS5506E: All the attempts based on each SigningInfo failed. The last exception is {0}
  </MsgText>
  <Explanation>
    The provided SigningInfo is corrupted or not valid. 
  </Explanation>
  <UserResponse>
    Verify SigningInfo information in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS7048E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s04" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s04=CWWSS7048E: Could not load ws-security.xml file.
  </MsgText>
  <Explanation>
    There was a problem loading the ws-security.xml file. It could have been moved, deleted or corrupted. 
  </Explanation>
  <UserResponse>
    Verify that the ws-security.xml file is present and intact in the WebSphere installation. 
  </UserResponse>
</Message>
<Message ID="CWWSS7047E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s03" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s03=CWWSS7047E: No web services security default bindings were found.
  </MsgText>
  <Explanation>
    Default bindings were not found. 
  </Explanation>
  <UserResponse>
    Check logs and trace to see if default bindings were found in the filesystem or if there were any loading errors, and take appropriate action. 
  </UserResponse>
</Message>
<Message ID="CWWSS7046E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s02" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s02=CWWSS7046E: Null returned from jaxb for the web services security default bindings.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7045E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSecurityBindingLoaderImpl.s01" varFormat="Java">
    security.wssecurity.WSSecurityBindingLoaderImpl.s01=CWWSS7045E: Exception received while loading the web services security default bindings. The exception is [{0}].
  </MsgText>
  <Explanation>
    There was an exception received while loading default bindings. The exception will contain the specific problem found. 
  </Explanation>
  <UserResponse>
    Refer to the exception thrown for details and take appropriate action. 
  </UserResponse>
</Message>
<Message ID="CWWSS7069E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7069E" varFormat="Java">
    security.wssecurity.WSEC7069E=CWWSS7069E: Cannot get valid Lifetime information for Security Context Token.
  </MsgText>
  <Explanation>
    Either the createdDate or expiredDate is null. Both createdDate and expiredDate are required when renewing a Security Context Token. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7514E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7514E" varFormat="Java">
    security.wssecurity.CWWSS7514E=CWWSS7514E: The propagation token is not valid for this request.
  </MsgText>
  <Explanation>
    The propagation token is not valid for this request. 
  </Explanation>
  <UserResponse>
    Provide a valid propagation token for this request. 
  </UserResponse>
</Message>
<Message ID="CWWSS6808E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6808E" varFormat="Java">
    security.wssecurity.WSEC6808E=CWWSS6808E: There is no X509 certificate in request message.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5505E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s06" varFormat="Java">
    security.wssecurity.WSSConsumer.s06=CWWSS5505E: There are different namespaceURIs for WS-Security {0}.
  </MsgText>
  <Explanation>
    There is mismatch of WS-Security Namespace URI versions. 
  </Explanation>
  <UserResponse>
    Verify in binding approrpriate WS-Security Namespace URI versions are specified. 
  </UserResponse>
</Message>
<Message ID="CWWSS5504E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s05" varFormat="Java">
    security.wssecurity.WSSConsumer.s05=CWWSS5504E: The namespace URI {0} is diffrent than expected.
  </MsgText>
  <Explanation>
    Unexpected Namespace URI. 
  </Explanation>
  <UserResponse>
    Verify the namespace URI is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS7246E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyOutboundConfig.sigorder" varFormat="Java">
    security.wssecurity.PolicyOutboundConfig.sigorder=CWWSS7246E: Order is a required attribute for signing information on outbound bindings.
  </MsgText>
  <Explanation>
    The attached WS-PolicySet binding file is not valid. 
  </Explanation>
  <UserResponse>
    Regenerate the binding file. 
  </UserResponse>
</Message>
<Message ID="CWWSS5503E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s04" varFormat="Java">
    security.wssecurity.WSSConsumer.s04=CWWSS5503E: Unknown child element {0} in the {1} parent element.
  </MsgText>
  <Explanation>
    Unexpected child element. 
  </Explanation>
  <UserResponse>
    To get more information on the error, turn on trace to collect more debug information. Refer to the information center to collect trace data. 
  </UserResponse>
</Message>
<Message ID="CWWSS5502E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s03" varFormat="Java">
    security.wssecurity.WSSConsumer.s03=CWWSS5502E: The target element: {0} was not expected.
  </MsgText>
  <Explanation>
    The target element: {0} was not expected. 
  </Explanation>
  <UserResponse>
    To get more information on the error, turn on trace to collect more debug information. Refer to the information center to collect trace data. 
  </UserResponse>
</Message>
<Message ID="CWWSS5501E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSConsumer.s02" varFormat="Java">
    security.wssecurity.WSSConsumer.s02=CWWSS5501E: All tokens in the message must be consumed.
  </MsgText>
  <Explanation>
    The message contained tokens that could not be consumed. This could be a problem with the token consumer bindings. 
  </Explanation>
  <UserResponse>
    Verify that the token consumer bindings in the application security bindings are correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS6032E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.STRReferenceContentConsumer.getReferenceURI02" varFormat="Java">
    security.wssecurity.STRReferenceContentConsumer.getReferenceURI02=CWWSS6032E: The URI attribute is not found.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6031E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.STRReferenceContentConsumer.getReferenceURI01" varFormat="Java">
    security.wssecurity.STRReferenceContentConsumer.getReferenceURI01=CWWSS6031E: The Reference Element was not processed.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7068E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7068E" varFormat="Java">
    security.wssecurity.WSEC7068E=CWWSS7068E: The Securtiy Context Token is not cancelled. Exception is.
  </MsgText>
  <Explanation>
    The Security Context Token is not cancelled because of an exception. 
  </Explanation>
  <UserResponse>
    Look at the exception and see if the security token service (STS) configuration needs to be modifed to support SCT cancel. 
  </UserResponse>
</Message>
<Message ID="CWWSS7513E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7513E" varFormat="Java">
    security.wssecurity.CWWSS7513E=CWWSS7513E: Exception from WS-Trust client call: {0}
  </MsgText>
  <Explanation>
    The SAML token issue request to the STS failed. 
  </Explanation>
  <UserResponse>
    The SAML token issue request to the STS failed. 
  </UserResponse>
</Message>
<Message ID="CWWSS7549E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7549E" varFormat="Java">
    security.wssecurity.CWWSS7549E=CWWSS7549E: There is more than one validation result from a token validation request to the security token service.  
  </MsgText>
  <Explanation>
    A token validation request was sent to the security token service and multiple results were returned. This is not supported. 
  </Explanation>
  <UserResponse>
    Configure the security token service to return a single result on a token validation request. 
  </UserResponse>
</Message>
<Message ID="CWWSS5200E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5200E" varFormat="Java">
    security.wssecurity.WSEC5200E=CWWSS5200E: The time stamp value that is associated with the nonce is not fresh. The current time on the server is {0}. The timestamp value for the nonce is {1}
  </MsgText>
  <Explanation>
    The clocks on the client and server might not be synchronized. 
  </Explanation>
  <UserResponse>
    Ensure that the date, time, and time zone are synchronized for both the client and the server. 
  </UserResponse>
</Message>
<Message ID="CWWSS5604W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EncryptionConsumer.s14" varFormat="Java">
    security.wssecurity.EncryptionConsumer.s14=CWWSS5604W: An exception occurred while decrypting an EncryptedHeader that had a mustUnderstand attribute not equal to true.
  </MsgText>
  <Explanation>
    The EncryptedHeader was not processed because of the exception. Because the mustUnderstand attribute was not equal to true, processing of the message was allowed to continue. 
  </Explanation>
  <UserResponse>
    No action is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS5603E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EncryptionConsumer.s13" varFormat="Java">
    security.wssecurity.EncryptionConsumer.s13=CWWSS5603E: Null is not allowed as the target element. An enc:EncryptedKey or enc:ReferenceList element was expected when decrypting the message.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5602E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EncryptionConsumer.s12" varFormat="Java">
    security.wssecurity.EncryptionConsumer.s12=CWWSS5602E: The EncryptedKey/EncryptionMethod {0} not found.
  </MsgText>
  <Explanation>
    If using symmetric bindings, data encryption must be used instead of key encryption. 
  </Explanation>
  <UserResponse>
    Verify that the bindings are configured to use data encryption if symmetric bindings are used in the policy. 
  </UserResponse>
</Message>
<Message ID="CWWSS5601E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EncryptionConsumer.s11" varFormat="Java">
    security.wssecurity.EncryptionConsumer.s11=CWWSS5601E: The following exception occured while decrypting the message: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6736E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s29" varFormat="Java">
    security.wssecurity.ConfigUtil.s29=CWWSS6736E: The Application Server cannot load the keystore with reference {0}.
  </MsgText>
  <Explanation>
    A keystore with the specified reference could not be loaded. 
  </Explanation>
  <UserResponse>
    Verify that the keystore reference in the bindings is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS6731E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s28" varFormat="Java">
    security.wssecurity.ConfigUtil.s28=CWWSS6731E: The Application Server cannot load the keystore with the reference {0}. The following exception occurred: {1}
  </MsgText>
  <Explanation>
    A keystore with the specified reference could not be loaded. 
  </Explanation>
  <UserResponse>
    Verify that the keystore reference in the bindings is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS5312E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s27" varFormat="Java">
    security.wssecurity.ConfigUtil.s27=CWWSS5312E: The Application Server cannot retrieve the {0} key from the {1} keystore. The following exception occurred: {2}
  </MsgText>
  <Explanation>
    The key could not be recovered. The password for recovering the key might be wrong. 
  </Explanation>
  <UserResponse>
    Verify that the password to retrieve the key from the keystore is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS5311E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s26" varFormat="Java">
    security.wssecurity.ConfigUtil.s26=CWWSS5311E: The Application Server cannot create an X.509 Certificate Revocation List (CRL) factory using the following CRL file: {0}. The following exception occurred: {1}
  </MsgText>
  <Explanation>
    There has been a problem creating a Certificate Revocation List from the CRL file. 
  </Explanation>
  <UserResponse>
    Verify that the CRL file contents are correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS5310E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s25" varFormat="Java">
    security.wssecurity.ConfigUtil.s25=CWWSS5310E: The Application Server cannot open the X.509 Certificate Revocation List (CRL) file, which is located in the following location: {0}. The following exception occurred: {1}
  </MsgText>
  <Explanation>
    A Certificate Revocation List file cannot be found in the filesystem. 
  </Explanation>
  <UserResponse>
    Verify that the file is located on the specified location. 
  </UserResponse>
</Message>
<Message ID="CWWSS5020E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s24" varFormat="Java">
    security.wssecurity.ConfigUtil.s24=CWWSS5020E: The X509 certificate cannot be created from the following X509 certificate file: {0}. Error: {1}
  </MsgText>
  <Explanation>
    The certificate file cannot be parsed. 
  </Explanation>
  <UserResponse>
    Verify that the certificate file format is a supported certificate type. 
  </UserResponse>
</Message>
<Message ID="CWWSS5019E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s23" varFormat="Java">
    security.wssecurity.ConfigUtil.s23=CWWSS5019E: The following X509 certificate file cannot be opened: {0}. Error: {1}
  </MsgText>
  <Explanation>
    The certificate file cannot be accessed because I/O errors occured. 
  </Explanation>
  <UserResponse>
    Verify that you specified the correct certificate file path and the appropriate file system permissions. 
  </UserResponse>
</Message>
<Message ID="CWWSS0146E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0146E" varFormat="Java">
    security.wssecurity.WSEC0146E=CWWSS0146E: The Application Server cannot add the {0} pluggable algorithm factory. Algorithm mapping is not supported when the Application Server is in FIPS mode.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7205E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTGenerateLoginModule.invalidSCT" varFormat="Java">
    security.wssecurity.SCTGenerateLoginModule.invalidSCT=CWWSS7205E: Invalid Security Context Token
  </MsgText>
  <Explanation>
    Security Context Token is expired. 
  </Explanation>
  <UserResponse>
    When using WSSAPIs, user can try to renew the token and retry the request 
  </UserResponse>
</Message>
<Message ID="CWWSS7067E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7067E" varFormat="Java">
    security.wssecurity.WSEC7067E=CWWSS7067E: The Security Context Token is not canceled. The exception is:
  </MsgText>
  <Explanation>
    The AxisService from the BindingProvider object may not be correct for this Security Context Token. 
  </Explanation>
  <UserResponse>
    Make sure the BindingProvider object specified on the cancel operation is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS7512E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7512E" varFormat="Java">
    security.wssecurity.CWWSS7512E=CWWSS7512E: Unknow Confirmation Method or KeyType: {0}
  </MsgText>
  <Explanation>
    The confirmation method or type for this request is not recognized. 
  </Explanation>
  <UserResponse>
    The subject confirmation method can be either holder-of-key (HOK) or sender-vouches (SV). 
  </UserResponse>
</Message>
<Message ID="CWWSS7548E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7548E" varFormat="Java">
    security.wssecurity.CWWSS7548E=CWWSS7548E: There is no token validation result from a token validation request to the security token service.  
  </MsgText>
  <Explanation>
    A token validation request was sent to the security token service but no results were returned. 
  </Explanation>
  <UserResponse>
    The security token service must be configured to return a result on a token validation request. 
  </UserResponse>
</Message>
<Message ID="CWWSS6096E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyStoreKeyLocator.generateIdentifier04" varFormat="Java">
    security.wssecurity.KeyStoreKeyLocator.generateIdentifier04=CWWSS6096E: An Exception occured during the generation of the Key Identifier.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6095E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyStoreKeyLocator.generateIdentifier03" varFormat="Java">
    security.wssecurity.KeyStoreKeyLocator.generateIdentifier03=CWWSS6095E: Value type must be {0}, but {1} is found.
  </MsgText>
  <Explanation>
    bindings have the information related to Value Type of the token 
  </Explanation>
  <UserResponse>
    Check the Value Type of the token configuration in the bindings 
  </UserResponse>
</Message>
<Message ID="CWWSS7212E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTConsumeLoginModule.verifyDKT" varFormat="Java">
    security.wssecurity.SCTConsumeLoginModule.verifyDKT=CWWSS7212E: Cannot verify security context token using the reference information from the derived key token element
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6094E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyStoreKeyLocator.generateIdentifier02" varFormat="Java">
    security.wssecurity.KeyStoreKeyLocator.generateIdentifier02=CWWSS6094E: A null value is not allowed in the value type field.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6806E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6806E" varFormat="Java">
    security.wssecurity.WSEC6806E=CWWSS6806E: An exception occurs while validating the certificate owned by {0}: {1}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6093E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyStoreKeyLocator.generateIdentifier01" varFormat="Java">
    security.wssecurity.KeyStoreKeyLocator.generateIdentifier01=CWWSS6093E: Invalid algorithm for Identifier generation.
  </MsgText>
  <Explanation>
    KeyIdentifier element does not have the correct Algorithm specified 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5600E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EncryptionConsumer.s01" varFormat="Java">
    security.wssecurity.EncryptionConsumer.s01=CWWSS5600E: Required DataReference/@URI attribute was not specified.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5013E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s17" varFormat="Java">
    security.wssecurity.ConfigUtil.s17=CWWSS5013E: The {0} class must be a subclass of {1} class.
  </MsgText>
  <Explanation>
    The instantiated class is not a subclass of the required class type. 
  </Explanation>
  <UserResponse>
    Verify that the class implementation extends the required base class or implements the required interfaces. 
  </UserResponse>
</Message>
<Message ID="CWWSS5009E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s11" varFormat="Java">
    security.wssecurity.ConfigUtil.s11=CWWSS5009E: The default constructor for the {0} class cannot be accessed.
  </MsgText>
  <Explanation>
    The class default constructor does not exist or not public. 
  </Explanation>
  <UserResponse>
    Verify that the class public default constructor exists. 
  </UserResponse>
</Message>
<Message ID="CWWSS5008E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s10" varFormat="Java">
    security.wssecurity.ConfigUtil.s10=CWWSS5008E:  The {0} class cannot be instantiated.
  </MsgText>
  <Explanation>
    The class default constructor does not exist, or the class is one of the following class types: abstract, interface, array, primitive, or void, or other permission problem. 
  </Explanation>
  <UserResponse>
    Verify that the class default constructor exists. Verify that you did not specify any of the following class types: abstract, interface, array, primitive, or void. Verify that you have the proper Java 2 Security permission or file system permission. 
  </UserResponse>
</Message>
<Message ID="CWWSS7511E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7511E" varFormat="Java">
    security.wssecurity.CWWSS7511E=CWWSS7511E: No SAML assertion found.
  </MsgText>
  <Explanation>
    The assertion token cannot be retrieved because the assertion ID is missing from the requesting message context. 
  </Explanation>
  <UserResponse>
    Ensure that the assertion ID is generated for the SAML assertion. 
  </UserResponse>
</Message>
<Message ID="CWWSS0144W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0144W" varFormat="Java">
    security.wssecurity.WSEC0144W=CWWSS0144W: The Application Server cannot parse the {0} value for the timestamp cache timeout. The default value of {1} seconds was used instead.
  </MsgText>
  <Explanation>
    The format of the value for the timestamp cache timeout is not an integer. 
  </Explanation>
  <UserResponse>
    Change the value for the timestamp cache timeout to an integer. The timestamp cache timeout value is specified by the custom property com.ibm.wsspi.wssecurity.core.TimestampTimeout in the WS-Security bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS7547E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7547E" varFormat="Java">
    security.wssecurity.CWWSS7547E=CWWSS7547E: The ValueType of the exchanged token cannot be identified.  
  </MsgText>
  <Explanation>
    The ValueType of the token received from the security token service cannot be identified. 
  </Explanation>
  <UserResponse>
    The security token service must be configured to return a ValueType for the exchanged token. 
  </UserResponse>
</Message>
<Message ID="CWWSS6805E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6805E" varFormat="Java">
    security.wssecurity.WSEC6805E=CWWSS6805E: The certificate owned by {0} has expired: {1}
  </MsgText>
  <Explanation>
    The certificate is expired. 
  </Explanation>
  <UserResponse>
    Check keystore, and make sure certificate is not expired. 
  </UserResponse>
</Message>
<Message ID="CWWSS6650E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.BSTokenLoginModule.s01" varFormat="Java">
    security.wssecurity.BSTokenLoginModule.s01=CWWSS6650E: Failed to handle the callback handler and the reason is : [{0}]
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5007E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s09" varFormat="Java">
    security.wssecurity.ConfigUtil.s09=CWWSS5007E: The {0} class cannot be located.
  </MsgText>
  <Explanation>
    The system cannot locate the Java class that you specified in the class path. 
  </Explanation>
  <UserResponse>
    Verify that the class name is correct and exists in the appropriate class path. 
  </UserResponse>
</Message>
<Message ID="CWWSS5800E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s08" varFormat="Java">
    security.wssecurity.ConfigUtil.s08=CWWSS5800E: The KeyStoreRef attribute for the configured key store is not valid.
  </MsgText>
  <Explanation>
    The KeyStoreRef attribute name must be valid. 
  </Explanation>
  <UserResponse>
    Verify that the KeyStoreRef attribute exists in the binding and valid. 
  </UserResponse>
</Message>
<Message ID="CWWSS5004E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s06" varFormat="Java">
    security.wssecurity.ConfigUtil.s06=CWWSS5004E: The {0} key store cannot be loaded, due to {1}: {2}
  </MsgText>
  <Explanation>
    The default provider does not support the key store type, the algorithm that is used to verify the key store integrity does not exist, or certificates in the key store cannot be loaded. 
  </Explanation>
  <UserResponse>
    Use the iKeyman tool or keytool to create key store with the supported key store type. Refer to the information center for supported key store types. 
  </UserResponse>
</Message>
<Message ID="CWWSS5003E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s05" varFormat="Java">
    security.wssecurity.ConfigUtil.s05=CWWSS5003E: The {0} key store cannot be read because an IOException error occurred.
  </MsgText>
  <Explanation>
    The I/O error could be caused by format problem with the data in the key store, no password is specified when required, or incorrect password is specified. 
  </Explanation>
  <UserResponse>
    Verify that you specified the correct key store type and password in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS5002E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s04" varFormat="Java">
    security.wssecurity.ConfigUtil.s04=CWWSS5002E: The {0} key store cannot be opened because a FileNotFoundException error occurred.
  </MsgText>
  <Explanation>
    The key store path is incorrect, or the key store does not exist. 
  </Explanation>
  <UserResponse>
    Verify the path to the key store in the binding does exist on the machine. 
  </UserResponse>
</Message>
<Message ID="CWWSS5001E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfigUtil.s03" varFormat="Java">
    security.wssecurity.ConfigUtil.s03=CWWSS5001E: There was no password specified for the {0} key store.
  </MsgText>
  <Explanation>
    A password is required to load the Java key store. This password does not exist in the binding. 
  </Explanation>
  <UserResponse>
    Specify the key store password in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS7510E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7510E" varFormat="Java">
    security.wssecurity.CWWSS7510E=CWWSS7510E: Fail to acquire SAML assertion
  </MsgText>
  <Explanation>
    A SAML assertion cannot be issued. 
  </Explanation>
  <UserResponse>
    Ensure that the required assertion elements are specified. 
  </UserResponse>
</Message>
<Message ID="CWWSS0143W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0143W" varFormat="Java">
    security.wssecurity.WSEC0143W=CWWSS0143W: The Application Server cannot parse the {0} value for the timestamp clock skew. The default value of {1} seconds was used instead.
  </MsgText>
  <Explanation>
    The format of the value for the timestamp clock skew is not an integer. 
  </Explanation>
  <UserResponse>
    Change the value for the timestamp clock skew to an integer. The timestamp clock skew value is specified by the custom property com.ibm.wsspi.wssecurity.core.TimestampClockSkew in the WS-Security bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS7546E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7546E" varFormat="Java">
    security.wssecurity.CWWSS7546E=CWWSS7546E: A token exchange with the security token service is required. No token was received.  
  </MsgText>
  <Explanation>
    A returned token is expected when a token validation request is made to the security token service. 
  </Explanation>
  <UserResponse>
    The security token service must be configured to return a token when it handles a token validation request. 
  </UserResponse>
</Message>
<Message ID="CWWSS8009E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8009E" varFormat="Java">
    security.wssecurity.CWWSS8009E=CWWSS8009E: The IssueInstant attribute of the SAML response is required.  
  </MsgText>
  <Explanation>
    The IssueInstant attribute of the SAML response is required. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits the IssueInstant attribute. 
  </UserResponse>
</Message>
<Message ID="CWWSS6804E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6804E" varFormat="Java">
    security.wssecurity.WSEC6804E=CWWSS6804E: The {0} identifier type is unknown.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7349W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SecureConversationImpl.s02" varFormat="Java">
    security.wssecurity.SecureConversationImpl.s02=CWWSS7349W: RM Sequence inactivity timeout interval is greater than the SCT lifetime. SCT lifetime should be equal or greater than the RM Sequence inactivity timeout.
  </MsgText>
  <Explanation>
    SCT lifetime is less than the RM sequence timeout. Message would not be able to be recovered as SCT will have expired before the RM sequence timeout time. It is recommended that SCT lifetime is equal or greater than the RM sequence timeout. 
  </Explanation>
  <UserResponse>
    Adjust RM and/or SCT timeouts so SCT lifetime is equal or greater than the RM inactivity timeout. 
  </UserResponse>
</Message>
<Message ID="CWWSS7044E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SecureConversationImpl.s01" varFormat="Java">
    security.wssecurity.SecureConversationImpl.s01=CWWSS7044E: No SCT found in the client side cache with uuid [{0}].
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS0142W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0142W" varFormat="Java">
    security.wssecurity.WSEC0142W=CWWSS0142W: The value of {0} seconds for the timestamp clock skew is not within the valid range of a minimum of {1} seconds and a maximum of {2} seconds. The minimum value of {3} seconds was used instead.
  </MsgText>
  <Explanation>
    The specified value for the timestamp clock skew is not within the valid range. 
  </Explanation>
  <UserResponse>
    Change the value for the timestamp clock skew to one within the valid range. The timestamp clock skew value is specified by the custom property com.ibm.wsspi.wssecurity.core.TimestampClockSkew in the WS-Security bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS7545E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7545E" varFormat="Java">
    security.wssecurity.CWWSS7545E=CWWSS7545E: A token consumer configuration was not found for the received token type.  
  </MsgText>
  <Explanation>
    There was no token consumer configured for the token type received. 
  </Explanation>
  <UserResponse>
    Configure a token consumer for the received token type so it can be processed. 
  </UserResponse>
</Message>
<Message ID="CWWSS8008E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8008E" varFormat="Java">
    security.wssecurity.CWWSS8008E=CWWSS8008E: The time of the response is a future time.  
  </MsgText>
  <Explanation>
    The time of the response must be a current time. 
  </Explanation>
  <UserResponse>
    Synchronize the system clocks between your SAML identity provider and WebSphere Application Server service provider. Ensure the time of the response is not in the future. 
  </UserResponse>
</Message>
<Message ID="CWWSS6803E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6803E" varFormat="Java">
    security.wssecurity.WSEC6803E=CWWSS6803E: The 0x{0} is not a BIT STRING.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7237E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.config.s09" varFormat="Java">
    security.wssecurity.config.s09=CWWSS7237E: The Application Server was unable to configure the security token service (STS).
  </MsgText>
  <Explanation>
    A problem was encountered when attempting to configure the STS. 
  </Explanation>
  <UserResponse>
    Verify that the STS configuration files have not been corrupted or removed. 
  </UserResponse>
</Message>
<Message ID="CWWSS7236E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.config.s08" varFormat="Java">
    security.wssecurity.config.s08=CWWSS7236E: The {0} configuration file contains invalid settings.
  </MsgText>
  <Explanation>
    The Application Server encountered not valid settings while loading the configuration file. 
  </Explanation>
  <UserResponse>
    Verify that the configuration files contain valid settings. 
  </UserResponse>
</Message>
<Message ID="CWWSS6907E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.config.s07" varFormat="Java">
    security.wssecurity.config.s07=CWWSS6907E: The Application Server failed to obtain the instance of the security token service.
  </MsgText>
  <Explanation>
    This instance of the security token service is required for normal operation. 
  </Explanation>
  <UserResponse>
    Verify that the instance of the security token service exists. 
  </UserResponse>
</Message>
<Message ID="CWWSS6906W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.config.s06" varFormat="Java">
    security.wssecurity.config.s06=CWWSS6906W: The Application Server cannot create the Uniform Resource Identifier (URI) for wildcard mapping.
  </MsgText>
  <Explanation>
    There is a syntax problem for the URI specifying the wildcard mapping. 
  </Explanation>
  <UserResponse>
    Verify that the installation image has not been corrupted. 
  </UserResponse>
</Message>
<Message ID="CWWSS0141W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0141W" varFormat="Java">
    security.wssecurity.WSEC0141W=CWWSS0141W: The value of {0} seconds for the timestamp max age is not within the valid range of a minimum of {1} seconds and a maximum of {2} seconds. The minimum value of {3} seconds was used instead.
  </MsgText>
  <Explanation>
    The specified value for the timestamp max age is not within the valid range. 
  </Explanation>
  <UserResponse>
    Change the value for the timestamp max age to one within the valid range. The timestamp max age value is specified by the custom property com.ibm.wsspi.wssecurity.core.TimestampMaxAge in the WS-Security bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS7544E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7544E" varFormat="Java">
    security.wssecurity.CWWSS7544E=CWWSS7544E: The [{0}] token type is not supported and cannot be parsed. 
  </MsgText>
  <Explanation>
    The received token is not supported. 
  </Explanation>
  <UserResponse>
    The token provider must be configured to send only supported token types. See the Information Center for list of supported token types. 
  </UserResponse>
</Message>
<Message ID="CWWSS6905W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.config.s05" varFormat="Java">
    security.wssecurity.config.s05=CWWSS6905W: The Application Server cannot create a mapping for the default token type.
  </MsgText>
  <Explanation>
    This issue causes errors for messages that are targeted for an unconfigured endpoint. 
  </Explanation>
  <UserResponse>
    Verify that the configuration file for the security token service targets specifies a default token type. 
  </UserResponse>
</Message>
<Message ID="CWWSS6904E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.config.s04" varFormat="Java">
    security.wssecurity.config.s04=CWWSS6904E: The Application Server cannot create Uniform Resource Identifiers (URI) for the security context token (SCT) type, the SCT get request type, or the SCT put request type.
  </MsgText>
  <Explanation>
    There is a syntax problem for the URIs specifying the SCT token type, the SCT get request, or the SCT put request type. 
  </Explanation>
  <UserResponse>
    Verify that the installation image has not been corrupted. 
  </UserResponse>
</Message>
<Message ID="CWWSS6903E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.config.s03" varFormat="Java">
    security.wssecurity.config.s03=CWWSS6903E: The Application Server cannot load the targets configuration file for the security token service.
  </MsgText>
  <Explanation>
    The targets configuration file for the security token service is needed for normal operation. 
  </Explanation>
  <UserResponse>
    Verify that the file has not been moved or become corrupted. 
  </UserResponse>
</Message>
<Message ID="CWWSS6902E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.config.s02" varFormat="Java">
    security.wssecurity.config.s02=CWWSS6902E: The Application Server cannot load the plugins configuration file for the security token service.
  </MsgText>
  <Explanation>
    The plugins configuration file for the security token service is needed for normal operation. 
  </Explanation>
  <UserResponse>
    Verify that the file has not been moved or become corrupted. 
  </UserResponse>
</Message>
<Message ID="CWWSS6901E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.config.s01" varFormat="Java">
    security.wssecurity.config.s01=CWWSS6901E: The Application Server cannot load the configuration file for the security token service.
  </MsgText>
  <Explanation>
    The configuration file for the security token service is needed for normal operation. 
  </Explanation>
  <UserResponse>
    Verify that the file has not been moved or become corrupted. 
  </UserResponse>
</Message>
<Message ID="CWWSS8007E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8007E" varFormat="Java">
    security.wssecurity.CWWSS8007E=CWWSS8007E: The version of this response must be 2.0.  
  </MsgText>
  <Explanation>
    The identifier for the version of SAML defined in this specification is 2.0. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits the correct version number. 
  </UserResponse>
</Message>
<Message ID="CWWSS6802E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6802E" varFormat="Java">
    security.wssecurity.WSEC6802E=CWWSS6802E: The {0} causes integer overflow.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6838E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6838E" varFormat="Java">
    security.wssecurity.WSEC6838E=CWWSS6838E: All caller login failed. The last exception is {0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7121W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SecureConversationCacheConfigImpl.s01" varFormat="Java">
    security.wssecurity.SecureConversationCacheConfigImpl.s01=CWWSS7121W: Failed to load WS-SecureConversation client cache configuration. Using default values.
  </MsgText>
  <Explanation>
    WS-SecureConversation client cache configuration file, WSSCCache.xml, could not be loaded by using JAXB. 
  </Explanation>
  <UserResponse>
    Verify the WSSCCache.xml is in Cell name directory. If WSSCCache.xml existed and problem still persists, contact your service representative. 
  </UserResponse>
</Message>
<Message ID="CWWSS5642E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TimestampGenerator.s03" varFormat="Java">
    security.wssecurity.TimestampGenerator.s03=CWWSS5642E: A Timestamp was specified to be added to a Timestamp. That is not allowed.
  </MsgText>
  <Explanation>
    A Timestamp cannot be added to a Timestamp. 
  </Explanation>
  <UserResponse>
    Modify the policy to only add a Timestamp to message parts that are not a Timestamp. Multiple signed parts can be specified to achieve this. 
  </UserResponse>
</Message>
<Message ID="CWWSS5641E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TimestampGenerator.s02" varFormat="Java">
    security.wssecurity.TimestampGenerator.s02=CWWSS5641E: More than one Timestamp element was found. Cannot move the Timestamp.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5640E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TimestampGenerator.s01" varFormat="Java">
    security.wssecurity.TimestampGenerator.s01=CWWSS5640E: A Timestamp header could not be added to the message when processing security for a Web service because a Timestamp header already existed.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7282E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s42" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s42=CWWSS7282E: Token Consumer token type [{0}] does not match encryption token type defined in the policy.
  </MsgText>
  <Explanation>
    The Token Consumer token type in the bindings file must match the encryption token type in the policy file. 
  </Explanation>
  <UserResponse>
    Correct the policy or binding file and regenerate the file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7281E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s41" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s41=CWWSS7281E: Token Consumer token type [{0}] does not match signature token type defined in the policy.
  </MsgText>
  <Explanation>
    The Token Consumer token type in the bindings file must match the signature token type in the policy file. 
  </Explanation>
  <UserResponse>
    Correct the policy or binding file and regenerate the file. 
  </UserResponse>
</Message>
<Message ID="CWWSS0140W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0140W" varFormat="Java">
    security.wssecurity.WSEC0140W=CWWSS0140W: The Application Server cannot parse the {0} value for the timestamp max age. The default value of {1} seconds was used instead.
  </MsgText>
  <Explanation>
    The format for the value of the timestamp max age is not an integer. 
  </Explanation>
  <UserResponse>
    Change the value for the timestamp max age to an integer. The timestamp max age value is specified by the custom property com.ibm.wsspi.wssecurity.core.TimestampMaxAge in the WS-Security bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS7543E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7543E" varFormat="Java">
    security.wssecurity.CWWSS7543E=CWWSS7543E: The [{0}] SAML confirmation method is not supported. 
  </MsgText>
  <Explanation>
    The SAML token specifies a confirmation method that is not supported. 
  </Explanation>
  <UserResponse>
    The SAML token provider must be configured to not send SAML tokens with the unsupported confirmation method. 
  </UserResponse>
</Message>
<Message ID="CWWSS7039E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTGenerateLoginModule.getConfigurationContext" varFormat="Java">
    security.wssecurity.SCTGenerateLoginModule.getConfigurationContext=CWWSS7039E: Unable to get ConfigurationContext.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6540E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TokenManager.subjectIsNull" varFormat="Java">
    security.wssecurity.TokenManager.subjectIsNull=CWWSS6540E: A subject in the context is null.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8006E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8006E" varFormat="Java">
    security.wssecurity.CWWSS8006E=CWWSS8006E: InResponseTo must not be present for IdP-Initiated unsolicited responses.  
  </MsgText>
  <Explanation>
    InResponseTo is not allowed for IdP-Initiated unsolicited responses. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure its response is generated properly. 
  </UserResponse>
</Message>
<Message ID="CWWSS6801E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6801E" varFormat="Java">
    security.wssecurity.WSEC6801E=CWWSS6801E: The {0} encoded key is unknown.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7203E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTGenerateLoginModule.DKG" varFormat="Java">
    security.wssecurity.SCTGenerateLoginModule.DKG=CWWSS7203E: Derived Key generation fails with an exception: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6837E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6837E" varFormat="Java">
    security.wssecurity.WSEC6837E=CWWSS6837E: The caller login failed. The exception is {0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5386E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s36" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s36=CWWSS5386E: Missing a MessagePart that needs to be signed and/or encrypted.
  </MsgText>
  <Explanation>
    If there is one or more Nonce or timestamp that need to be signed, there needs to be a MessagePart that needs to be signed/encrypted as well. 
  </Explanation>
  <UserResponse>
    Verify the policy if there is one or more Nonce or timestamp that need to be signed, there needs to be a MessagePart that needs to be signed/encrypted as well. 
  </UserResponse>
</Message>
<Message ID="CWWSS5382E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s32" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s32=CWWSS5382E: The trustanchor cannot be Null.
  </MsgText>
  <Explanation>
    trustanchor is not available. 
  </Explanation>
  <UserResponse>
    Verify that trustanchor information is provided in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS5381E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s31" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s31=CWWSS5381E: Unable to resolve the expected reference: {0}.
  </MsgText>
  <Explanation>
    The expected reference is not available. 
  </Explanation>
  <UserResponse>
    Turn on trace to collect more debug information. Refer to the information center to collect trace data. 
  </UserResponse>
</Message>
<Message ID="CWWSS5380E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s30" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s30=CWWSS5380E: Expecting TokenConsumer with QName: {1} received Unmatched QName: {0}.
  </MsgText>
  <Explanation>
    Not valid or Unexpected QName for the TokenConsumer. 
  </Explanation>
  <UserResponse>
    Verify that valid QName for the TokenConsumer is provided. 
  </UserResponse>
</Message>
<Message ID="CWWSS7542E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7542E" varFormat="Java">
    security.wssecurity.CWWSS7542E=CWWSS7542E: The [{0}] SAML issuer name or [{1}] signer SubjectDN of the certificate are not trusted.
  </MsgText>
  <Explanation>
    Neither the SAML issuer name nor the SubjectDN of the signer certificate are defined in the trusted issuer list in the bindings.  Trusted issuers are defined with the [trustedIssuer_n] SAML callback handler custom property.  Trusted SubjectDNs are configured with the [trustedSubjectDN_n] SAML callback handler custom property. 
  </Explanation>
  <UserResponse>
    Check your bindings to make sure the SAML issuer name or the SubjectDN of the signer certificate is trusted. 
  </UserResponse>
</Message>
<Message ID="CWWSS8005E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8005E" varFormat="Java">
    security.wssecurity.CWWSS8005E=CWWSS8005E: The Issuer format must be omitted or have a value of urn:oasis:names:tc:SAML:2.0:nameid-format:entity.  
  </MsgText>
  <Explanation>
    The Issuer format must be omitted or have a value of urn:oasis:names:tc:SAML:2.0:nameid-format:entity. 
  </Explanation>
  <UserResponse>
    Check with you SAML identity provider and ensure it emits Issuer format properly. 
  </UserResponse>
</Message>
<Message ID="CWWSS0007W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.load.server.wssecurity.xml" varFormat="Java">
    security.wssecurity.load.server.wssecurity.xml=CWWSS0007W: The binding loader cannot load {0} from the repository.  The file is a server-level configuration file for Web services security.
  </MsgText>
  <Explanation>
    The system cannot load the server-level ws-security.xml configuration file.  The file might be corrupted, missing, or in the wrong location. 
  </Explanation>
  <UserResponse>
    Verify that the configuration file exists.  If the file is missing, copy the ws-security.xml file from the ${USER_INSTALL_ROOT}/config/templates directory. 
  </UserResponse>
</Message>
<Message ID="CWWSS6800E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6800E" varFormat="Java">
    security.wssecurity.WSEC6800E=CWWSS6800E: The entry with alias {0} of keystore {1} cannot be found: {2}
  </MsgText>
  <Explanation>
    The specified key alias is not in keystore. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6836E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6836E" varFormat="Java">
    security.wssecurity.WSEC6836E=CWWSS6836E: The certificate of initial sender is not in message.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5376E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s27" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s27=CWWSS5376E: The Application Server cannot find an XPath expression for the XPath transform.
  </MsgText>
  <Explanation>
    An XPath transform was specified in the signing information but an XPath expression was not provided. 
  </Explanation>
  <UserResponse>
    Verify that the application bindings do provide an XPath expression in the signing information. 
  </UserResponse>
</Message>
<Message ID="CWWSS5375E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s26" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s26=CWWSS5375E: The key information configuration has a null type. The current key information configuration string representation is {0}.
  </MsgText>
  <Explanation>
    A key information configuration must have a type. A probable reason could be that there is an error in the key bindings. 
  </Explanation>
  <UserResponse>
    Verify that the key bindings information in the application security bindings are correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS5374E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s25" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s25=CWWSS5374E: The key information configuration has a null class instance. The current key information configuration string representation is {0}.
  </MsgText>
  <Explanation>
    A key information configuration must have a class instance. A probable reason could be that there is an error in the key bindings. 
  </Explanation>
  <UserResponse>
    Verify that the key bindings configuration is correct for the application security bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS5373E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s24" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s24=CWWSS5373E: The key consumer configuration has a null content consumer list. The current key consumer configuration string representation is {0}.
  </MsgText>
  <Explanation>
    A key consumer configuration must have a content consumer list. A probable reason could be that there is an error in the key bindings configuration. 
  </Explanation>
  <UserResponse>
    Verify that the key bindings configuration is correct for the application security bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS5372E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s23" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s23=CWWSS5372E: The token consumer configuration has a null type. The current token consumer configuration string representation is {0}.
  </MsgText>
  <Explanation>
    A token consumer configuration must have a type. A probable reason could be that there is an error in the security bindings relating to security tokens. 
  </Explanation>
  <UserResponse>
    Verify that the token consumer binding information in the application security bindings is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS5371E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s22" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s22=CWWSS5371E: The token consumer/generator configuration has a null class instance. The current token consumer/generator configuration string representation is {0}.
  </MsgText>
  <Explanation>
    A token consumer configuration must have a class instance. A probable reason could be that there is an error in the security bindings relating to security tokens. 
  </Explanation>
  <UserResponse>
    Verify that the token/consumer generator binding information in the application security bindings are correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS5370E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s21" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s21=CWWSS5370E: No reference to any message parts can be be found on the encryption generator/consumer configuration.  The current configuration for this encryption consumer/generator is: {0}
  </MsgText>
  <Explanation>
    Reference to message parts are required in order to retrieve the encryption algorithms from the policy. In this case there are none. 
  </Explanation>
  <UserResponse>
    Verify that there are message parts to be encrypted in the application security bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS5369E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s20" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s20=CWWSS5369E: Configuration information about the encryption consumer key is missing. The current configuration for this encryption consumer is: {0}.
  </MsgText>
  <Explanation>
    There is no configuration found for the encryption consumer key. There might be key bindings information missing in the application security bindings. 
  </Explanation>
  <UserResponse>
    Verify that the key bindings for the encryption consumer in the application security bindings are correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS7541E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7541E" varFormat="Java">
    security.wssecurity.CWWSS7541E=CWWSS7541E: The SAML AudienceRestriction validation failed.
  </MsgText>
  <Explanation>
    The SAML token contains an AudienceRestriction assertion that cannot be verified. 
  </Explanation>
  <UserResponse>
    Do not configure the AudienceRestriction assertion in the SAML token provider, or set the validateAudienceRestriction binding option to false. 
  </UserResponse>
</Message>
<Message ID="CWWSS8004E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8004E" varFormat="Java">
    security.wssecurity.CWWSS8004E=CWWSS8004E: An identifier for the response is required.  
  </MsgText>
  <Explanation>
    The SAML Response must contain an identifier. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits an identifier. 
  </UserResponse>
</Message>
<Message ID="CWWSS7345E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s33" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s33=CWWSS7345E: Can not find default bindings for creating configuration. The original error that prevented default bindings creation was [{0}].
  </MsgText>
  <Explanation>
    An attempt to use default bindings failed. Default bindings creation failed earlier. 
  </Explanation>
  <UserResponse>
    Inspect original error that prevented default bindings creation and take appropriate action. 
  </UserResponse>
</Message>
<Message ID="CWWSS7344E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s32" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s32=CWWSS7344E: Can not fill missing supporting token bindings, as no default bindings were found. The original error that prevented default bindings creation was [{0}].
  </MsgText>
  <Explanation>
    An attempt to fill missing supporting token information in custom bindings by loading missing information from default bindings failed. Default bindings creation failed earlier. 
  </Explanation>
  <UserResponse>
    Inspect original error that prevented default bindings creation and take appropriate action. 
  </UserResponse>
</Message>
<Message ID="CWWSS7343E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s31" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s31=CWWSS7343E: Can not fill missing signature bindings, as no default bindings were found. The original error that prevented default bindings creation was [{0}].
  </MsgText>
  <Explanation>
    An attempt to fill missing signature information in custom bindings by loading missing information from default bindings failed. Default bindings creation failed earlier. 
  </Explanation>
  <UserResponse>
    Inspect original error that prevented default bindings creation and take appropriate action. 
  </UserResponse>
</Message>
<Message ID="CWWSS7342E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s30" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s30=CWWSS7342E: Can not fill missing encryption bindings, as no default bindings were found. The original error that prevented default bindings loading was [{0}].
  </MsgText>
  <Explanation>
    An attempt to fill missing encryption information missing in custom bindings by loading missing information from default bindings failed. Default bindings loading failed earlier. 
  </Explanation>
  <UserResponse>
    Inspect original error that prevented default bindings loading and take appropriate action. 
  </UserResponse>
</Message>
<Message ID="CWWSS5368E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s19" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s19=CWWSS5368E: A data encryption method is required in the configuration, but none was found. The current configuration for this encryption consumer is: {0}.
  </MsgText>
  <Explanation>
    There was no data encryption method found in the configuration. The Algorithm Suite assertion in the policy might not be valid. 
  </Explanation>
  <UserResponse>
    Verify that a valid Algorithm Suite is specified in the application security policy. 
  </UserResponse>
</Message>
<Message ID="CWWSS5367E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s18" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s18=CWWSS5367E: No reference to any message parts can be found on the signing generator/consumer configuration. The current configuration for this signature consumer/generator is: {0}
  </MsgText>
  <Explanation>
    Reference to message parts are required in order to retrieve the signature algorithms from Policy. This could be an error in the bindings. 
  </Explanation>
  <UserResponse>
    Verify that there are message parts to be signed on the application security bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS5366E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s17" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s17=CWWSS5366E: Configuration information about the signing key is missing. The current configuration for this signature consumer is: {0}.
  </MsgText>
  <Explanation>
    There is no configuration found for the signing key. There might be key bindings information missing in the application security bindings. 
  </Explanation>
  <UserResponse>
    Verify that the key bindings configuration for signing key on the application security bindings are correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS5365E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s16" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s16=CWWSS5365E: The Caller identity for the Caller configuration is null. The caller configuration is: {0}
  </MsgText>
  <Explanation>
    The Caller configuration must have a JAAS configuration or a Caller identity. One of the two must be present. This might be a problem with the application security bindings. 
  </Explanation>
  <UserResponse>
    Verify that the application security bindings are correct for Caller configuration. 
  </UserResponse>
</Message>
<Message ID="CWWSS5364E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s15" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s15=CWWSS5364E: The {0} key encryption method is not valid.
  </MsgText>
  <Explanation>
    An unsupported key encryption method was specified. Possible causes are that the application security policy has specified a not valid Algorithm Suite assertion, or that the client and server have incompatible Algorithm Suite assertions in their policies. 
  </Explanation>
  <UserResponse>
    Check the security policy for both server and client applications and ensure that the Algorithm Suite assertions are valid and compatible. 
  </UserResponse>
</Message>
<Message ID="CWWSS7036E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSContextManagerImpl.s02" varFormat="Java">
    security.wssecurity.WSSContextManagerImpl.s02=CWWSS7036E: [{0}] :: is not supported on Websphere Server.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5363E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s14" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s14=CWWSS5363E: The {0} data encryption method is not valid.
  </MsgText>
  <Explanation>
    An unsupported encryption method was specified. Possible causes are that the application security policy has specified a not valid Algorithm Suite assertion, or that the client and server have incompatible Algorithm Suite assertions in their policies. 
  </Explanation>
  <UserResponse>
    Check the security policy for both server and client applications and ensure that the Algorithm Suite assertions are valid and compatible. 
  </UserResponse>
</Message>
<Message ID="CWWSS7035E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSContextManagerImpl.s01" varFormat="Java">
    security.wssecurity.WSSContextManagerImpl.s01=CWWSS7035E: [{0}] :: is not supported on Thinclient environment.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5362E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s13" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s13=CWWSS5362E: The key information content consumer type is unknown. The current configuration of the key information content consumer is {0}.
  </MsgText>
  <Explanation>
    The key information content consumer type is unknown. A probable reason could be that there is an error in the key bindings. 
  </Explanation>
  <UserResponse>
    Verify that key bindings for the application security bindings are correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS5361E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s12" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s12=CWWSS5361E: The {0} transform is not valid.
  </MsgText>
  <Explanation>
    An unsupported transform method was specified. Possible causes are that the application security policy has specified a not valid Algorithm Suite assertion, or that the client and server have incompatible Algorithm Suite assertions in their policies. 
  </Explanation>
  <UserResponse>
    Check the security policy for both server and client applications and ensure that the Algorithm Suite assertions are valid and compatible. 
  </UserResponse>
</Message>
<Message ID="CWWSS5360E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s11" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s11=CWWSS5360E: The {0} digest method is not valid.
  </MsgText>
  <Explanation>
    An unsupported digest method was specified. Possible causes are that the application security policy has specified a not valid Algorithm Suite assertion, or that the client and server have incompatible Algorithm Suite assertions in their policies. 
  </Explanation>
  <UserResponse>
    Check the security policy for both server and client applications and ensure that the Algorithm Suite assertions are valid and compatible. 
  </UserResponse>
</Message>
<Message ID="CWWSS7540E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7540E" varFormat="Java">
    security.wssecurity.CWWSS7540E=CWWSS7540E: The OneTimeUse or DoNotCacheCondition assertions are not supported.
  </MsgText>
  <Explanation>
    The SAML token contains OneTimeUse or DoNotCacheCondition assertions; however, these assertions are not supported. 
  </Explanation>
  <UserResponse>
    The SAML token provider must be configured to not include the OneTimeUse or the DoNotCacheCondition assertions, or set the validateOneTimeUse binding option to false. 
  </UserResponse>
</Message>
<Message ID="CWWSS7223E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSTrustCallbackHandler.renewSCT" varFormat="Java">
    security.wssecurity.WSTrustCallbackHandler.renewSCT=CWWSS7223E: Renew of security context token fails with an exception : {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8003E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8003E" varFormat="Java">
    security.wssecurity.CWWSS8003E=CWWSS8003E: The SAML Response must contain a valid &lt;Assertion&gt;.  
  </MsgText>
  <Explanation>
    The SAML Response must contain a valid &lt;Assertion&gt;. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits a valid &lt;Assertion&gt;. 
  </UserResponse>
</Message>
<Message ID="CWWSS8039E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8039E" varFormat="Java">
    security.wssecurity.CWWSS8039E=CWWSS8039E: No realm was defined in the SAML attributes.
  </MsgText>
  <Explanation>
    A realm is required but was not found in the SAML attributes. 
  </Explanation>
  <UserResponse>
    Define a SAML Attribute as realm in TAI. 
  </UserResponse>
</Message>
<Message ID="CWWSS7333E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s29" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s29=CWWSS7333E: Found more than one supporting UsernameToken of type [{0}], used as trusted identity, in a policy paired with default bindings.
  </MsgText>
  <Explanation>
    Only two UsernameTokens, one configured as trusted identity and the other as a caller identity are allowed when using default bindings. 
  </Explanation>
  <UserResponse>
    Regenerate policy to use 2 UsernameTokens as caller identity and trusted identity. 
  </UserResponse>
</Message>
<Message ID="CWWSS6834E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6834E" varFormat="Java">
    security.wssecurity.WSEC6834E=CWWSS6834E: The Java Authentication and Authorization Service (JAAS) login configuration name is not defined in the configuration: {0}.
  </MsgText>
  <Explanation>
    JAAS login configuration name is not defined. 
  </Explanation>
  <UserResponse>
    Check binding file and security.xml file for JAAS login name. 
  </UserResponse>
</Message>
<Message ID="CWWSS7332E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s28" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s28=CWWSS7332E: Found more than one supporting UsernameToken of type [{0}], used as caller identity, in a policy paired with default bindings.
  </MsgText>
  <Explanation>
    Only two UsernameTokens, one configured as trusted identity and the other as a caller identity are allowed when using default bindings. 
  </Explanation>
  <UserResponse>
    Regenerate policy to use 2 UsernameTokens as caller identity and trusted identity. 
  </UserResponse>
</Message>
<Message ID="CWWSS7330E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s27" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s27=CWWSS7330E: Can not locate signature bindings for the required integrity with reference name {0}.
  </MsgText>
  <Explanation>
    After looking at bindings, no signature bindings were found for the integral part with the specified reference name in the policy. 
  </Explanation>
  <UserResponse>
    Regenerate bindings so this integral part specified in the policy has a correctly defined signature binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS7329E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s26" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s26=CWWSS7329E: Can not locate encryption bindings for the confidential part with reference name {0}.
  </MsgText>
  <Explanation>
    After looking at bindings, no encryption bindings were found for the confidential part with the specified reference name in the policy. 
  </Explanation>
  <UserResponse>
    Regenerate bindings so this confidential part specified in the policy has a correctly defined encryption binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS7324E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s25" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s25=CWWSS7324E: Found more than one supporting token of type [{0}] in policy using default bindings. This is not allowed.
  </MsgText>
  <Explanation>
    In default bindings, we allow only a single supporting token of this type in the policy. 
  </Explanation>
  <UserResponse>
    Regenerate the policy so only one supporting token of this type is in the policy. 
  </UserResponse>
</Message>
<Message ID="CWWSS7305E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s24" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s24=CWWSS7305E: More than 2 UsernameToken assertions of type[{0}] were found in the policy when using default bindings.
  </MsgText>
  <Explanation>
    A maximum of 2 UsernameTokens of the same type are allowed in the policy when using default bindings. The maximum of 2 is only allowed when setting up one UsernameToken as a trustedId, and another one as a callerId. 
  </Explanation>
  <UserResponse>
    Correct the policy so a maximum of 2 SupportingToken UsernameToken assertions of the same type are found in the policy. 
  </UserResponse>
</Message>
<Message ID="CWWSS7286W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s23" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s23=CWWSS7286W: Cannot sign SignatureConfirmation element because nothing else on the message is signed.
  </MsgText>
  <Explanation>
    The policy file specifies no parts to be signed. The SignatureConfirmation element will not be signed. 
  </Explanation>
  <UserResponse>
    Correct the policy file and regenerate the file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7285W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s22" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s22=CWWSS7285W: Cannot encrypt SignatureConfirmation element because nothing else on the message is encrypted.
  </MsgText>
  <Explanation>
    The policy file specifies no parts to be encrypted. The SignatureConfirmation element will not be encrypted. 
  </Explanation>
  <UserResponse>
    Correct the policy file and regenerate the file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7278E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s21" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s21=CWWSS7278E: Token with type [{0}] was already defined.
  </MsgText>
  <Explanation>
    The policy file contains more than one token with the same type. Duplicate tokens are not allowed. 
  </Explanation>
  <UserResponse>
    Correct the policy file and regenerate the file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7277E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s20" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s20=CWWSS7277E: The token consumer with type [{0}] must define a JAAS configuration.
  </MsgText>
  <Explanation>
    The token consumer did not define a JAAS configuration. 
  </Explanation>
  <UserResponse>
    Define a JAAS configuration for the token consumer in the binding file and regenerate the file. 
  </UserResponse>
</Message>
<Message ID="CWWSS5700E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TimestampDialectElementSelector.s01" varFormat="Java">
    security.wssecurity.TimestampDialectElementSelector.s01=CWWSS5700E: There is no wsu:Timestamp to be moved.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5358E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s09" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s09=CWWSS5358E: The {0} signature method is not valid.
  </MsgText>
  <Explanation>
    An unsupported signature method was specified. Possible causes are that the application security policy has specified a not valid Algorithm Suite assertion, or that the client and server have incompatible Algorithm Suite assertions in their policies. 
  </Explanation>
  <UserResponse>
    Check the security policy for both server and client applications and ensure that the Algorithm Suite assertions are valid and compatible. 
  </UserResponse>
</Message>
<Message ID="CWWSS5357E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s08" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s08=CWWSS5357E: The {0} canonicalization method is not valid.
  </MsgText>
  <Explanation>
    An unsupported canonicalization method was specified. Possible causes are that the application security policy has specified a not valid Algorithm Suite assertion, or that the client and server have incompatible Algorithm Suite assertions in their policies. 
  </Explanation>
  <UserResponse>
    Check the security policy for both server and client applications and ensure that the Algorithm Suite assertions are valid and compatible. 
  </UserResponse>
</Message>
<Message ID="CWWSS6833W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6833W" varFormat="Java">
    security.wssecurity.WSEC6833W=CWWSS6833W: Unknown element {0} in the {1} element.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5354E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s05" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s05=CWWSS5354E: The {0} dialect value is unknown. This dialect value exists in the following configuration string: {1}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5353E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s04" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s04=CWWSS5353E: Null is not allowed for the XPath expression in the {0} assertion.
  </MsgText>
  <Explanation>
    No XPath expression was specified on an XPath element in the specified assertion in the policy. 
  </Explanation>
  <UserResponse>
    Verify that all XPath elements in the specified assertion in the policy contain valid XPath expressions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7211E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTConsumeLoginModule.missingDKT" varFormat="Java">
    security.wssecurity.SCTConsumeLoginModule.missingDKT=CWWSS7211E: Cannot find derived key token with id [{0}] in the subject
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5352E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s03" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s03=CWWSS5352E: The {0} keyword is used, but it is unknown. The keyword is used in the following expression: {1}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5350E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PrivateConsumerConfig.s01" varFormat="Java">
    security.wssecurity.PrivateConsumerConfig.s01=CWWSS5350E: The following configuration is not valid: {0}
  </MsgText>
  <Explanation>
    The security configuration for this service is not valid. 
  </Explanation>
  <UserResponse>
    Check that the specified policy and bindings for this service are correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS5189W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5189W" varFormat="Java">
    security.wssecurity.WSEC5189W=CWWSS5189W: The certificate, which is owned by {0}, uses the {1} alias, and is located in the {2} keystore,expires in {3} days.
  </MsgText>
  <Explanation>
    A certificate is about to expire in the keystore. 
  </Explanation>
  <UserResponse>
    Open the keystore and validate the expiration dates for all of the certificates in the keystore. Generate new certificates, if necessary. 
  </UserResponse>
</Message>
<Message ID="CWWSS8002E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8002E" varFormat="Java">
    security.wssecurity.CWWSS8002E=CWWSS8002E: The StatusCode element with value of [{0}] is invalid.  
  </MsgText>
  <Explanation>
    A &quot;Success&quot; StatusCode value is required. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits the Success StatusCode element in the Status element in the corresponding SAML Response. 
  </UserResponse>
</Message>
<Message ID="CWWSS8038E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8038E" varFormat="Java">
    security.wssecurity.CWWSS8038E=CWWSS8038E: TAI custom property realmNameRange is required if TAI custom property realmName is configured.
  </MsgText>
  <Explanation>
    TAI custom property realmNameRange is required if TAI custom property realmName is configured. 
  </Explanation>
  <UserResponse>
    Add TAI custom property realmNameRange if TAI custom property realmName is configured. 
  </UserResponse>
</Message>
<Message ID="CWWSS7276E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s19" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s19=CWWSS7276E: The Value Type for the token consumer [{0}] is null.
  </MsgText>
  <Explanation>
    A null value is not allowed for the Value Type for the token consumer. 
  </Explanation>
  <UserResponse>
    Specify a valid Value Type and regenerate the binding file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7275E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s18" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s18=CWWSS7275E: The assertion [{0}] is not valid with already specified assertion [{1}].
  </MsgText>
  <Explanation>
    The two specified assertions are not valid together. Only one of them should be specified in the policy. 
  </Explanation>
  <UserResponse>
    Correct the policy file and regenerate the file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7274E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s17" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s17=CWWSS7274E: The token generator with type [{0}] must define a JAAS configuration.
  </MsgText>
  <Explanation>
    The token generator did not define a JAAS configuration. 
  </Explanation>
  <UserResponse>
    Define a JAAS configuration for the token generator in the binding file and regenerate the file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7273E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s16" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s16=CWWSS7273E: The security token with type [{0}] references a token generator with type [{1}].
  </MsgText>
  <Explanation>
    The token types need to match. 
  </Explanation>
  <UserResponse>
    Correct the token type in either the policy file or binding file and regenerate the file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7272E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s15" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s15=CWWSS7272E: The Value Type for the token generator [{0}] is null.
  </MsgText>
  <Explanation>
    A null value is not allowed for the Value Type for the token generator. 
  </Explanation>
  <UserResponse>
    Specify a valid Value Type and regenerate the binding file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7271E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s14" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s14=CWWSS7271E: The Trust13 policy assertion [{0}] is not valid or is not supported.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7270E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s13" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s13=CWWSS7270E: Protection Token assertion found when a Encryption Token assertion or Signature Token assertion was already defined.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7269E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s12" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s12=CWWSS7269E: Signature Token assertion found when a Protection Token assertion was already defined.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7268E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s11" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s11=CWWSS7268E: Encryption Token assertion found when a Protection Token assertion was already defined.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7267W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s10" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s10=CWWSS7267W: Duplicate XPath element in encryptedElements will be ignored: [{0}]
  </MsgText>
  <Explanation>
    The policy file contains multiple XPath elements in encryptedElements that are identical. The element will only be encrypted once. 
  </Explanation>
  <UserResponse>
    No user action is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS8037W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8037W" varFormat="Java">
    security.wssecurity.CWWSS8037W=CWWSS8037W: WebSphere Application Server Dynamic Cache is required for replay detection.
  </MsgText>
  <Explanation>
    WebSphere Application Server Dynamic Cache is configured to prevent replay detection, however Dynamic Cache could not be created. 
  </Explanation>
  <UserResponse>
    Verify that the WebSphere Application Server Dynamic Cache is enabled. 
  </UserResponse>
</Message>
<Message ID="CWWSS8001E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8001E" varFormat="Java">
    security.wssecurity.CWWSS8001E=CWWSS8001E: The response does not have a StatusCode element.  
  </MsgText>
  <Explanation>
    A StatusCode element is a required element that represents the status of the activity carried out in the response to the corresponding request. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits the StatusCode element in the Status element in the corresponding SAML Response. 
  </UserResponse>
</Message>
<Message ID="CWWSS7266W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s09" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s09=CWWSS7266W: Duplicate XPath element in signedElements will be ignored: [{0}]
  </MsgText>
  <Explanation>
    The policy file contains multiple XPath elements in signedElements that are identical. The element will only be signed once. 
  </Explanation>
  <UserResponse>
    No user action is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS6832E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6832E" varFormat="Java">
    security.wssecurity.WSEC6832E=CWWSS6832E: More than one wsse:Security elements to be processed.
  </MsgText>
  <Explanation>
    Only one wsse:Security element is allowed. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7256E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s08" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s08=CWWSS7256E: Policy assertion [{0}] is not allowed. More than one token reference assertion was specified for a token.
  </MsgText>
  <Explanation>
    Only one of the following token reference assertions may be specified for a token: RequireKeyIdentifierReference, RequireEmbeddedTokenReference, RequireIssuerSerialReference, RequireThumbprintReference. 
  </Explanation>
  <UserResponse>
    Regenerate the policy file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7252E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s07" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s07=CWWSS7252E: GSS Kerberos Version 5 AP-REQ token assertion found when Kerberos Version 5 AP-REQ was already defined.
  </MsgText>
  <Explanation>
    Two Kerberos version assertions have been defined in the policy. 
  </Explanation>
  <UserResponse>
    Remove one of the assertions from the policy and use only one Kerberos version. 
  </UserResponse>
</Message>
<Message ID="CWWSS7251E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s06" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s06=CWWSS7251E: Kerberos Version 5 AP-REQ token assertion found when GSS Kerberos Version 5 AP-REQ was already defined.
  </MsgText>
  <Explanation>
    Two Kerberos version assertions have been defined in the policy. 
  </Explanation>
  <UserResponse>
    Remove one of the assertions from the policy and use only one Kerberos version. 
  </UserResponse>
</Message>
<Message ID="CWWSS7250W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s05" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s05=CWWSS7250W: Unsupported assertion for Kerberos, [{0}], found.
  </MsgText>
  <Explanation>
    An unsupported assertion has been added to the Kerberos Token assertion. 
  </Explanation>
  <UserResponse>
    Remove the unsupported assertion from the Kerberos Token assertion. 
  </UserResponse>
</Message>
<Message ID="CWWSS7249E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s04" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s04=CWWSS7249E: Wss11 policy assertion [{0}] is not supported.
  </MsgText>
  <Explanation>
    The attached WS-PolicySet policy for web services security is not valid. 
  </Explanation>
  <UserResponse>
    Regenerate the policy file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7248E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s03" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s03=CWWSS7248E: Wss10 policy assertion [{0}] is not supported.
  </MsgText>
  <Explanation>
    The attached WS-PolicySet policy for web services security is not valid. 
  </Explanation>
  <UserResponse>
    Regenerate the policy file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7247E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s02" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s02=CWWSS7247E: Target namespace [{0}] is not supported for service policy.
  </MsgText>
  <Explanation>
    The attached WS-PolicySet policy for web services security is not valid. 
  </Explanation>
  <UserResponse>
    Regenerate the policy file. 
  </UserResponse>
</Message>
<Message ID="CWWSS7037W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInOutboundConfig.s01" varFormat="Java">
    security.wssecurity.PolicyInOutboundConfig.s01=CWWSS7037W: Token Assertion for token of type [{0}] not supported.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7064E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyStoreManager.noKeyStoreRefAndStorePath" varFormat="Java">
    security.wssecurity.KeyStoreManager.noKeyStoreRefAndStorePath=CWWSS7064E: Both KeyStore Reference and KeyStore Path are null.
  </MsgText>
  <Explanation>
    Incomplete keystore configuration was found, either KeyStore Reference or KeyStore Path must be specified, but not both at the same time. 
  </Explanation>
  <UserResponse>
    Check the keystore configuration in the binding and make sure either KeyStore Reference or KeyStore Path is specified. 
  </UserResponse>
</Message>
<Message ID="CWWSS6831W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6831W" varFormat="Java">
    security.wssecurity.WSEC6831W=CWWSS6831W: The {0} milliseconds token cushion is less than the minimum. The minimum token cushion {1} milliseconds is used.
  </MsgText>
  <Explanation>
    The token cushion is less than the minimum. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7526E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.rstc.action" varFormat="Java">
    security.wssecurity.trust.client.rstc.action=CWWSS7526E: The specified request security token action [{0}] must match the existing action [{1}] in the request security token collection.
  </MsgText>
  <Explanation>
    The request security token cannot be added to the collection because the token action does not match the action of the existing requests in the collection. 
  </Explanation>
  <UserResponse>
    Ensure that the request security token action matches the action of existing requests in the collection. 
  </UserResponse>
</Message>
<Message ID="CWWSS8000E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8000E" varFormat="Java">
    security.wssecurity.CWWSS8000E=CWWSS8000E: The response does not have a Status element.  
  </MsgText>
  <Explanation>
    The response Status element contains a code that represents the status of the corresponding SAML request. The Status element is a required element in a response. 
  </Explanation>
  <UserResponse>
    Check with your SAML identity provider, and ensure it emits the Status element in the SAML Response. 
  </UserResponse>
</Message>
<Message ID="CWWSS5494E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSFactorySOAPImpl.s04" varFormat="Java">
    security.wssecurity.WSSFactorySOAPImpl.s04=CWWSS5494E: Unexpected error during the instantiation of {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5493E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSFactorySOAPImpl.s03" varFormat="Java">
    security.wssecurity.WSSFactorySOAPImpl.s03=CWWSS5493E: Unable to obtain the classpath used for instantiation for {0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8036E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8036E" varFormat="Java">
    security.wssecurity.CWWSS8036E=CWWSS8036E: A SAML assertion with ID [{0}] has already been received and processed.
  </MsgText>
  <Explanation>
    A SAML assertion should not be replayed. The current request has a SAML assertion that has already been found in a previous request. 
  </Explanation>
  <UserResponse>
    Ensure the Identity Provider does not generate a SAML assertion with a duplicated ID or resend the same SAML assertion more than once. 
  </UserResponse>
</Message>
<Message ID="CWWSS5492E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSFactorySOAPImpl.s02" varFormat="Java">
    security.wssecurity.WSSFactorySOAPImpl.s02=CWWSS5492E: Unsupported type of WS-Security component: {0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5491E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSFactorySOAPImpl.s01" varFormat="Java">
    security.wssecurity.WSSFactorySOAPImpl.s01=CWWSS5491E: Unable to obtain the object type {0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7517E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.soapnamespace" varFormat="Java">
    security.wssecurity.trust.client.soapnamespace=CWWSS7517E: Invalid SOAP namespace [{0}].
  </MsgText>
  <Explanation>
    The SOAP namespace specified in the trust client request is not valid. 
  </Explanation>
  <UserResponse>
    Specify a SOAP namespace that is supported by the trust client. 
  </UserResponse>
</Message>
<Message ID="CWWSS5674E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.STRDereferenceTransformer.s05" varFormat="Java">
    security.wssecurity.STRDereferenceTransformer.s05=CWWSS5674E: The processing of the STR-Transform failed.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5673E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.STRDereferenceTransformer.s04" varFormat="Java">
    security.wssecurity.STRDereferenceTransformer.s04=CWWSS5673E: There was an unsupported type of URI: {0}, during the processing of the STR-Transform.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5672E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.STRDereferenceTransformer.s03" varFormat="Java">
    security.wssecurity.STRDereferenceTransformer.s03=CWWSS5672E: Null is not allowed for the ID resolver during the processing of the STR-Transform.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5187E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5187E" varFormat="Java">
    security.wssecurity.WSEC5187E=CWWSS5187E: The Application Server cannot instantiate the {0} class. The following exception occurred: {1}
  </MsgText>
  <Explanation>
    An internal class could not be instantiated. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5671E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.STRDereferenceTransformer.s02" varFormat="Java">
    security.wssecurity.STRDereferenceTransformer.s02=CWWSS5671E: There was an unknown canonicalization method: {0}, during the processing of the STR-Transform.
  </MsgText>
  <Explanation>
    The AlgorithmSuite specified in the client policy and the server policy might not be compatible. 
  </Explanation>
  <UserResponse>
    Verify that the AlgorithmSuite specified in the client policy and the server policy are compatible. 
  </UserResponse>
</Message>
<Message ID="CWWSS5670E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.STRDereferenceTransformer.s01" varFormat="Java">
    security.wssecurity.STRDereferenceTransformer.s01=CWWSS5670E: Null is not allowed for the canonicalization method during the processing of the STR-Transform.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6830W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6830W" varFormat="Java">
    security.wssecurity.WSEC6830W=CWWSS6830W: The token cache size {0} is not a valid integer. The default token cache size {1} is used.
  </MsgText>
  <Explanation>
    Use integer value as cache size. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8035E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8035E" varFormat="Java">
    security.wssecurity.CWWSS8035E=CWWSS8035E: Cannot convert the IP string [{0}] to an IP address.
  </MsgText>
  <Explanation>
    Conversion error occurred while converting the IP string to an IP address. 
  </Explanation>
  <UserResponse>
    Validate the IP string provided. 
  </UserResponse>
</Message>
<Message ID="CWWSS7265E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSPolicy.s05" varFormat="Java">
    security.wssecurity.WSSPolicy.s05=CWWSS7265E: The specified assertion [{0}] is not valid or not supported.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7264E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSPolicy.s04" varFormat="Java">
    security.wssecurity.WSSPolicy.s04=CWWSS7264E: Element [{0}] is not a valid policy assertion.
  </MsgText>
  <Explanation>
    The policy file contains an element that is not a known policy assertion. 
  </Explanation>
  <UserResponse>
    Verify that the policy file is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS7263E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSPolicy.s03" varFormat="Java">
    security.wssecurity.WSSPolicy.s03=CWWSS7263E: Policy namespace [{0}] is not valid because policy namespace [{1}] was already found.
  </MsgText>
  <Explanation>
    The policy file contains multiple namespaces. Only one namespace is allowed. 
  </Explanation>
  <UserResponse>
    Verify that the policy file is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS7258E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSPolicy.s02" varFormat="Java">
    security.wssecurity.WSSPolicy.s02=CWWSS7258E: The policy assertion [{0}] is not a valid SecureConversationToken assertion.
  </MsgText>
  <Explanation>
    The policy file contains a not valid SecureConversationToken assertion. 
  </Explanation>
  <UserResponse>
    Regenerate policy file with a valid SecureConversation token type. 
  </UserResponse>
</Message>
<Message ID="CWWSS7257E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSPolicy.s01" varFormat="Java">
    security.wssecurity.WSSPolicy.s01=CWWSS7257E: The policy assertion [{0}] is not a valid X509Token, Kerberos or UsernameToken assertion.
  </MsgText>
  <Explanation>
    The policy file contains a not valid X509Token, Kerberos or UsernameToken assertion. 
  </Explanation>
  <UserResponse>
    Regenerate policy file with a valid token type. 
  </UserResponse>
</Message>
<Message ID="CWWSS6621E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PkiPathCallbackHandler.s02" varFormat="Java">
    security.wssecurity.PkiPathCallbackHandler.s02=CWWSS6621E: Decoding the binary token data that is sent in the message resulted in null.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6620E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PkiPathCallbackHandler.s01" varFormat="Java">
    security.wssecurity.PkiPathCallbackHandler.s01=CWWSS6620E: An exception occured during the handling of a Public Key Infrastructure (PKI) path.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7519E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.wstnamespace" varFormat="Java">
    security.wssecurity.trust.client.wstnamespace=CWWSS7519E: Invalid WS-Trust namespace [{0}].
  </MsgText>
  <Explanation>
    The WS-Addressing namespace specified is not a valid namespace. 
  </Explanation>
  <UserResponse>
    Specify a WS-Trust namespace that is supported by the trust client. 
  </UserResponse>
</Message>
<Message ID="CWWSS5185W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5185W" varFormat="Java">
    security.wssecurity.WSEC5185W=CWWSS5185W: The Application Server cannot map the {0} distinguished name (DN) of the X.509 certificate to the security name. The following exception occurred: {1}
  </MsgText>
  <Explanation>
    The certificate could not be mapped to a valid user in the registry. 
  </Explanation>
  <UserResponse>
    Verify that there is a valid user that corresponds to the Distinguished Name for this certificate in the registry. Either obtain a certificate that has a corresponding valid user in the registry, or assure that the Distinguished Name can map to a valid user in the registry. 
  </UserResponse>
</Message>
<Message ID="CWWSS0049E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.unsupport.callback" varFormat="Java">
    security.wssecurity.unsupport.callback=CWWSS0049E: The {0} CallbackHandler class does not support the {1} callback object.
  </MsgText>
  <Explanation>
    The CallbackHandler class does not support the specified Callback implementation. 
  </Explanation>
  <UserResponse>
    Verify the configuration specifies the correct CallbackHandler class and that the class is implemented correctly. 
  </UserResponse>
</Message>
<Message ID="CWWSS8034E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8034E" varFormat="Java">
    security.wssecurity.CWWSS8034E=CWWSS8034E: Unknown host exception raised for IP address [{0}].
  </MsgText>
  <Explanation>
    Could not obtain IP address. 
  </Explanation>
  <UserResponse>
    Validate the IP address range specified. 
  </UserResponse>
</Message>
<Message ID="CWWSS6865E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6865E" varFormat="Java">
    security.wssecurity.WSEC6865E=CWWSS6865E: The specified context token cannot be renewed.
  </MsgText>
  <Explanation>
    Some context tokens cannot be renewed. 
  </Explanation>
  <UserResponse>
    Obtain a new context token. 
  </UserResponse>
</Message>
<Message ID="CWWSS8033E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8033E" varFormat="Java">
    security.wssecurity.CWWSS8033E=CWWSS8033E: Malformed IP range specified. Found [{0}] rather than a wildcard.
  </MsgText>
  <Explanation>
    Bad IP range specfied. Must contain only wildcards after the first range. 
  </Explanation>
  <UserResponse>
    Ensure everything after the first range specified is a wildcard. 
  </UserResponse>
</Message>
<Message ID="CWWSS6864E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6864E" varFormat="Java">
    security.wssecurity.WSEC6864E=CWWSS6864E: The provided context token has expired.
  </MsgText>
  <Explanation>
    The context token has expired. 
  </Explanation>
  <UserResponse>
    If the token is renewable, renew the context token. Otherwise, obtain a new context token. 
  </UserResponse>
</Message>
<Message ID="CWWSS6017E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyInfoConsumer.getKey04" varFormat="Java">
    security.wssecurity.KeyInfoConsumer.getKey04=CWWSS6017E: The Key extraction fails because of an exception occurred during the key extraction. The exception is: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6012E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyInfoConsumer.getKey03" varFormat="Java">
    security.wssecurity.KeyInfoConsumer.getKey03=CWWSS6012E: All the attempts to resolve the key based on each Key Information failed. The last exception is: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7534E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.serverresponse" varFormat="Java">
    security.wssecurity.trust.client.serverresponse=CWWSS7534E: The response received from the trust service provider is invalid.
  </MsgText>
  <Explanation>
    The trust client received a response from the trust service provider that is not valid. 
  </Explanation>
  <UserResponse>
    Verify that the trust service provider address is correct, and the trust client is configured correctly for the specified trust service provider. 
  </UserResponse>
</Message>
<Message ID="CWWSS8032E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8032E" varFormat="Java">
    security.wssecurity.CWWSS8032E=CWWSS8032E: The filter operator should be one of &apos;&apos;==&apos;&apos;, &apos;&apos;!=&apos;&apos;, &apos;&apos;%=&apos;&apos;, &apos;&apos;&gt;&apos;&apos; or &apos;&apos;&lt;&apos;&apos;. Operator used was [{0}].  
  </MsgText>
  <Explanation>
    The filter operator for SAML Web SSO is not valid. 
  </Explanation>
  <UserResponse>
    Check the WebSphere Application Server SAML TAI configuration, and ensure the filter operator is valid. 
  </UserResponse>
</Message>
<Message ID="CWWSS6863E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6863E" varFormat="Java">
    security.wssecurity.WSEC6863E=CWWSS6863E: The specified source for the derivation is unknown.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS8031E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8031E" varFormat="Java">
    security.wssecurity.CWWSS8031E=CWWSS8031E: This TAI could not uniquely identify one Single-Sign-On partner for this request [{0}].  
  </MsgText>
  <Explanation>
    There are multiple Single-Sign-on partners configured for the request. 
  </Explanation>
  <UserResponse>
    Check the WebSphere Application Server SAML TAI configuration, and ensure the filter condition uniquely identifies one Single-Sign-On partner. 
  </UserResponse>
</Message>
<Message ID="CWWSS7348E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s43" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s43=CWWSS7348E: A total number of [{0}] protection tokens of the type [{1}] were configured in the policy. Only one and exactly one is required when specifying it as the caller.
  </MsgText>
  <Explanation>
    When a protection token type is specified as a caller, one and exactly one protection token of that type is allowed. 
  </Explanation>
  <UserResponse>
    Correct the policy and ensure that your policy has exactly one token of that protection token type. 
  </UserResponse>
</Message>
<Message ID="CWWSS7298E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s42" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s42=CWWSS7298E: Bindings with namespace [{0}] cannot support the specified configuration [{1}].
  </MsgText>
  <Explanation>
    The specified configuration is not supported with the bindings version thats used 
  </Explanation>
  <UserResponse>
    Migrate bindings to a level that supports the configuration 
  </UserResponse>
</Message>
<Message ID="CWWSS6862E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6862E" varFormat="Java">
    security.wssecurity.WSEC6862E=CWWSS6862E: Not all of the values that are associated with the security context token (SCT) are supported.
  </MsgText>
  <Explanation>
    Some of the values in the request that are associated with the security context token (SCT) are not supported. 
  </Explanation>
  <UserResponse>
    Refer to the information center for information on the supported values. 
  </UserResponse>
</Message>
<Message ID="CWWSS7337E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s41" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s41=CWWSS7337E: Can not find encryption bindings for specified confidential parts for an inbound message in the default bindings.
  </MsgText>
  <Explanation>
    Confidential parts were specified for inbound messages in the policy, but there was no matching encryption information on the inbound section of the default bindings. 
  </Explanation>
  <UserResponse>
    Regenerate the default bindings, so there are encryption bindings for the specified integral parts. 
  </UserResponse>
</Message>
<Message ID="CWWSS7336E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s40" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s40=CWWSS7336E: Can not find token consumer for encryption token in default bindings.
  </MsgText>
  <Explanation>
    Default bindings are missing the token consumer for the encryption token. 
  </Explanation>
  <UserResponse>
    Regenerate the default bindings, so there is a token consumer for the encryption token. 
  </UserResponse>
</Message>
<Message ID="CWWSS5182E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5182E" varFormat="Java">
    security.wssecurity.WSEC5182E=CWWSS5182E: The Application Server cannot validate the certificate, which is owned by {0}, uses the {1} alias, and is located in the {2} keystore. The following exception occurred: {3}
  </MsgText>
  <Explanation>
    The certificate is not valid. 
  </Explanation>
  <UserResponse>
    Verify that the certificate is a valid one and obtain a valid certificate if necessary. 
  </UserResponse>
</Message>
<Message ID="CWWSS7335E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s39" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s39=CWWSS7335E: Can not find signature bindings for specified integral parts for an inbound message in the default bindings.
  </MsgText>
  <Explanation>
    Integral parts were specified for inbound messages in the policy, but there was no matching signing information on the inbound section of the default bindings. 
  </Explanation>
  <UserResponse>
    Regenerate the default bindings, so there are signature bindings for the specified inbound integral parts. 
  </UserResponse>
</Message>
<Message ID="CWWSS7334E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s38" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s38=CWWSS7334E: Can not find token consumer for signing token in default bindings.
  </MsgText>
  <Explanation>
    Default bindings are missing the token consumer for the signing token. 
  </Explanation>
  <UserResponse>
    Regenerate the default bindings, so there is a token consumer for the signing token. 
  </UserResponse>
</Message>
<Message ID="CWWSS7331E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s37" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s37=CWWSS7331E: Two UsernameTokens of type [{0}], one used as a trustedId and the other as a callerId, were configured in policy and bindings, but they are not being used as caller.
  </MsgText>
  <Explanation>
    When using default bindings, we allow 2 UsernameTokens of the same type, only when being used as callers. 
  </Explanation>
  <UserResponse>
    Correct the default bindings, so these 2 UsernameTokens are used as callers, or to not use 2 UsernameTokens. 
  </UserResponse>
</Message>
<Message ID="CWWSS7327E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s36" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s36=CWWSS7327E: Did not find a token consumer for the supporting token of type [{0}].
  </MsgText>
  <Explanation>
    A token consumer was not found in the bindings for the supporting token of this type. 
  </Explanation>
  <UserResponse>
    Correct the bindings so a token consumer for the supporting token in the policy is defined. 
  </UserResponse>
</Message>
<Message ID="CWWSS8030E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS8030E" varFormat="Java">
    security.wssecurity.CWWSS8030E=CWWSS8030E: The SAML response to [{0}] is not configured for this service provider.  
  </MsgText>
  <Explanation>
    There is no AssertionConsumerService URL configured for the incoming SAML Response. 
  </Explanation>
  <UserResponse>
    Check the WebSphere Application Server SAML TAI configuration, and ensure it has the AssertionConsumerService URL configured. 
  </UserResponse>
</Message>
<Message ID="CWWSS7325E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s35" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s35=CWWSS7325E: Found two UsernameToken Token consumers, one configured as trusted id and the other as a caller id,  of UsernameToken type [{0}] in the default bindings, but only one UsernameToken SupportingToken assertion in the policy. Do not know which consumer to chose.
  </MsgText>
  <Explanation>
    Two UsernameToken token consumers, one configured as trusted id and the other as a caller id  were found, but do not know which one to use, as only one UsernameToken assertion was found in the policy. This is an ambiguous situation. 
  </Explanation>
  <UserResponse>
    Correct the policy so two Usernametoken SupportingToken assertions are in the policy, or remove one of the two UsernameToken token consumers from the default bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS7316E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s34" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s34=CWWSS7316E: More than one supporting token consumer of the same type found on the default bindings. Only one token consumer per supporting token type is allowed.
  </MsgText>
  <Explanation>
    Only one token consumer per supporting token type is allowed. 
  </Explanation>
  <UserResponse>
    Correct the default bindings so only one token consumer for each supporting token type is configured. 
  </UserResponse>
</Message>
<Message ID="CWWSS6861E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6861E" varFormat="Java">
    security.wssecurity.WSEC6861E=CWWSS6861E: The requested context elements are not sufficient or not supported.
  </MsgText>
  <Explanation>
    The context token does not contain the required information. 
  </Explanation>
  <UserResponse>
    Refer to the information center for information on the required context information. 
  </UserResponse>
</Message>
<Message ID="CWWSS7303E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s31" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s31=CWWSS7303E: More than one supporting token consumer of the type [{0}] found on the default bindings. Only one token consumer per supporting token type is allowed.
  </MsgText>
  <Explanation>
    Only one token consumer per supporting token type is allowed. 
  </Explanation>
  <UserResponse>
    Correct the default bindings so only one token consumer for each supporting token type is configured. 
  </UserResponse>
</Message>
<Message ID="CWWSS7302E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s30" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s30=CWWSS7302E: More than one idAssertion UsernameToken consumer was found in the default bindings.
  </MsgText>
  <Explanation>
    In default bindings only one idAssertion UsernameToken consumer is allowed. 
  </Explanation>
  <UserResponse>
    Correct the bindings and ensure that it has exactly one idAssertion UsernameToken consumer. 
  </UserResponse>
</Message>
<Message ID="CWWSS5181E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC5181E" varFormat="Java">
    security.wssecurity.WSEC5181E=CWWSS5181E: The following certificate, which is owned by {0} with the {1} alias from the {2} keystore, has expired: {3}
  </MsgText>
  <Explanation>
    The certificate has expired. 
  </Explanation>
  <UserResponse>
    Verify the expiration date of the certificate and obtain a valid new certificate. 
  </UserResponse>
</Message>
<Message ID="CWWSS7301E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s29" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s29=CWWSS7301E: More than one trustedId UsernameToken consumer was found in the default bindings.
  </MsgText>
  <Explanation>
    In default bindings only one trustedId UsernameToken consumer is allowed. 
  </Explanation>
  <UserResponse>
    Correct the bindings and ensure that it has exactly one trustedId UsernameToken consumer. 
  </UserResponse>
</Message>
<Message ID="CWWSS7300E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s28" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s28=CWWSS7300E: A total number of [{0}] supporting tokens of the type [{1}] were configured in the policy. Only one and exactly one is required.
  </MsgText>
  <Explanation>
    When a supporting token type is specified as a caller, one and exactly one supporting token of that type is allowed. 
  </Explanation>
  <UserResponse>
    Correct the policy and ensure that your policy has exactly one token of that type. 
  </UserResponse>
</Message>
<Message ID="CWWSS7299E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s27" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s27=CWWSS7299E: A total number of [{0}] UsernameToken Supporting tokens were found in the policy. When using Username Tokens as a trusted id and an idAssertion, two and only two are required.
  </MsgText>
  <Explanation>
    Two and only two UsernameTokens Supporting tokens are allowed in policy when being used as a trusted id and an id assertion 
  </Explanation>
  <UserResponse>
    Correct the policy and ensure that your it has exactly two UsernameTokens. 
  </UserResponse>
</Message>
<Message ID="CWWSS7283E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s22" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s22=CWWSS7283E: The caller [{0}] does not have a matching protection or supporting token in the policy.
  </MsgText>
  <Explanation>
    A caller was defined that does not have a matching token in the policy. 
  </Explanation>
  <UserResponse>
    Remove the caller from the bindings, or add a supporting or protection token of the same type to the policy. 
  </UserResponse>
</Message>
<Message ID="CWWSS6860E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6860E" varFormat="Java">
    security.wssecurity.WSEC6860E=CWWSS6860E: The requested renewal failed.
  </MsgText>
  <Explanation>
    The Application Server cannot renew the security token. 
  </Explanation>
  <UserResponse>
    Obtain a new security token. 
  </UserResponse>
</Message>
<Message ID="CWWSS7033E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s21" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s21=CWWSS7033E: An exception was caught formatting the following LDAP port number:{0}
  </MsgText>
  <Explanation>
    The format of the LDAP port number is wrong. 
  </Explanation>
  <UserResponse>
    Check the LDAP port number and make sure it is correct. 
  </UserResponse>
</Message>
<Message ID="CWWSS7032E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s20" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s20=CWWSS7032E: The policy assertion [{0}] is not a valid Trust10 QName assertion.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7031E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s19" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s19=CWWSS7031E: The policy assertion [{0}] is not a valid WSS11 QName assertion.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7030E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s18" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s18=CWWSS7030E: The policy assertion [{0}] is not a valid WSS10 QName assertion.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7029E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s17" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s17=CWWSS7029E: The policy assertion [{0}] is not a valid Supportingtoken QName assertion.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7028E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s16" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s16=CWWSS7028E: The policy assertion [{0}] is not a valid SymmetricBinding QName assertion.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7027E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s15" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s15=CWWSS7027E: Recipient Encryption Token assertion found when a Recipient Token assertion was already defined.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7026E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s14" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s14=CWWSS7026E: Initiator Encryption Token assertion found when an Initiator Token assertion was already defined.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7025E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s13" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s13=CWWSS7025E: Recipient Signature Token assertion found when a Recipient Token assertion was already defined.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7024E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s12" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s12=CWWSS7024E: Initiator Signature Token assertion found when an Initiator Token assertion was already defined.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7023E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s11" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s11=CWWSS7023E: Recipient Token assertion found when a Recipient Signature Token assertion was already defined.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7022E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s10" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s10=CWWSS7022E: Recipient Token assertion found when a Recipient Encryption Token assertion was already defined.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7021E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s09" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s09=CWWSS7021E: Initiator Token assertion found when an Initiator Token assertion was already defined.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7020E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s08" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s08=CWWSS7020E: Initiator Token assertion found when an Initiator Encryption Token assertion was already defined.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7019E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s07" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s07=CWWSS7019E: The policy assertion [{0}] is not a valid AsymmetricBinding QName assertion.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7018E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s06" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s06=CWWSS7018E: The policy assertion [{0}] is not a valid sign/encrypt part/element.
  </MsgText>
  <Explanation>
    The policy file contains an assertion that is not valid or not supported. 
  </Explanation>
  <UserResponse>
    Refer to the documentation to determine the valid and supported assertions. 
  </UserResponse>
</Message>
<Message ID="CWWSS7017E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s05" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s05=CWWSS7017E: Actor URI validation failed.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7016E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s04" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s04=CWWSS7016E: Exception received from FileInputStream.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7015E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s03" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s03=CWWSS7015E: Exception received from JAXB.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7014E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s02" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s02=CWWSS7014E: No WS-Security Bindings found.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7013E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.PolicyInboundConfig.s01" varFormat="Java">
    security.wssecurity.PolicyInboundConfig.s01=CWWSS7013E: PolicyInboundConfig(String bindFilename, String policyFilename, boolean isRequest, ClassLoader appClassLoader,WSSecurityDefaultConfiguration defaultConfiguration): [{0}]
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6092E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyStoreKeyLocator.getKey02" varFormat="Java">
    security.wssecurity.KeyStoreKeyLocator.getKey02=CWWSS6092E: Unknown key usage type: key type={0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5048E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.DOMUtil.sconf11" varFormat="Java">
    security.wssecurity.DOMUtil.sconf11=CWWSS5048E: One of the {0} elements is required.
  </MsgText>
  <Explanation>
    None of required elements with the specific namespaces exist in the SOAP message. 
  </Explanation>
  <UserResponse>
    Verify that the SOAP message conforms to the standard specifications. If the error persists, then refer to the information center for further troubleshooting and support. 
  </UserResponse>
</Message>
<Message ID="CWWSS5047E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.DOMUtil.sconf10" varFormat="Java">
    security.wssecurity.DOMUtil.sconf10=CWWSS5047E: {0}/@{1} attribute is required.
  </MsgText>
  <Explanation>
    The required attribute does not exist in the XML element. 
  </Explanation>
  <UserResponse>
    Verify that the SOAP message conforms to the standard specifications. If the error persists, then refer to the information center for further troubleshooting and support. 
  </UserResponse>
</Message>
<Message ID="CWWSS7306E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSInboundBinding.s01" varFormat="Java">
    security.wssecurity.WSSInboundBinding.s01=CWWSS7306E: Order is a required attribute for callers in the binding namespace [{0}].
  </MsgText>
  <Explanation>
    A caller was configured without an order attribute in a namespace requiring its use. 
  </Explanation>
  <UserResponse>
    Regenerate the binding file with correct caller order attributes set. 
  </UserResponse>
</Message>
<Message ID="CWWSS5046E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.DOMUtil.sconf09" varFormat="Java">
    security.wssecurity.DOMUtil.sconf09=CWWSS5046E: One or more {0} elements are required.
  </MsgText>
  <Explanation>
    One or more of the XML elements with a specific namespace do not exist in the SOAP message. 
  </Explanation>
  <UserResponse>
    Verify that the SOAP message conforms to the standard specifications. If the error persists, then refer to the information center for further troubleshooting and support. 
  </UserResponse>
</Message>
<Message ID="CWWSS7200E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SCTGenerateLoginModule.getAxisService" varFormat="Java">
    security.wssecurity.SCTGenerateLoginModule.getAxisService=CWWSS7200E: Unable to create AxisService from ServiceEndpointAddress : {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5043E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.DOMUtil.sconf03" varFormat="Java">
    security.wssecurity.DOMUtil.sconf03=CWWSS5043E: One {0} element is required.
  </MsgText>
  <Explanation>
    The XML element with a specific namespace does not exist in the SOAP message. 
  </Explanation>
  <UserResponse>
    Verify that the SOAP message conforms to the standard specifications. If the error persists, then refer to the information center for further troubleshooting and support. 
  </UserResponse>
</Message>
<Message ID="CWWSS5615E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EncryptionGenerator.s15" varFormat="Java">
    security.wssecurity.EncryptionGenerator.s15=CWWSS5615E: Null is not allowed as the parent element of the enc:EncryptedKey or the enc:EncryptedData element.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5614E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EncryptionGenerator.s14" varFormat="Java">
    security.wssecurity.EncryptionGenerator.s14=CWWSS5614E: Constructing the EncryptionMethod element produced the following exception: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5613E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EncryptionGenerator.s13" varFormat="Java">
    security.wssecurity.EncryptionGenerator.s13=CWWSS5613E: Encrypting the key for data encryption produced the following exception: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5612E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EncryptionGenerator.s12" varFormat="Java">
    security.wssecurity.EncryptionGenerator.s12=CWWSS5612E: Encrypting the data produced the following exception: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5611E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EncryptionGenerator.s11" varFormat="Java">
    security.wssecurity.EncryptionGenerator.s11=CWWSS5611E: Generating the key for data encryption produced the following exception: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5610E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EncryptionGenerator.s01" varFormat="Java">
    security.wssecurity.EncryptionGenerator.s01=CWWSS5610E: Unable to create the {0} element. The exception is: {1}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6052E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.KeyIdContentConsumer.getEncodingType02" varFormat="Java">
    security.wssecurity.KeyIdContentConsumer.getEncodingType02=CWWSS6052E: The EncodingType attribute is not found.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS0021E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.load.collectioncertstore.failed" varFormat="Java">
    security.wssecurity.load.collectioncertstore.failed=CWWSS0021E: The Application Server failed to load the {0} CollectionCertStore configuration. The exception is: {1}
  </MsgText>
  <Explanation>
    An attempt to load the collection certificate store failed. The provider of the collection certificate store might have a null value. The providor of the collection certificate store might not be configured. The collection might have a null value. 
  </Explanation>
  <UserResponse>
    The CollectionCertStore configuration might be corrupted or missing. Verify that the collection certificate store is configured properly in the binding. 
  </UserResponse>
</Message>
<Message ID="CWWSS7346E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.X509ConsumeLoginModule.s01" varFormat="Java">
    security.wssecurity.X509ConsumeLoginModule.s01=CWWSS7346E: The trust anchor path is null. It is required when trustAnyCertificate is not specified.
  </MsgText>
  <Explanation>
    The trust anchor could not be loaded because the path is null. 
  </Explanation>
  <UserResponse>
    Verify the trust anchor path is specified in the bindings, or specify trustAnyCertificate. 
  </UserResponse>
</Message>
<Message ID="CWWSS7233E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TokenSerialize.s03" varFormat="Java">
    security.wssecurity.TokenSerialize.s03=CWWSS7233E: The security subject is not returned from login process.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7232E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TokenSerialize.s02" varFormat="Java">
    security.wssecurity.TokenSerialize.s02=CWWSS7232E: The WS-Security SelfManagedData de-serialization fails. The exception is {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7231E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TokenSerialize.s01" varFormat="Java">
    security.wssecurity.TokenSerialize.s01=CWWSS7231E: The WS-Security SelfManagedData serialization fails. The exception is {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7243E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7243E" varFormat="Java">
    security.wssecurity.WSEC7243E=CWWSS7243E: The security token service (STS) must only return 1 response. It returned {0} responses.
  </MsgText>
  <Explanation>
    The Application Server encountered an incorrect number of responses from the STS. 
  </Explanation>
  <UserResponse>
    No user action is required. 
  </UserResponse>
</Message>
<Message ID="CWWSS0139W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0139W" varFormat="Java">
    security.wssecurity.WSEC0139W=CWWSS0139W: The timestamp timeout value of {0} seconds is less than the minimum. The minimum value of {1} seconds is used instead.
  </MsgText>
  <Explanation>
    The specified value for the timestamp timeout is less than the minimum value that is required. 
  </Explanation>
  <UserResponse>
    Change the value for the timestamp timeout to one that is within the valid range. The timestamp timeout value is specified by the custom property com.ibm.wsspi.wssecurity.core.TimestampTimeout in the WS-Security bindings. 
  </UserResponse>
</Message>
<Message ID="CWWSS7242E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7242E" varFormat="Java">
    security.wssecurity.WSEC7242E=CWWSS7242E: The RequestSecurityToken element is missing the required {0} header element.
  </MsgText>
  <Explanation>
    The Application Server could not successfully process the RequestSecurityToken because of a missing header element. 
  </Explanation>
  <UserResponse>
    Specify the missing header element in the RequestSecurityToken and resubmit the request. 
  </UserResponse>
</Message>
<Message ID="CWWSS7120E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SecureConversationCacheHelper.s03" varFormat="Java">
    security.wssecurity.SecureConversationCacheHelper.s03=CWWSS7120E: EndpointReference is null. WS-Address might be not enabled. It is required for Secure Conversation.
  </MsgText>
  <Explanation>
    WS-Address might not be enabled. It is required for Secure Conversation. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7119E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SecureConversationCacheHelper.s02" varFormat="Java">
    security.wssecurity.SecureConversationCacheHelper.s02=CWWSS7119E: ConfigurationContext in MessageContext is null.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7118E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SecureConversationCacheHelper.s01" varFormat="Java">
    security.wssecurity.SecureConversationCacheHelper.s01=CWWSS7118E: AxisConfiguration in MessageContext is null.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6081E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.X509IssuerContentConsumer.getX509Data01" varFormat="Java">
    security.wssecurity.X509IssuerContentConsumer.getX509Data01=CWWSS6081E: The X509Data Element was not processed.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7241E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7241E" varFormat="Java">
    security.wssecurity.WSEC7241E=CWWSS7241E: The RequestSecurityToken element contains an invalid {0} element.
  </MsgText>
  <Explanation>
    The Application Server encountered a not valid element while processing the RequestSecurityToken. 
  </Explanation>
  <UserResponse>
    Remove the not valid element from the RequestSecurityToken and resubmit the request. 
  </UserResponse>
</Message>
<Message ID="CWWSS5042E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.RequestReceiverConfig.sconf02" varFormat="Java">
    security.wssecurity.RequestReceiverConfig.sconf02=CWWSS5042E: Two or more {0} elements exist.
  </MsgText>
  <Explanation>
    Multiple XML elements exist in the SOAP message, where only one XML element with a specific namespace is expected. 
  </Explanation>
  <UserResponse>
    Verify that the SOAP message conforms to the standard specifications. If the error persists, then refer to the information center for further troubleshooting and support. 
  </UserResponse>
</Message>
<Message ID="CWWSS7240E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC7240E" varFormat="Java">
    security.wssecurity.WSEC7240E=CWWSS7240E: The Application Server encountered multiple {0} elements in the token request.
  </MsgText>
  <Explanation>
    The element can only occur once in the token request. 
  </Explanation>
  <UserResponse>
    Remove the extra elements from the token request and resubmit the request. 
  </UserResponse>
</Message>
<Message ID="CWWSS7307E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.LTPAConsumeLoginModule.invalidValueType" varFormat="Java">
    security.wssecurity.LTPAConsumeLoginModule.invalidValueType=CWWSS7307E: Unsupported Value Type. Expecting the following Value Type [{0}], but found [{1}].
  </MsgText>
  <Explanation>
    The Value Type on the token in the message does not match the token consumer configuration. 
  </Explanation>
  <UserResponse>
    Check and correct the Value Type information in the bindings. The token consumer and token generator configuration must both specify valid Value Types that are compatible. 
  </UserResponse>
</Message>
<Message ID="CWWSS7539E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7539E" varFormat="Java">
    security.wssecurity.CWWSS7539E=CWWSS7539E: The issued token uses the [{0}] confirmation method. This method is different from the [{1}] method that is specified in the policy. 
  </MsgText>
  <Explanation>
    The WS-PolicySet policy for Web services security that is attached to the service specifies a SAML confirmation method that is different from the method used by the issued token. 
  </Explanation>
  <UserResponse>
    Revise your configuration to ensure the confirmation method for the attached WS-PolicySet corresponds to the issued token. 
  </UserResponse>
</Message>
<Message ID="CWWSS0009W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.cannot.load.resource" varFormat="Java">
    security.wssecurity.cannot.load.resource=CWWSS0009W: The Application Server configuration utilities cannot load the resource file for the error messages. The exception is {0}
  </MsgText>
  <Explanation>
    The NLS message catalog might not exist, is corrupted, or exists in the wrong location.  An error occurred when the Web services configuration utilities attempted to locate this bundle. 
  </Explanation>
  <UserResponse>
    Verify that the message catalog exists in the correct location. 
  </UserResponse>
</Message>
<Message ID="CWWSS5731E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TimestampChecker.s02" varFormat="Java">
    security.wssecurity.TimestampChecker.s02=CWWSS5731E: A required timestamp is not found in the message part [{0}].
  </MsgText>
  <Explanation>
    The policy expected the specified message part to contain a Timestamp element. 
  </Explanation>
  <UserResponse>
    Verify that the policies on both the client and the server specify that a Timestamp is required for the specified message part. 
  </UserResponse>
</Message>
<Message ID="CWWSS5730E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.TimestampChecker.s01" varFormat="Java">
    security.wssecurity.TimestampChecker.s01=CWWSS5730E: A required timestamp is not found.
  </MsgText>
  <Explanation>
    The policy expected a Timestamp header to be found in the message. 
  </Explanation>
  <UserResponse>
    Verify that the policies on both the client and the server specify that a Timestamp is required on the message. 
  </UserResponse>
</Message>
<Message ID="CWWSS6042E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.EmbeddedContentConsumer.getEmbeddedToken02" varFormat="Java">
    security.wssecurity.EmbeddedContentConsumer.getEmbeddedToken02=CWWSS6042E: The Id attribute is not found.
  </MsgText>
  <Explanation>
    The Embedded key id is missing 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5697E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfidentialDialectElementSelector.s03" varFormat="Java">
    security.wssecurity.ConfidentialDialectElementSelector.s03=CWWSS5697E: Null is not allowed as the value when selecting elements.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5696E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfidentialDialectElementSelector.s02" varFormat="Java">
    security.wssecurity.ConfidentialDialectElementSelector.s02=CWWSS5696E: Null is not allowed as the node.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5695E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.ConfidentialDialectElementSelector.s01" varFormat="Java">
    security.wssecurity.ConfidentialDialectElementSelector.s01=CWWSS5695E: The encrypting data object must contain the timestamp or nonce: {0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5625E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SignatureConsumer.s12" varFormat="Java">
    security.wssecurity.SignatureConsumer.s12=CWWSS5625E: All the attempts based on each Reference failed. The last exception is: {0}
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5624E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SignatureConsumer.s11" varFormat="Java">
    security.wssecurity.SignatureConsumer.s11=CWWSS5624E: Null is not allowed as the target element. The {0} element was expected when consuming the message.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS0133E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0133E" varFormat="Java">
    security.wssecurity.WSEC0133E=CWWSS0133E: WSSecurityPlatformContextFactory.setServer() is already initialized.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6829W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6829W" varFormat="Java">
    security.wssecurity.WSEC6829W=CWWSS6829W: The {0} token cache size is less than the allowed minimum {1}. The default token cache size {2} is used.
  </MsgText>
  <Explanation>
    The token cache size is less than the allowed minimum. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5621E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SignatureConsumer.s02" varFormat="Java">
    security.wssecurity.SignatureConsumer.s02=CWWSS5621E: There is an unsupported signed part: URI={0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5327E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.NonceUtil.s08" varFormat="Java">
    security.wssecurity.NonceUtil.s08=CWWSS5327E: A null value is not allowed for the created time of the time stamp. The Application Server expected the wsu:Created element.
  </MsgText>
  <Explanation>
    The time stamp must have a wsu:Created element indicating the time of message creation. 
  </Explanation>
  <UserResponse>
    A time stamp was expected for the UsernameToken when consuming the message. Check your bindings for the sending service and verify that they especify the use of a time stamp for the UsernameToken. 
  </UserResponse>
</Message>
<Message ID="CWWSS5620E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.SignatureConsumer.s01" varFormat="Java">
    security.wssecurity.SignatureConsumer.s01=CWWSS5620E: Signature verification failed: {0}.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5326E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.NonceUtil.s07" varFormat="Java">
    security.wssecurity.NonceUtil.s07=CWWSS5326E: A null value is not allowed for the timestamp. The Application Server expected the wsu:Timestamp element.
  </MsgText>
  <Explanation>
    A time stamp was expected in the message but it was not found. 
  </Explanation>
  <UserResponse>
    Verify that the security policies and bindings for the application sending the message are configured so a time stamp is added to its messages. 
  </UserResponse>
</Message>
<Message ID="CWWSS5325E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.NonceUtil.s06" varFormat="Java">
    security.wssecurity.NonceUtil.s06=CWWSS5325E: A null value is not allowed for the nonce. The Application Server expected the wsse:Nonce element.
  </MsgText>
  <Explanation>
    A nonce was expected in the message but it was not found. 
  </Explanation>
  <UserResponse>
    Verify that the security policies and bindings for the application sending the message are configured so a nonce is added to its messages. 
  </UserResponse>
</Message>
<Message ID="CWWSS7535E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWWSS7535E" varFormat="Java">
    security.wssecurity.CWWSS7535E=CWWSS7535E: {0} Failed to load SAML Issuer Config Data property file: {1}
  </MsgText>
  <Explanation>
    The SAML issuer configuration data property file did not load. 
  </Explanation>
  <UserResponse>
    Verify that a valid SAML property file exists at the specified location. 
  </UserResponse>
</Message>
<Message ID="CWWSS5324E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.NonceUtil.s05" varFormat="Java">
    security.wssecurity.NonceUtil.s05=CWWSS5324E: The {0} time stamp type is not supported. The expected type is {1}.
  </MsgText>
  <Explanation>
    A check for the time stamp type has determined that the type is not supported. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5323E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.NonceUtil.s04" varFormat="Java">
    security.wssecurity.NonceUtil.s04=CWWSS5323E: The message has expired. The creation date for the time stamp was {0}. The expiration date for the time stamp was {1}. The current date on the server is {2}.
  </MsgText>
  <Explanation>
    The message arrived after the expiration time for the time stamp. The message might have taken too long to arrive, or there could be a time syncronization problem between client and server. 
  </Explanation>
  <UserResponse>
    Ensure that the date, time, and time zone are synchronized for both the client and the server. If they are both syncronized, it will need to be determined why the message is taking so long to arrive. 
  </UserResponse>
</Message>
<Message ID="CWWSS5322E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.NonceUtil.s03" varFormat="Java">
    security.wssecurity.NonceUtil.s03=CWWSS5322E: The Application Server cannot parse the time stamp value. The following exception occurred: {0}
  </MsgText>
  <Explanation>
    There has been a problem parsing a time stamp value found in the message. Could be timestamp is in an incorrect format. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5321E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.NonceUtil.s02" varFormat="Java">
    security.wssecurity.NonceUtil.s02=CWWSS5321E: A duplicate nonce, which is a randomly generated value, has been found.
  </MsgText>
  <Explanation>
    A nonce value should be unique on each message. The current message has a nonce that has already been found in a previous message. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS5320E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.NonceUtil.s01" varFormat="Java">
    security.wssecurity.NonceUtil.s01=CWWSS5320E: The Application Server cannot hex decode the nonce, which is a randomly generated value. The following exception occurred: {0}.
  </MsgText>
  <Explanation>
    There was a problem parsing a nonce value. The nonce in the message is in an incorrect format. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS0168E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0168E" varFormat="Java">
    security.wssecurity.WSEC0168E=CWWSS0168E: No WebSphere Credential (WSCredential) was found in the Lightweight Third-Party Authentication (LTPA) propagation token.
  </MsgText>
  <Explanation>
    A WebSphere Credential is expected in the Lightweight Third-Party Authentication (LTPA) propagation token and none is found. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6828W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6828W" varFormat="Java">
    security.wssecurity.WSEC6828W=CWWSS6828W: The {0} seconds token cache timeout is less than the minimum. The minimum token cache timeout {1} seconds is used.
  </MsgText>
  <Explanation>
    The token cache timeout is less than the minimum. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS7525E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.trust.client.key" varFormat="Java">
    security.wssecurity.trust.client.key=CWWSS7525E: The specified trust client settings key [{0}] is invalid.
  </MsgText>
  <Explanation>
    The trust client settings key is not one of the predefined keys required for the trust client. 
  </Explanation>
  <UserResponse>
    Specify a trust client settings key from the list of predefined trust client keys. 
  </UserResponse>
</Message>
<Message ID="CWWSS0131E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0131E" varFormat="Java">
    security.wssecurity.WSEC0131E=CWWSS0131E: The {0} CallbackHandler is not allowed to prompt on the Application Server.
  </MsgText>
  <Explanation>
    The CallbackHandler with prompt behavior is not supported for applications running on the Application Server. If this is used in the Application Server, it might cause the Application Server to hang. 
  </Explanation>
  <UserResponse>
    Use a CallbackHandler that is supported for the Application Server. 
  </UserResponse>
</Message>
<Message ID="CWWSS6719E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6719E" varFormat="Java">
    security.wssecurity.WSEC6719E=CWWSS6719E: The Qualified Name (QName) {0} was not found.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS6827W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC6827W" varFormat="Java">
    security.wssecurity.WSEC6827W=CWWSS6827W: The certificate cache size {0} is not a valid integer. The default cache size {1} is used.
  </MsgText>
  <Explanation>
    Use integer number as cache size. 
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ . 
  </UserResponse>
</Message>
<Message ID="CWWSS0130W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSEC0130W" varFormat="Java">
    security.wssecurity.WSEC0130W=CWWSS0130W: The {0} prompt CallbackHandler without specifying basic authentication information in the binding is not supported for an application running on the Application Server.
  </MsgText>
  <Explanation>
    The CallbackHandler with prompt behavior is not supported for applications running on the Application Server. If this is used in the Application Server, it might cause the Application Server to hang. 
  </Explanation>
  <UserResponse>
    Use a CallbackHandler that is supported for the Application Server. 
  </UserResponse>
</Message>
<!-- END MESSAGES -->
</TMSSource>
