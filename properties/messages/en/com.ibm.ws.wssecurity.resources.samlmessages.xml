<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="../../resources/stylesheets/wasmsgxml.css"?>
<TMSSource name="TivoliMessages" tmsVersion="1.0" xml:lang="en">
<!-- CMVC MSG File Name = ws/code/security.wssecurity/src/com/ibm/ws/webservices/wssecurity/resources/samlmessages.nlsprops --> 
<!-- DO NOT EDIT THIS FILE - This file was generated by the XML/Html & Property emitter -->
<!-- BEGIN MESSAGES -->
<Message ID="CWSML2018E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2018E" varFormat="Java">
    security.wssecurity.CWSML2018E=CWSML2018E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML6001E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6001E" varFormat="Java">
    security.wssecurity.WSSML6001E=CWSML6001E: Null or empty NameID provided for the issuer. 
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) issuer is not associated with a name identifier. 
  </Explanation>
  <UserResponse>
    Ensure that the SAML provider is associated with a name identifier. 
  </UserResponse>
</Message>
<Message ID="CWSML7005E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7005E" varFormat="Java">
    security.wssecurity.CWSML7005E=CWSML7005E: The SAML assertion contains an [{0}] element, but that element is empty.  The [{0}] element cannot be empty.
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) assertion contains the element shown in the message, but there is no value for the element.  This condition is not allowed. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion includes a value for the element shown in the message. 
  </UserResponse>
</Message>
<Message ID="CWSML2021E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2021E" varFormat="Java">
    security.wssecurity.CWSML2021E=CWSML2021E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML2017E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2017E" varFormat="Java">
    security.wssecurity.CWSML2017E=CWSML2017E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML7004E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7004E" varFormat="Java">
    security.wssecurity.CWSML7004E=CWSML7004E: The [{0}] element in the Assertion element is missing or empty.
  </MsgText>
  <Explanation>
    A Security Assertion Markup Language (SAML) assertion must contain the element shown in the message. The SAML assertion being validated either does not have this element, or the element does not have a value. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion includes the element indicated in the error message in the Assertion. 
  </UserResponse>
</Message>
<Message ID="CWSML2020E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2020E" varFormat="Java">
    security.wssecurity.CWSML2020E=CWSML2020E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML2016E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2016E" varFormat="Java">
    security.wssecurity.CWSML2016E=CWSML2016E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML7003E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7003E" varFormat="Java">
    security.wssecurity.CWSML7003E=CWSML7003E: The [{0}] attribute on the Assertion element is missing or empty.
  </MsgText>
  <Explanation>
    A Security Assertion Markup Language (SAML) assertion must contain the attribute shown in the message. The SAML assertion being validated does not have this attribute, or the attribute does not have a value. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion includes the attribute in the error message on the Assertion element. 
  </UserResponse>
</Message>
<Message ID="CWSML2015E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2015E" varFormat="Java">
    security.wssecurity.CWSML2015E=CWSML2015E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML7038W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7038W" varFormat="Java">
    security.wssecurity.CWSML7038W=CWSML7038W: The SAML Web Single Single Sign-on (SSO) Trust Association Interceptor (TAI) has two assertion consumer service URL custom properties configured that have the same URL path: [{0}] and [{1}].  This condition can cause unexpected behavior at run time.  To prevent further issues, all text after &lt;hostname&gt;:&lt;port&gt; must be unique for each [sso_&lt;id&gt;.sp.acsUrl] custom property value.
  </MsgText>
  <Explanation>
    The value for each SAML [sso_&lt;id&gt;.sp.acsUrl] custom property must have a unique URL path.  A URL path does not include the protocol and &lt;hostname&gt;:&lt;port&gt; parts of a URL string.  For example, although the URL strings for https://somewhere.ibm.com/samlsps/hello/app and https://elsewhere.ibm.com/samlsps/hello/app are different, the URL paths are the same.  If two acsUrl entries have the same URL path, when a SAMLResponse is sent to one of the URLs that has a duplicate path, the service provider that is chosen to handle the request will be indeterminate. 
  </Explanation>
  <UserResponse>
    Ensure that the URL configured for each of the [so_&lt;id&gt;.sp.acsUrl] custom properties have unique URL paths, meaning that they have unique text after the &lt;hostname&gt;:&lt;port&gt; part of the URL string. 
  </UserResponse>
</Message>
<Message ID="CWSML7002E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7002E" varFormat="Java">
    security.wssecurity.CWSML7002E=CWSML7002E: The IssueInstant in the assertion is after the current time.  The IssueInstant setting in the assertion is [{0}].  The current time is [{1}]. The current clock skew setting is {2} minutes.
  </MsgText>
  <Explanation>
    The IssueInstant in the Security Assertion Markup Language (SAML) assertion indicates that it was issued after the current time.  This condition is not allowed. A possible reason for the error is that the receiver&apos;s clock is out of sync with the clock of the creator of the assertion. 
  </Explanation>
  <UserResponse>
    Synchronize the clocks of the receiver and the creator of the assertion or increase the clock skew using the clockSkew custom property on the configured SAML token consumer. 
  </UserResponse>
</Message>
<Message ID="CWSML2014E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2014E" varFormat="Java">
    security.wssecurity.CWSML2014E=CWSML2014E: Only String or OMElement allowed for marshalling.
  </MsgText>
  <Explanation>
    Only a string or OMElement data type is allowed for marshalling. 
  </Explanation>
  <UserResponse>
    Provide either the required String or OMElement data type. 
  </UserResponse>
</Message>
<Message ID="CWSML7001E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7001E" varFormat="Java">
    security.wssecurity.CWSML7001E=CWSML7001E: The NotOnOrAfter condition is out of range. The NotOnOrAfter setting in the assertion is [{0}]. The current time is [{1}]. The current clock skew setting is {2} minutes.
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) assertion was received at a time that is at or after the NotOnOrAfter setting in the assertion.  This condition is not allowed. Possible reasons for the error are that the receiver&apos;s clock is out of sync with the clock of the creator of the assertion or the assertion has been obtained and resent by an unauthorized application. 
  </Explanation>
  <UserResponse>
    Synchronize the clocks of the receiver and the creator of the assertion or increase the clock skew using the clockSkew custom property on the configured SAML token consumer. 
  </UserResponse>
</Message>
<Message ID="CWSML2013E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2013E" varFormat="Java">
    security.wssecurity.CWSML2013E=CWSML2013E: Signed SAML could not be modified.
  </MsgText>
  <Explanation>
    A signed SAML cannot be modified. 
  </Explanation>
  <UserResponse>
    A signed SAML cannot be modified. 
  </UserResponse>
</Message>
<Message ID="CWSML2039E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML2039E" varFormat="Java">
    security.wssecurity.WSSML2039E=CWSML2039E: Invalid SAML assertion. 
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) assertion during the call to the newSAMLToken method is not valid. 
  </Explanation>
  <UserResponse>
    Ensure that you provide a valid SAML assertion. 
  </UserResponse>
</Message>
<Message ID="CWSML7036W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7036W" varFormat="Java">
    security.wssecurity.CWSML7036W=CWSML7036W: The SAML Web Single Single Sign-on request URL, [{0}], is directed to a host name that is not the same as the host name for the ACS URL, [{1}], that is configured on the [sso_&lt;id&gt;.sp.acsUrl] TAI custom property.  When WebSphere redirects the request to the Identity Provider (IdP), the browser will associate the WasSamlSpReqUrl cookie that WebSphere creates with the host name associated with the request URL, [{2}].  The IdP must redirect the request back to the ACS URL.  Since the request URL host name, [{2}], is not the same as the ACS URL host name, [{3}], the browser will not send the cookie with the redirected request.  If the cookie is not present on the redirected request, the request cannot be redirected to the original URL after authentication.  This warning will only be logged once per inbound host name.  If you want to disable this warning message, set the [com.ibm.ws.security.web.saml.acs.hostWarnings] system property to [false] and restart the application server. 
  </MsgText>
  <Explanation>
    The request URL has a host name that is not the same as the host name associated with the ACS URL.  Two possible causes of this issue are: 1) the request is directed to a short host name, but the ACS URL is configured as a fully-qualified host name or vice-versa and 2) an IBM HTTP server (IHS) front end that services the request redirects to the protected resource on WebSphere and the IHS and WebSphere servers have different host names.  If you get a CWSML7035E error later in your SAML TAI processing, then this problem must be corrected. 
  </Explanation>
  <UserResponse>
    If you get a CWSML7035E error later in your SAML TAI procesing, ensure that the host name for your request URL and ACS URL match.  You might have to change the value for your [sso_&lt;id&gt;.sp.acsUrl] TAI custom property, your IdP configuration or the URL to which requests are made.  You can also create a new SP in your SAML TAI configuration to handle the alternate host name.  If you want to disable this warning message, set the [com.ibm.ws.security.web.saml.acs.hostWarnings] system property to [false] and restart the application server. 
  </UserResponse>
</Message>
<Message ID="CWSML2009E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2009E" varFormat="Java">
    security.wssecurity.CWSML2009E=CWSML2009E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML7000E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7000E" varFormat="Java">
    security.wssecurity.CWSML7000E=CWSML7000E: The NotBefore condition is out of range. The NotBefore setting in the assertion is [{0}].  The current time is [{1}]. The current clock skew setting is {2} minutes.
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) assertion was received at a time that is earlier than the NotBefore setting in the assertion.  This condition is not allowed. A possible reason for the error is that the receiver&apos;s clock is out of sync with the clock of the creator of the assertion. 
  </Explanation>
  <UserResponse>
    Synchronize the clocks of the receiver and the creator of the assertion or increase the clock skew using the clockSkew custom property on the configured SAML token consumer. 
  </UserResponse>
</Message>
<Message ID="CWSML2012E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2012E" varFormat="Java">
    security.wssecurity.CWSML2012E=CWSML2012E: SAML Issuer address does not exist.
  </MsgText>
  <Explanation>
    The SAML Assertion Issuer address provided is not valid. 
  </Explanation>
  <UserResponse>
    Ensure that the Security Assertion Markup Language (SAML) Assertion Issuer address is valid. 
  </UserResponse>
</Message>
<Message ID="CWSML2008E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2008E" varFormat="Java">
    security.wssecurity.CWSML2008E=CWSML2008E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML7035E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7035E" varFormat="Java">
    security.wssecurity.CWSML7035E=CWSML7035E: The SAML Web Single Sign-on (SSO) Trust Association Interceptor (TAI) is unable to determine a redirect target URL. The redirect URL can come from the sso_&lt;id&gt;.sp.targetUrl SAML TAI custom property, the RelayState parameter in the SAMLResponse or the WasSamlSpReqUrl cookie. If you do not intend to have a value for the sso_&lt;id&gt;.sp.targetUrl SAML TAI custom property or have your IdP send a RelayState parameter in the SAMLResponse, then check earlier in the log to see if you have a CWSML7036W warning that indicates that the request URL host name is not the same as the ACS URL host name. If you see that warning, then that condition must be corrected to fix this error. The value for the relayState parameter on the SAMLResponse is [{0}].
  </MsgText>
  <Explanation>
    The SAML Web SSO TAI cannot find a redirect URL for the current request.  The redirect URL can come from three places: 1) the sso_&lt;id&gt;.sp.targetUrl SAML TAI custom property, 2) the RelayState parameter in the SAMLResponse and 3) the WasSamlSpReqUrl cookie. At least one of these three things must be present in order for the SAML TAI to be able to determine the redirect URL. In this case, none of these three things are present, therefore, the SAML TAI can not determine the redirect URL. Note that the SAML TAI may have set a WasSamlSpReqUrl cookie earlier in the process, but the browser did not make the cookie available to the SAML TAI. Also, the RelayState parameter must be a URL that uses the http or https protocol. 
  </Explanation>
  <UserResponse>
    Ensure at least one of the following is true: 1) the sso_&lt;id&gt;.sp.targetUrl SAML TAI custom property is configured for the current SP, 2) the IdP sets the RelayState parameter on the SAMLResponse with a valid URL that uses the http or https protocol or 3) the WasSamlSpReqUrl cookie is made available to the SAML TAI. In order for the WasSamlSpReqUrl to be available to the SAML TAI, the original request URL must have the same host name as the ACS URL that is configured on the sso_&lt;id&gt;.sp.acsUrl TAI custom property. 
  </UserResponse>
</Message>
<Message ID="CWSML2011E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2011E" varFormat="Java">
    security.wssecurity.CWSML2011E=CWSML2011E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML2007E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2007E" varFormat="Java">
    security.wssecurity.CWSML2007E=CWSML2007E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML7034I" severity="I" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7034I" varFormat="Java">
    security.wssecurity.CWSML7034I=CWSML7034I: The redirect target URL was retrieved from the WasSamlSpReqUrl cookie on the request.  
  </MsgText>
  <Explanation>
    The redirect target URL was obtained from the SAMLResponse. 
  </Explanation>
  <UserResponse>
    No user action is required. 
  </UserResponse>
</Message>
<Message ID="CWSML2040E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML2040E" varFormat="Java">
    security.wssecurity.WSSML2040E=CWSML2040E: Could not create SAML token from XMLStructure. 
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) token cannot be created from the XMLStructure value during a call to the newSAMLToken method. 
  </Explanation>
  <UserResponse>
    Ensure that you provide a valid XML structure for the assertion. 
  </UserResponse>
</Message>
<Message ID="CWSML2010E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2010E" varFormat="Java">
    security.wssecurity.CWSML2010E=CWSML2010E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML2006E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2006E" varFormat="Java">
    security.wssecurity.CWSML2006E=CWSML2006E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML7033E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7033E" varFormat="Java">
    security.wssecurity.CWSML7033E=CWSML7033E: The Security Assertion Markup Language (SAML) Web single sign-on TAI is unable to perform a redirect to the requested target URL [{0}].
  </MsgText>
  <Explanation>
    The SAML TAI can not redirect the client request to the requested URL. 
  </Explanation>
  <UserResponse>
    See the message that displays after CWSML7033E for the cause of the error. 
  </UserResponse>
</Message>
<Message ID="CWSML7029E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7029E" varFormat="Java">
    security.wssecurity.CWSML7029E=CWSML7029E: An X.509 certificate was not obtained from the KeyInfo element in the Security Assertion Markup Language (SAML) assertion, so trust cannot be evaluated.  Either use a KeyInfo method that yields a usable X.509 certificate or turn off trust validation.  The supported methods are [{0}].
  </MsgText>
  <Explanation>
    The KeyInfo element in the SAML assertion is used to retrieve the certificate to validate the signature or the key to decrypt the assertion.  Although the method in the assertion used to retrieve the certificate is sufficent to evaluate the signature, it is not sufficient to evaluate trust because it does not yield an X.509 certificate. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion uses one of the supported KeyInfo types that will yield an X.509 certificate or turn off trust validation. 
  </UserResponse>
</Message>
<Message ID="CWSML2005E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2005E" varFormat="Java">
    security.wssecurity.CWSML2005E=CWSML2005E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML0002E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML0002E" varFormat="Java">
    security.wssecurity.WSSML0002E=CWSML0002E: No key alias was provided. 
  </MsgText>
  <Explanation>
    A key information object is not associated with a key alias. 
  </Explanation>
  <UserResponse>
    Ensure that the key information object is associated with an alias during the creation process. 
  </UserResponse>
</Message>
<Message ID="CWSML7032I" severity="I" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7032I" varFormat="Java">
    security.wssecurity.CWSML7032I=CWSML7032I: The redirect target URL was retrieved from the [{0}] or [{1}] TAI custom property.  The [{2}] custom property is set to [{3}].
  </MsgText>
  <Explanation>
    The redirect target URL was obtained from the SAML TAI configuration. 
  </Explanation>
  <UserResponse>
    No user action is required. 
  </UserResponse>
</Message>
<Message ID="CWSML7028E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7028E" varFormat="Java">
    security.wssecurity.CWSML7028E=CWSML7028E: The evaluated value for the KeyInfo element in the Security Assertion Markup Language (SAML) assertion does not match the key defined in the SAML the configuration: [{0}].
  </MsgText>
  <Explanation>
    A key was obtained from the SAML assertion.  A key was defined in the SAML configuration.  These two keys do not match.  This condition is not allowed. 
  </Explanation>
  <UserResponse>
    Do one of the following: 1) Re-configure the SAML configuration to use the key that is in the SAML assertion.  2) Ensure that the creator of the SAML assertion uses the key defined in the SAML configuration. 
  </UserResponse>
</Message>
<Message ID="CWSML2004E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2004E" varFormat="Java">
    security.wssecurity.CWSML2004E=CWSML2004E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML0001E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML0001E" varFormat="Java">
    security.wssecurity.WSSML0001E=CWSML0001E: No key information is available for the SAML Provider (Token issuer).
  </MsgText>
  <Explanation>
    The key information for the Security Assertion Markup Language (SAML) provider in not available to sign a SAML assertion. 
  </Explanation>
  <UserResponse>
    Check the configuration information for the provider and ensure that the signing key information for the provider exists in its respective keystore. 
  </UserResponse>
</Message>
<Message ID="CWSML7031I" severity="I" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7031I" varFormat="Java">
    security.wssecurity.CWSML7031I=CWSML7031I: The redirect target URL was retrieved from the [{0}] parameter in the response.
  </MsgText>
  <Explanation>
    The redirect target URL was obtained from the SAMLResponse. 
  </Explanation>
  <UserResponse>
    No user action is required. 
  </UserResponse>
</Message>
<Message ID="CWSML7027E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7027E" varFormat="Java">
    security.wssecurity.CWSML7027E=CWSML7027E: The SecurityTokenReference element in the KeyInfo element in the Security Assertion Markup Language (SAML) assertion contains a sub-element that is not supported: [{0}].  The supported sub-elements are [{1}].
  </MsgText>
  <Explanation>
    The element shown in the message is used to retrieve the certificate to validate the signature or the key to decrypt the assertion.  The run time only supports a subset of retrieval methods.  The methods that are supported are shown in the message. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion uses one of the supported SecurityTokenReference sub-elements. 
  </UserResponse>
</Message>
<Message ID="CWSML2003E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2003E" varFormat="Java">
    security.wssecurity.CWSML2003E=CWSML2003E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML0000E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML0000E" varFormat="Java">
    security.wssecurity.WSSML0000E=CWSML0000E: This method is not implemented. 
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML7030E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7030E" varFormat="Java">
    security.wssecurity.CWSML7030E=CWSML7030E: The redirect target URL, [{0}], matches the value for the assertion consumer service (ACS) URL configured for this service provider.  You cannot redirect to the ACS URL.  The ACS URL is configured on the [{1}] TAI custom property. 
  </MsgText>
  <Explanation>
    The redirect target URL matches the value configured for the ACS URL.  This condition is not allowed. 
  </Explanation>
  <UserResponse>
    See the message that displays after CWSML7030E to determine where the redirect target URL was obtained then modify the SAML TAI configuration or IdP configuration to ensure that the redirect target URL does not match the ACS URL. 
  </UserResponse>
</Message>
<Message ID="CWSML7026E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7026E" varFormat="Java">
    security.wssecurity.CWSML7026E=CWSML7026E: The [{0}] sub-element of the X509Data element in the Security Assertion Markup Language (SAML) assertion is not supported.  The supported elements are [{1}].
  </MsgText>
  <Explanation>
    The element shown in the message is used to retrieve the certificate to validate the signature or the key to decrypt the assertion.  The run time only supports a subset of retrieval methods.  The methods that are supported are shown in the message. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion uses one of the supported X509Data types. 
  </UserResponse>
</Message>
<Message ID="CWSML2038E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2038E" varFormat="Java">
    security.wssecurity.CWSML2038E=CWSML2038E: Unknown SAML assertion namespace.
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) assertion namespace is not known. 
  </Explanation>
  <UserResponse>
    Provide a valid namespace. 
  </UserResponse>
</Message>
<Message ID="CWSML2002E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2002E" varFormat="Java">
    security.wssecurity.CWSML2002E=CWSML2002E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML7025E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7025E" varFormat="Java">
    security.wssecurity.CWSML7025E=CWSML7025E: The [{0}] sub-element of the KeyInfo element in the Security Assertion Markup Language (SAML) assertion is not supported.  The supported elements are [{1}].
  </MsgText>
  <Explanation>
    The element shown in the message is used to retrieve the certificate to validate the signature or the key to decrypt the SAML assertion.  The run time only supports a subset of retrieval methods.  The methods that are supported are shown in the message. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion uses one of the supported KeyInfo types. 
  </UserResponse>
</Message>
<Message ID="CWSML2037E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2037E" varFormat="Java">
    security.wssecurity.CWSML2037E=CWSML2037E: Create request for TokenType is not valid.
  </MsgText>
  <Explanation>
    The create request for the TokenType value is not valid. 
  </Explanation>
  <UserResponse>
    Provide a valid TokenType value. 
  </UserResponse>
</Message>
<Message ID="CWSML2001E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2001E" varFormat="Java">
    security.wssecurity.CWSML2001E=CWSML2001E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML7024W" severity="W" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7024W" varFormat="Java">
    security.wssecurity.CWSML7024W=CWSML7024W: [{0}] is set on the SAMLAttribute [{1}].  {0} is not supported for a {2} token.  The setting for {0} will be ignored and will not be reflected in the SAML XML.
  </MsgText>
  <Explanation>
    A SAMLAttribute object has a value set in a field that is not supported by the SAML token type that it is being added to.  The attribute will be added to the SAML token, but the value for the unsupported attribute will not be reflected in the XML associated with the SAML token. 
  </Explanation>
  <UserResponse>
    Do not set values in a SAMLAttribute object that are incompatible with the SAML token type to which they are being added. 
  </UserResponse>
</Message>
<Message ID="CWSML0004E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML0004E" varFormat="Java">
    security.wssecurity.CWSML0004E=CWSML0004E: Subject does not have a Principal. Can not create a valid CredentialConfig object.
  </MsgText>
  <Explanation>
    An attempt to create a CredentialConfig object, which is based on a Subject without a Principal, has been detected. A valid CredentialConfig object cannot be created. 
  </Explanation>
  <UserResponse>
    Specify a valid Subject with a valid Principal. 
  </UserResponse>
</Message>
<Message ID="CWSML2036E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2036E" varFormat="Java">
    security.wssecurity.CWSML2036E=CWSML2036E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML2000E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2000E" varFormat="Java">
    security.wssecurity.CWSML2000E=CWSML2000E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML0003E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML0003E" varFormat="Java">
    security.wssecurity.CWSML0003E=CWSML0003E: No Subject was specified. Can not create a valid CredentialConfig object.
  </MsgText>
  <Explanation>
    An attempt to create a CredentialConfig object, which is based on a null Subject, has been detected. A valid CredentialConfig object cannot be created. 
  </Explanation>
  <UserResponse>
    Specify a valid Subject. 
  </UserResponse>
</Message>
<Message ID="CWSML7023E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7023E" varFormat="Java">
    security.wssecurity.CWSML7023E=CWSML7023E: The Assertion XML associated with the [{0}] object is encrypted.  The [{1}] method cannot be performed on an encrypted Assertion.
  </MsgText>
  <Explanation>
    The method shown in the message was performed on an object that contains an encrypted Assertion.  This method is not allowed on an object that contains an encrypted Assertion. 
  </Explanation>
  <UserResponse>
    Ensure that the object does not contain an encrypted Assertion or do not invoke the method. 
  </UserResponse>
</Message>
<Message ID="CWSML7019E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7019E" varFormat="Java">
    security.wssecurity.CWSML7019E=CWSML7019E: The value for the Version attribute is not supported. The Version attribute value in the assertion is [{0}].  The value for the Version attribute in a SAML 2.0 assertion must be [{1}].
  </MsgText>
  <Explanation>
    The value for the Version attribute in the Security Assertion Markup Language (SAML) V2.0 assertion being processed is not correct.  There is only one correct value.  The correct value is shown in the message. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion sets the Version attribute in the SAML 2.0 assertion correctly. 
  </UserResponse>
</Message>
<Message ID="CWSML2035E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2035E" varFormat="Java">
    security.wssecurity.CWSML2035E=CWSML2035E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML6014E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6014E" varFormat="Java">
    security.wssecurity.WSSML6014E=CWSML6014E: Parameter type is not {0}
  </MsgText>
  <Explanation>
    The parameter type is incorrect. 
  </Explanation>
  <UserResponse>
    Check and modify to use the correct class type. 
  </UserResponse>
</Message>
<Message ID="CWSML7022E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7022E" varFormat="Java">
    security.wssecurity.CWSML7022E=CWSML7022E: The [{0}] object is read-only.  The [{1}] method cannot be performed on a read-only object.
  </MsgText>
  <Explanation>
    The method shown in the message was performed on an object that is read-only.  This method is not allowed on read-only objects. 
  </Explanation>
  <UserResponse>
    Ensure that the object is not read-only or do not invoke the method. 
  </UserResponse>
</Message>
<Message ID="CWSML7018E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7018E" varFormat="Java">
    security.wssecurity.CWSML7018E=CWSML7018E: The SessionNotOnOrAfter condition is out of range. The SessionNotOnOrAfter setting in the assertion is [{0}]. The current time is [{1}]. The current clock skew setting is {2} minutes.
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) assertion was received at a time that is at or after the SessionNotOnOrAfter setting in the assertion.  This condition is not allowed. Possible reasons for the error are that the receiver&apos;s clock is out of sync with the clock of the creator of the assertion or the assertion has been obtained and resent by an unauthorized application. 
  </Explanation>
  <UserResponse>
    Synchronize the clocks of the receiver and the creator of the assertion or increase the clock skew using the clockSkew custom property on the configured SAML token consumer. 
  </UserResponse>
</Message>
<Message ID="CWSML2034E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2034E" varFormat="Java">
    security.wssecurity.CWSML2034E=CWSML2034E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML6013E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6013E" varFormat="Java">
    security.wssecurity.WSSML6013E=CWSML6013E: An element or attribute: {0} was missing
  </MsgText>
  <Explanation>
    The missing element and attribute must be specified. 
  </Explanation>
  <UserResponse>
    Check and modify token issuer configuration. 
  </UserResponse>
</Message>
<Message ID="CWSML7021E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7021E" varFormat="Java">
    security.wssecurity.CWSML7021E=CWSML7021E: The [NotOnOrAfter] condition on the [SubjectConfirmationData] element is out of range. The NotOnOrAfter setting in the SubjectConfirmationData is [{0}]. The current time is [{1}]. The current clock skew setting is {2} minutes.
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) assertion was received at a time that is at or after the NotOnOrAfter setting on the SubjectConfirmationData in the assertion.  This condition is not allowed. Possible reasons for the error are that the receiver&apos;s clock is out of sync with the clock of the creator of the assertion, the assertion was cached on the client and resent after it expired, or the assertion has been obtained and resent by an unauthorized application. 
  </Explanation>
  <UserResponse>
    Synchronize the clocks of the receiver and the creator of the assertion, increase the clock skew using the clockSkew custom property on the SAML token consumer in the WS-Security provider bindings or, if using a WebSphere Application Server client, increase the cache cushion using cacheCushion custom property on the SAML token generator in the WS-Security client bindings. 
  </UserResponse>
</Message>
<Message ID="CWSML6009E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6009E" varFormat="Java">
    security.wssecurity.WSSML6009E=CWSML6009E: A null value was passed. 
  </MsgText>
  <Explanation>
    A null argument value has been passed on a setAuthnInstant method call. 
  </Explanation>
  <UserResponse>
    Do not pass a null argument value. 
  </UserResponse>
</Message>
<Message ID="CWSML7017E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7017E" varFormat="Java">
    security.wssecurity.CWSML7017E=CWSML7017E: The AuthnInstant in the assertion is after the current time.  The AuthnInstant setting in the assertion is [{0}].  The current time is [{1}]. The current clock skew setting is {2} minutes.
  </MsgText>
  <Explanation>
    The AuthnInstant in the Security Assertion Markup Language (SAML) assertion indicates that it was issued after the current time.  This condition is not allowed. A possible reason for the error is that the receiver&apos;s clock is out of sync with the clock of the creator of the assertion. 
  </Explanation>
  <UserResponse>
    Synchronize the clocks of the receiver and the creator of the assertion or increase the clock skew using the clockSkew custom property on the configured SAML token consumer. 
  </UserResponse>
</Message>
<Message ID="CWSML2033E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2033E" varFormat="Java">
    security.wssecurity.CWSML2033E=CWSML2033E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML2029E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2029E" varFormat="Java">
    security.wssecurity.CWSML2029E=CWSML2029E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML6012E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6012E" varFormat="Java">
    security.wssecurity.WSSML6012E=CWSML6012E: The expected Token type is SAML 2.0. 
  </MsgText>
  <Explanation>
    The expected token type is SAML 2.0. However, a different version has been found. 
  </Explanation>
  <UserResponse>
    Pass a valid SAML 2.0 version string. 
  </UserResponse>
</Message>
<Message ID="CWSML7020E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7020E" varFormat="Java">
    security.wssecurity.CWSML7020E=CWSML7020E: The [NotBefore] condition on the [SubjectConfirmationData] element is out of range. The NotBefore setting in the SubjectConfirmationData is [{0}]. The current time is [{1}]. The current clock skew setting is {2} minutes.
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) assertion was received at a time that is earlier than the NotBefore setting on the SubjectConfirmationData in the assertion.  This condition is not allowed. A possible reason for the error is that the receiver&apos;s clock is out of sync with the clock of the creator of the assertion. 
  </Explanation>
  <UserResponse>
    Synchronize the clocks of the receiver and the creator of the assertion or increase the clock skew using the clockSkew custom property on the configured SAML token consumer. 
  </UserResponse>
</Message>
<Message ID="CWSML6008E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6008E" varFormat="Java">
    security.wssecurity.WSSML6008E=CWSML6008E: A null value was passed. 
  </MsgText>
  <Explanation>
    A null argument value has been passed on a setAuthnContext method call. 
  </Explanation>
  <UserResponse>
    Do not pass a null argument value. 
  </UserResponse>
</Message>
<Message ID="CWSML7016E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7016E" varFormat="Java">
    security.wssecurity.CWSML7016E=CWSML7016E: The SAML 1.1 assertion being processed contains no [ConfirmationMethod] elements.  At least one [ConfirmationMethod] element must be present in the SAML assertion to be processed successfully.
  </MsgText>
  <Explanation>
    In the Security Assertion Markup Language (SAML) V1.1 schema, the ConfirmationMethod element is a child of the SubjectConfirmation element. Although the schema does not require that the ConfirmationMethod be present in the SubjectConfirmation element, in order for a SAML assertion to be processed successfully, at least one ConfirmationMethod must be present in the assertion. The valid values for the ConfirmationMethod element are [urn:oasis:names:tc:SAML:1.0:cm:bearer, urn:oasis:names:tc:SAML:1.0:cm:sender-vouches, and urn:oasis:names:tc:SAML:1.0:cm:holder-of-key]. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion includes at least one ConfirmationMethod in the assertion.  The ConfirmationMethod element is a child of the SubjectConfirmation element. The SubjectConfirmation element is a child of the Subject element, which can be a child of either the AttributeStatement or AuthenticationStatement elements. 
  </UserResponse>
</Message>
<Message ID="CWSML2032E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2032E" varFormat="Java">
    security.wssecurity.CWSML2032E=CWSML2032E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML2028E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2028E" varFormat="Java">
    security.wssecurity.CWSML2028E=CWSML2028E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML6011E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6011E" varFormat="Java">
    security.wssecurity.WSSML6011E=CWSML6011E: Could not create SAML token from XMLStructure. 
  </MsgText>
  <Explanation>
    A Security Assertion Markup Language (SAML) token cannot be created from the XMLStructure that is provided on a call to the newSAMLToken method. 
  </Explanation>
  <UserResponse>
    Pass a valid XML structure for the assertion. 
  </UserResponse>
</Message>
<Message ID="CWSML6007E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6007E" varFormat="Java">
    security.wssecurity.WSSML6007E=CWSML6007E: Invalid AuthnContextClassRef. 
  </MsgText>
  <Explanation>
    The authentication method is not valid. 
  </Explanation>
  <UserResponse>
    Use a valid authentication method. 
  </UserResponse>
</Message>
<Message ID="CWSML7015E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7015E" varFormat="Java">
    security.wssecurity.CWSML7015E=CWSML7015E: The [Subject] element does not contain either [NameIdentifier] or [SubjectConfirmation] sub-elements.  This condition is not allowed.
  </MsgText>
  <Explanation>
    If a Security Assertion Markup Language (SAML) V1.1 assertion contains a Subject element, the Subject element must contain at least one NameIdentifier or SubjectConfirmation sub-elements.  The SAML 1.1 assertion being validated contains a Subject element that contains neither NameIdentifier or SubjectConfirmation sub-elements. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion either does not include the Subject element, or includes at least one of the NameIdentifier or SubjectConfirmation sub-elements in the Subject element. 
  </UserResponse>
</Message>
<Message ID="CWSML2031E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2031E" varFormat="Java">
    security.wssecurity.CWSML2031E=CWSML2031E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML2027E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2027E" varFormat="Java">
    security.wssecurity.CWSML2027E=CWSML2027E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML6010E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6010E" varFormat="Java">
    security.wssecurity.WSSML6010E=CWSML6010E: Invalid SAML assertion. 
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) assertion on a newSAMLToken method call is not valid. 
  </Explanation>
  <UserResponse>
    Pass a valid XML structure for the assertion. 
  </UserResponse>
</Message>
<Message ID="CWSML6006E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6006E" varFormat="Java">
    security.wssecurity.WSSML6006E=CWSML6006E: Only String or OMElement are allowed for marshalling. 
  </MsgText>
  <Explanation>
    You cannot marshal an object that is not a String or an OMElement data type. 
  </Explanation>
  <UserResponse>
    Check the type of object that you are attempting to marshal and ensure that it is a String or a OMElement data type. 
  </UserResponse>
</Message>
<Message ID="CWSML7014E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7014E" varFormat="Java">
    security.wssecurity.CWSML7014E=CWSML7014E: The AuthenticationInstant in the assertion is after the current time.  The AuthenticationInstant setting in the assertion is [{0}].  The current time is [{1}]. The current clock skew setting is {2} minutes.
  </MsgText>
  <Explanation>
    The AuthenticationInstant in the Security Assertion Markup Language (SAML) assertion indicates that it was issued after the current time.  This condition is not allowed. A possible reason for the error is that the receiver&apos;s clock is out of sync with the clock of the creator of the assertion. 
  </Explanation>
  <UserResponse>
    Synchronize the clocks of the receiver and the creator of the assertion or increase the clock skew using the clockSkew custom property on the configured SAML token consumer. 
  </UserResponse>
</Message>
<Message ID="CWSML2030E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2030E" varFormat="Java">
    security.wssecurity.CWSML2030E=CWSML2030E: The specified confirmation method is not supported.
  </MsgText>
  <Explanation>
    An unsupported confirmation method has been specified. 
  </Explanation>
  <UserResponse>
    Specify a &quot;bearer,&quot; &quot;holder-of-key,&quot; or &quot;sender-vouches&quot; confirmation method. 
  </UserResponse>
</Message>
<Message ID="CWSML2026E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2026E" varFormat="Java">
    security.wssecurity.CWSML2026E=CWSML2026E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML6005E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6005E" varFormat="Java">
    security.wssecurity.WSSML6005E=CWSML6005E: Signed SAML assertion is not allowed to be modified. 
  </MsgText>
  <Explanation>
    You cannot modify a signed Security Assertion Markup Language (SAML) assertion. 
  </Explanation>
  <UserResponse>
    Do not attempt to modify a signed SAML assertion. 
  </UserResponse>
</Message>
<Message ID="CWSML7013E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7013E" varFormat="Java">
    security.wssecurity.CWSML7013E=CWSML7013E: The [AttributeStatement] element does not contain either [Subject] or [Attribute] sub-elements.  This condition is not allowed.
  </MsgText>
  <Explanation>
    If a Security Assertion Markup Language (SAML) V1.1 assertion contains an AttributeStatement element, the AttributeStatement element must contain at least one Subject or Attribute sub-elements.  The SAML 1.1 assertion being validated contains an AttributeStatement element that contains neither Subject or Attribute sub-elements. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion either does not include the AttributeStatement element, or includes at least one of the Subject or Attribute sub-elements in the AttributeStatement element. 
  </UserResponse>
</Message>
<Message ID="CWSML7009E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7009E" varFormat="Java">
    security.wssecurity.CWSML7009E=CWSML7009E: The value [{0}] for the [{1}] sub-element of [{2}] in the SAML assertion is not valid.  The valid values are [{3}].
  </MsgText>
  <Explanation>
    An element in the Security Assertion Markup Language (SAML) assertion being processed contains an element value that is not supported.  The valid values are shown in the message. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion includes a valid value for the element shown in the message. 
  </UserResponse>
</Message>
<Message ID="CWSML2025E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2025E" varFormat="Java">
    security.wssecurity.CWSML2025E=CWSML2025E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML6004E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6004E" varFormat="Java">
    security.wssecurity.WSSML6004E=CWSML6004E: Null issue Date provided. 
  </MsgText>
  <Explanation>
    A null issue date has been provided. 
  </Explanation>
  <UserResponse>
    Do not provide a null date value. 
  </UserResponse>
</Message>
<Message ID="CWSML7012E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7012E" varFormat="Java">
    security.wssecurity.CWSML7012E=CWSML7012E: An element exists in the SAML assertion that is not supported.  The unsupported element is [{0}] and it is a sub-element of [{1}].
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) assertion being processed contains an element that is valid for the schema, but the run time does not support the element.  Processing of the SAML assertion has stopped. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion does not include the element shown in the error message. 
  </UserResponse>
</Message>
<Message ID="CWSML7008E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7008E" varFormat="Java">
    security.wssecurity.CWSML7008E=CWSML7008E: The value [{0}] for the [{1}] attribute on the [{2}] element in the SAML assertion is not valid.  The valid values are [{3}].
  </MsgText>
  <Explanation>
    An element in the Security Assertion Markup Language (SAML) assertion being processed contains an attribute that is not supported.  The valid values are shown in the message. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion includes a valid value for the element&apos;s attribute shown in the message. 
  </UserResponse>
</Message>
<Message ID="CWSML2024E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2024E" varFormat="Java">
    security.wssecurity.CWSML2024E=CWSML2024E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML6003E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6003E" varFormat="Java">
    security.wssecurity.WSSML6003E=CWSML6003E: Null or empty ID. 
  </MsgText>
  <Explanation>
    A Null or empty ID has been provided for a Security Assertion Markup Language (SAML) assertion. 
  </Explanation>
  <UserResponse>
    Provide a name identifier. 
  </UserResponse>
</Message>
<Message ID="CWSML7011E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7011E" varFormat="Java">
    security.wssecurity.CWSML7011E=CWSML7011E: An element exists in the SAML assertion that is not supported.  The unsupported element is [{0}].
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) assertion being processed contains an element that is valid for the schema, but the run time does not support the element.  Processing of the SAML assertion has stopped. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion does not include the element shown in the error message. 
  </UserResponse>
</Message>
<Message ID="CWSML7007E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7007E" varFormat="Java">
    security.wssecurity.CWSML7007E=CWSML7007E: The SAML assertion being processed is not valid.
  </MsgText>
  <Explanation>
    The Security Assertion Markup Language (SAML) assertion on a newSAMLToken method call or inbound message is not valid.  The reason for the error will be shown after this message. 
  </Explanation>
  <UserResponse>
    See the user action for the message that appears after this error. 
  </UserResponse>
</Message>
<Message ID="CWSML2023E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2023E" varFormat="Java">
    security.wssecurity.CWSML2023E=CWSML2023E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML2019E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2019E" varFormat="Java">
    security.wssecurity.CWSML2019E=CWSML2019E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<Message ID="CWSML6002E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.WSSML6002E" varFormat="Java">
    security.wssecurity.WSSML6002E=CWSML6002E: Unsupported Statement type. 
  </MsgText>
  <Explanation>
    This Security Assertion Markup Language (SAML) statement is not supported. 
  </Explanation>
  <UserResponse>
    Do not use unsupported SAML statements. 
  </UserResponse>
</Message>
<Message ID="CWSML7010E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7010E" varFormat="Java">
    security.wssecurity.CWSML7010E=CWSML7010E: The [{0}] sub-element of the [{1}] element in the SAML assertion element is missing or empty.
  </MsgText>
  <Explanation>
    A Security Assertion Markup Language (SAML) assertion must contain the element pair shown in the message. The SAML assertion being validated either does not have the sub-element shown in the message, or the sub-element does not have a value. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion includes the element pair indicated in the error message in the Assertion. 
  </UserResponse>
</Message>
<Message ID="CWSML7006E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML7006E" varFormat="Java">
    security.wssecurity.CWSML7006E=CWSML7006E: The [{0}] attribute on the [{1}] element is missing or empty.  This condition is not allowed.
  </MsgText>
  <Explanation>
    When a Security Assertion Markup Language (SAML) assertion contains the element shown in the message, it must also contain the attribute shown in the message.  The SAML assertion being validated does not have the attribute shown in the message, or the attribute does not have a value. 
  </Explanation>
  <UserResponse>
    Ensure that the creator of the SAML assertion includes the attribute shown in the message. 
  </UserResponse>
</Message>
<Message ID="CWSML2022E" severity="E" prefix="yes">
  <MsgText pgmKey="security.wssecurity.CWSML2022E" varFormat="Java">
    security.wssecurity.CWSML2022E=CWSML2022E: This method is not implemented.
  </MsgText>
  <Explanation>
    This method is not implemented. 
  </Explanation>
  <UserResponse>
    None 
  </UserResponse>
</Message>
<!-- END MESSAGES -->
</TMSSource>
