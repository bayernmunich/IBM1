<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="../../resources/stylesheets/wasmsgxml.css"?>
<TMSSource name="TivoliMessages" tmsVersion="1.0" xml:lang="en">
<!-- CMVC MSG File Name = ws/code/client/src/com/ibm/ws/client/applicationclient/ResourceBundle.nlsprops -->
<!-- DO NOT EDIT THIS FILE - This file was generated by the XML/Html & Property emitter -->
<!-- BEGIN MESSAGES -->
<Message ID="WSCL0204W" severity="W" prefix="yes">
  <MsgText pgmKey="metadata.failedtospawnprocess" varFormat="Java">
    metadata.failedtospawnprocess=WSCL0204W: Failed to start the process to remove the temporary directory {0}.
  </MsgText>
  <Explanation>
    The application client runtime was unable to start the process used to remove the stated temporary directory that the runtime created.
  </Explanation>
  <UserResponse>
    Locate the stated temporary directory and manually remove the directory and files. They are no longer needed and are wasting space on the hard drive. This error generally occurs when java.exe is not in your system path. To prevent this error in the future, locate java.exe and add its path to your system path.
  </UserResponse>
</Message>
<Message ID="WSCL0351W" severity="W" prefix="yes">
  <MsgText pgmKey="cc.nobinder" varFormat="Java">
    cc.nobinder=WSCL0351W: Unable to create a resource for {0} because the resource type {1} specified in the Application Client deployment descriptor is not supported. Verify the type specified on the &lt;res-type&gt; entry is one of the following: {2}
  </MsgText>
  <Explanation>
    The application client runtime was unable to create the stated resource because the resource type specified by the &lt;res-type&gt; element in the application client deployment descriptor was not supported. This can occur if the deployment descriptor was created without using the Application Assembly Tool.
  </Explanation>
  <UserResponse>
    Change the type specified on the &lt;res-type&gt; entry to one of the stated supported types or use the Application Assembly Tool to configure the resource.
  </UserResponse>
</Message>
<Message ID="WSCL1203W" severity="W" prefix="yes">
  <MsgText pgmKey="duplicate.callback.method.warning" varFormat="Java">
    duplicate.callback.method.warning=WSCL1203W: More than one PostConstruct or PreDestroy method exists in the {1} class. The {0} PostConstruct or PreDestroy method will not be invoked by the container.
  </MsgText>
  <Explanation>
    There is more than one PostConstruct method or PreDestroy method that is declared in the class.
  </Explanation>
  <UserResponse>
    No action is required. The container invokes the first method that it detects.
  </UserResponse>
</Message>
<Message ID="WSCL0004I" severity="I" prefix="yes">
  <MsgText pgmKey="resource.setproperty" varFormat="Java">
    resource.setproperty=WSCL0004I: Setting resource Property {0} to value {1}.
  </MsgText>
  <Explanation>
    The application client runtime set the stated property to the stated value for the resource.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0008I" severity="I" prefix="yes">
  <MsgText pgmKey="ccres.addingbinder" varFormat="Java">
    ccres.addingbinder=WSCL0008I: Adding binder {0} from the properties file.
  </MsgText>
  <Explanation>
    The application client runtime has added the resource binders defined in the properties file. Resource binders defined in the properties file are optional and are used to extend or override the default behavior of the application client runtime.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0018I" severity="I" prefix="yes">
  <MsgText pgmKey="ccrct.factoryfilter" varFormat="Java">
    ccrct.factoryfilter=WSCL0018I: Processing Resource Provider factory: {0}.
  </MsgText>
  <Explanation>
    The Application Client Resource Configuration Tool is filtering the stated resource provider factories to obtain the pertinent resource providers.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0021I" severity="I" prefix="yes">
  <MsgText pgmKey="ccrct.openear" varFormat="Java">
    ccrct.openear=WSCL0021I: Opening archive file: {0}.
  </MsgText>
  <Explanation>
    The Application Client Resource Configuration Tool is opening the stated archive file to obtain the client resource configuration file.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0700E" severity="E" prefix="yes">
  <MsgText pgmKey="jmsfac.nojmsclass" varFormat="Java">
    jmsfac.nojmsclass=WSCL0700E: The JMS classname {0} is not of the required type.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="WSCL0151W" severity="W" prefix="yes">
  <MsgText pgmKey="resource.invalidPropValue" varFormat="Java">
    resource.invalidPropValue=WSCL0151W: The property value for Property {0} for the {1} Resource was set to an invalid value of {2}.
  </MsgText>
  <Explanation>
    The stated property for the stated resource was either not a valid type or was not set. The property must be of type java.lang.String, java.lang.Boolean or java.lang.Integer. Properties for resources are configured using the Application Client Resource Configuration Tool . This property was ignored.
  </Explanation>
  <UserResponse>
    Ensure the property value is set to a valid type.
  </UserResponse>
</Message>
<Message ID="WSCL0330W" severity="W" prefix="yes">
  <MsgText pgmKey="ccres.badclasspath" varFormat="Java">
    ccres.badclasspath=WSCL0330W: Unable to update the classpath for resource {0} because the classpath {1} specified in the client resource configuration file is not in the correct format.
  </MsgText>
  <Explanation>
    The application client runtime was unable to update the class path for the stated resource because the class path is not in the correct format.
  </Explanation>
  <UserResponse>
    Use the Application Client Resource Configuration Tool to change the stated class path.
  </UserResponse>
</Message>
<Message ID="WSCL0152W" severity="W" prefix="yes">
  <MsgText pgmKey="resource.JMSBindingNotFound" varFormat="Java">
    resource.JMSBindingNotFound=WSCL0152W: The Class for the JNDI binding mechanism {0} was not found.
  </MsgText>
  <Explanation>
    The application client runtime was unable to find the class for instantiating the stated JMS binding mechanism. The JNDI binding mechanism is configured using the Application Client Resource Configuration Tool.
  </Explanation>
  <UserResponse>
    Ensure that the JMS binding mechanism class exists and is available in the class path.
  </UserResponse>
</Message>
<Message ID="WSCL0213E" severity="E" prefix="yes">
  <MsgText pgmKey="metadata.notaclientmodule" varFormat="Java">
    metadata.notaclientmodule=WSCL0213E: The specified client jar file {0} with the specified alternate deployment descriptor {1} is not an application client archive module.
  </MsgText>
  <Explanation>
    The jar file specified by the -CCjar parameter with deployment descriptor specified by the -CCaltDD parameter is not a application client jar file within the Enterprise archive file.
  </Explanation>
  <UserResponse>
    Modify the -CCjar parameter and the -CCaltDD parameter to specify an application client module within the Enterprise archive file and try your request again.
  </UserResponse>
</Message>
<Message ID="WSCL0005I" severity="I" prefix="yes">
  <MsgText pgmKey="resource.JMSBinding" varFormat="Java">
    resource.JMSBinding=WSCL0005I: JMS resource using supplied JNDI binding mechanism: {0}.
  </MsgText>
  <Explanation>
    The application client runtime is using the stated JNDI binding mechanism for the JMS resource. The binding mechanism specifies a JMS class that provides JMS services to the client and resides on the locally configured client system. The JNDI binding mechanism class can be configured using the Application Client Resource Configuration Tool.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0154W" severity="W" prefix="yes">
  <MsgText pgmKey="resource.nocreateBindingCtor" varFormat="Java">
    resource.nocreateBindingCtor=WSCL0154W: Unable to construct an instance of JNDI binding mechanism {0}(java.util.Properties)
  </MsgText>
  <Explanation>
    The application client runtime failed to run the stated class constructor due to an unexpected error.
  </Explanation>
  <UserResponse>
    A programming error exists in the constructor. Analyze the exception received and correct the problem.
  </UserResponse>
</Message>
<Message ID="WSCL0125E" severity="E" prefix="yes">
  <MsgText pgmKey="jdbc.illegalargument" varFormat="Java">
    jdbc.illegalargument=WSCL0125E: Received an IllegalArgumentException while attempting to set the value for DataSource Property {0} on DataSource {1}. Unknown parameters are required. : {2}
  </MsgText>
  <Explanation>
    The application client runtime received an IllegalArgumentException when attempting to set a property on the JDBC data source. Each JDBC data source property requires a method to enable setting the property with the only parameter being the property value.
  </Explanation>
  <UserResponse>
    Ensure that the JDBC data source property set method exists and only expects one parameter containing the property value.
  </UserResponse>
</Message>
<Message ID="WSCL0701E" severity="E" prefix="yes">
  <MsgText pgmKey="jmsfac.noreference" varFormat="Java">
    jmsfac.noreference=WSCL0701E: The specified object reference for creating the JMS object is not of the required type javax.naming.Reference.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="WSCL0208E" severity="E" prefix="yes">
  <MsgText pgmKey="metadata.archivedircannotbefile" varFormat="Java">
    metadata.archivedircannotbefile=WSCL0208E: System property {0} cannot be set to a file.
  </MsgText>
  <Explanation>
    The stated system property was set to a filename, but it should be set to a directory.
  </Explanation>
  <UserResponse>
    Change the value of the stated system property to a directory. If your ear file has already been extracted to the hard drive, you can change the value of the system property to the root directory where it was extracted. If you would like the launchClient command to extract the ear file, specify the desired target directory.
  </UserResponse>
</Message>
<Message ID="WSCL0212E" severity="E" prefix="yes">
  <MsgText pgmKey="metadata.noclientmodule" varFormat="Java">
    metadata.noclientmodule=WSCL0212E: The specified client jar file {0} with the specified alternate deployment descriptor {1} cannot be found in the Enterprise archive file.
  </MsgText>
  <Explanation>
    The jar file specified by the -CCjar parameter with deployment descriptor specified by the -CCaltDD parameter cannot be found within the Enterprise archive file.
  </Explanation>
  <UserResponse>
    Modify either the -CCjar parameter or the -CCaltDD parameter to specify an application client module within the Enterprise archive file and try your request again.
  </UserResponse>
</Message>
<Message ID="WSCL0102E" severity="E" prefix="yes">
  <MsgText pgmKey="ccparms.valuemissing" varFormat="Java">
    ccparms.valuemissing=WSCL0102E: Missing property value for -CC parameter: {0}.
  </MsgText>
  <Explanation>
    The stated -CC parameter was specified without a value on the launchClient command. For example, you may have specified -CCverbose. All -CC parameters require a value to be specified. For example, -CCverbose=true.
  </Explanation>
  <UserResponse>
    Specify the property value on the -CC parameter and try again. Specify the -help or -? flag on the launchClient command for additional help.
  </UserResponse>
</Message>
<Message ID="WSCL0331E" severity="E" prefix="yes">
  <MsgText pgmKey="ccres.URLStreamHandlerError" varFormat="Java">
    ccres.URLStreamHandlerError=WSCL0331E: An unexpected error occurred while trying to create URL stream handler class {0} for protocol {1}.
  </MsgText>
  <Explanation>
    The Application Client runtime was unable to create the stated URL stream handler class for the stated protocol. This is most likely because the stream handler class was specified incorrectly when the URL provider was configured or the stated stream handler class could not be found in the class path.
  </Explanation>
  <UserResponse>
    Use the Application Client Resource Configuration Tool to find the URL provider for the stated protocol and verify that the stream handler class field value and the class path field value are correct.
  </UserResponse>
</Message>
<Message ID="WSCL0801I" severity="I" prefix="yes">
  <MsgText pgmKey="ccsm.success" varFormat="Java">
    ccsm.success=WSCL0801I: Security manager created and enabled successfully.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0036I" severity="I" prefix="yes">
  <MsgText pgmKey="metadata.parsingurls" varFormat="Java">
    metadata.parsingurls=WSCL0036I: Parsing classpath: {0}
  </MsgText>
  <Explanation>
    The Application Client runtime is parsing the stated class path string into separate class path entries.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL1003E" severity="E" prefix="yes">
  <MsgText pgmKey="rar.extracterror" varFormat="Java">
    rar.extracterror=WSCL1003E: Error extracting archive: directory {0} does not exist or is not a directory.
  </MsgText>
  <Explanation>
    The install directory could not be created.
  </Explanation>
  <UserResponse>
    Check the specified installed connectors directory to ensure it is correct.
  </UserResponse>
</Message>
<Message ID="WSCL0131E" severity="E" prefix="yes">
  <MsgText pgmKey="jdbc.introspectionException" varFormat="Java">
    jdbc.introspectionException=WSCL0131E: Received an IntrospectionException while attempting to introspect DataSource {1}: {2}
  </MsgText>
  <Explanation>
    The application client runtime received an IntrospectionException when attempting to process the JDBC data source.
  </Explanation>
  <UserResponse>
    Analyze the exception message data and correct the problem. For additional help enable debug by specifying the -CCtrace flag on the launchClient command.
  </UserResponse>
</Message>
<Message ID="WSCL0103E" severity="E" prefix="yes">
  <MsgText pgmKey="ccparms.invalidCCvalue" varFormat="Java">
    ccparms.invalidCCvalue=WSCL0103E: An invalid -CC property value was specified: {0}.
  </MsgText>
  <Explanation>
    A -CC property was specified with an value which is not valid on the launchClient command.
  </Explanation>
  <UserResponse>
    Specify a valid property value for the -CC parameter and try again. Specify the -help or -? flag on the launchClient command for additional help.
  </UserResponse>
</Message>
<Message ID="WSCL0121E" severity="E" prefix="yes">
  <MsgText pgmKey="jdbc.DSclassnotfound" varFormat="Java">
    jdbc.DSclassnotfound=WSCL0121E: The Class for DataSource {0} was not found: {1}
  </MsgText>
  <Explanation>
    The JDBC data source class was not found.
  </Explanation>
  <UserResponse>
    Ensure that the data source class exists and place it in the class path so that it may be located by the application client runtime. For additional help enable debug by specifying the -CCtrace flag on the launchClient command.
  </UserResponse>
</Message>
<Message ID="WSCL0019I" severity="I" prefix="yes">
  <MsgText pgmKey="ccrct.factorytype" varFormat="Java">
    ccrct.factorytype=WSCL0019I: Found Resource Provider factory of type: {0}.
  </MsgText>
  <Explanation>
    The Application Client Resource Configuration Tool has encountered a resource provider factory of the stated type.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0032I" severity="I" prefix="yes">
  <MsgText pgmKey="metadata.loadingurls" varFormat="Java">
    metadata.loadingurls=WSCL0032I: Loading the following URLs with the class loader: {0}
  </MsgText>
  <Explanation>
    The application client runtime is loading the stated URLs. This list is a superset of the resource references that have been configured for this client application with the Application Client Resource Configuration Tool . This helps to determine why a resource reference is not being found.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0159W" severity="W" prefix="yes">
  <MsgText pgmKey="resource.datasourceerror" varFormat="Java">
    resource.datasourceerror=WSCL0159W: Unable to create a data source resource with properties: {0} because:
  </MsgText>
  <Explanation>
    The application client runtime received an unexpected exception while creating the stated data source resource.
  </Explanation>
  <UserResponse>
    Analyze the stated exception received and correct the problem.
  </UserResponse>
</Message>
<Message ID="WSCL0156W" severity="W" prefix="yes">
  <MsgText pgmKey="resource.urlerror" varFormat="Java">
    resource.urlerror=WSCL0156W: Unable to create a URL resource because:
  </MsgText>
  <Explanation>
    The application client runtime received an unexpected exception while creating the URL resource.
  </Explanation>
  <UserResponse>
    Analyze the stated exception received and correct the problem.
  </UserResponse>
</Message>
<Message ID="WSCL0028I" severity="I" prefix="yes">
  <MsgText pgmKey="ccenv.binding" varFormat="Java">
    ccenv.binding=WSCL0028I: Binding environment entry:
           JNDI name: {0}
           Type: {1}
           Value: {2}
           Description: {3}
  </MsgText>
  <Explanation>
    The application client runtime is binding the object for the environment entry to the local namespace using the stated JNDI name. Environment entries are configured using the Application Assembly Tool.
  </Explanation>
  <UserResponse>
    No action is required. The -CCverbose flag was specified on the launchClient command, and this message is a result of setting that flag. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0023I" severity="I" prefix="yes">
  <MsgText pgmKey="ccrct.createrepository" varFormat="Java">
    ccrct.createrepository=WSCL0023I: The resource respository was not found. Creating a new repository: {0}
  </MsgText>
  <Explanation>
    The Application Client Resource Configuration Tool was unable to locate an existing resource repository. A new resource repository is being created with the stated name.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0122E" severity="E" prefix="yes">
  <MsgText pgmKey="jdbc.illegalaccessDS" varFormat="Java">
    jdbc.illegalaccessDS=WSCL0122E: Received an IllegalAccessException while attempting to access or create DataSource {0}: {1}
  </MsgText>
  <Explanation>
    The application client runtime received an IllegalAccessException when attempting to access the JDBC data source. The JDBC data source class is protected and cannot be accessed by the application client runtime.
  </Explanation>
  <UserResponse>
    Change the JDBC data source to be publicly available. For additional help enable debug by specifying the -CCtrace flag on the launchClient command.
  </UserResponse>
</Message>
<Message ID="WSCL0350W" severity="W" prefix="yes">
  <MsgText pgmKey="cc.resourcewarning" varFormat="Java">
    cc.resourcewarning=WSCL0350W: Unable to create a resource for {0} because the following error occurred:
  </MsgText>
  <Explanation>
    The application client runtime encountered an unexpected exception while creating the stated resource.
  </Explanation>
  <UserResponse>
    Analyze the stated exception received and correct the problem.
  </UserResponse>
</Message>
<Message ID="WSCL0020I" severity="I" prefix="yes">
  <MsgText pgmKey="ccrct.providertype" varFormat="Java">
    ccrct.providertype=WSCL0020I: Processed Resource Provider of type: {0}.
  </MsgText>
  <Explanation>
    The Application Client Resource Configuration Tool has processed a resource provider factory of the stated type.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0120E" severity="E" prefix="yes">
  <MsgText pgmKey="jdbc.missingproperty" varFormat="Java">
    jdbc.missingproperty=WSCL0120E: The JDBC property {0} is required.
  </MsgText>
  <Explanation>
    A required JDBC property was not specified.
  </Explanation>
  <UserResponse>
    Analyze the message data to identify the missing JDBC required property. For additional help enable debug by specifying the -CCtrace flag on the launchClient command.
  </UserResponse>
</Message>
<Message ID="WSCL0155W" severity="W" prefix="yes">
  <MsgText pgmKey="resource.malformedurl" varFormat="Java">
    resource.malformedurl=WSCL0155W: The URL specification {0} is not valid.
  </MsgText>
  <Explanation>
    The application client runtime was unable to create a URL for the stated URL specification. The URL specified in the client resource configuration file is not properly formed.
  </Explanation>
  <UserResponse>
    Correct the URL specification by using the Application Client Resource Configuration Tool.
  </UserResponse>
</Message>
<Message ID="WSCL0003I" severity="I" prefix="yes">
  <MsgText pgmKey="jdbc.getsetter" varFormat="Java">
    jdbc.getsetter=WSCL0003I: Establish a setter method on the DataSource {0} for the Property {1}.
  </MsgText>
  <Explanation>
    The application client runtime has established that a method for setting the stated JDBC data source property exists.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0034I" severity="I" prefix="yes">
  <MsgText pgmKey="cceex.binding" varFormat="Java">
    cceex.binding=WSCL0034I: Binding Enterprise Extension resource {0}
  </MsgText>
  <Explanation>
    The application client runtime is binding the stated enterprise extension resource into the local namespace.
  </Explanation>
  <UserResponse>
    No action is required. The -CCverbose flag was specified on the launchClient command, and this message is a result of setting that flag. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0106W" severity="W" prefix="yes">
  <MsgText pgmKey="ccparms.deprecated" varFormat="Java">
    ccparms.deprecated=WSCL0106W: The parameter {0} has been deprecated and will not be used.
  </MsgText>
  <Explanation>
    The specified parameter is no longer valid and will not be used by the application client Runtime.
  </Explanation>
  <UserResponse>
    Remove the specified parameter from your invocation of the application client runtime.
  </UserResponse>
</Message>
<Message ID="WSCL0704E" severity="E" prefix="yes">
  <MsgText pgmKey="jmsfac.illegalargument" varFormat="Java">
    jmsfac.illegalargument=WSCL0704E: Received an IllegalArgumentException while attempting to set the value for Property {0} on object {1} : {2}
  </MsgText>
  <Explanation>
    The application client runtime attempted to set the specified custom property, however the value specified is not of the right type or cannot be converted from a string to the correct type. Custom properties for a resource are configured by the Application Client Resource Configuration Tool.
  </Explanation>
  <UserResponse>
    Run the clientConfig command to correct the value for the specified custom property for the specified resource.
  </UserResponse>
</Message>
<Message ID="WSCL0202E" severity="E" prefix="yes">
  <MsgText pgmKey="metadata.nomainclass" varFormat="Java">
    metadata.nomainclass=WSCL0202E: The manifest file for the Application Client jar file {0} located in the Enterprise Archive file {1} does not contain a Main-Class entry for the client application main class.
  </MsgText>
  <Explanation>
    The application client runtime was unable to locate a manifest entry identifying the main class for the stated application client in the stated Enterprise Archive file.
  </Explanation>
  <UserResponse>
    Use the Application Assembly Tool to modify the application client jar file. In the main class field specify the fully-qualified name of the class that you wish to start with the launchClient command. For example, &apos;com.myCompany.myApp.myClass&apos;.
  </UserResponse>
</Message>
<Message ID="WSCL0104E" severity="E" prefix="yes">
  <MsgText pgmKey="ccparms.missingear" varFormat="Java">
    ccparms.missingear=WSCL0104E: The required parameter specifying the EAR file for the client application was null.
  </MsgText>
  <Explanation>
    A null or empty string was passed for the Enterprise Archive File (EAR) parameter to the launchClient API. This parameter is required and must point to a valid EAR file.
  </Explanation>
  <UserResponse>
    Ensure that you specify the name of a valid EAR file that contains the client application you are attempting to run. You may have to fully qualify the file name. Refer to the launchClient Javadoc for more information.
  </UserResponse>
</Message>
<Message ID="WSCL0157W" severity="W" prefix="yes">
  <MsgText pgmKey="resource.pwddecodeerror" varFormat="Java">
    resource.pwddecodeerror=WSCL0157W: Unable to decode the password for resource {0} when attempting to set property {1}.
  </MsgText>
  <Explanation>
    The application client runtime was unable to decode the password for the stated resource. The encoding scheme used when the password was encoded is not valid.
  </Explanation>
  <UserResponse>
    Correct the password in the client resource configuration file by using the Application Client Resource Configuration Tool.
  </UserResponse>
</Message>
<Message ID="WSCL0128E" severity="E" prefix="yes">
  <MsgText pgmKey="jdbc.missingsettermethod" varFormat="Java">
    jdbc.missingsettermethod=WSCL0128E: Unable to establish a setter method for Property {0} on DataSource {1}.
  </MsgText>
  <Explanation>
    The application client runtime was unable to establish a method for setting a property on the JDBC data source. Each JDBC data source property requires a method to enable setting the property with the only parameter being the property value.
  </Explanation>
  <UserResponse>
    Ensure that the JDBC data source property set method exists and only expects one parameter containing the property value. For additional help enable debug by specifying the -CCtrace flag on the launchClient command.
  </UserResponse>
</Message>
<Message ID="WSCL0105E" severity="E" prefix="yes">
  <MsgText pgmKey="launchclient.differentear" varFormat="Java">
    launchclient.differentear=WSCL0105E: Cannot launch more than one Java EE application per Java Virtual Machine.
  </MsgText>
  <Explanation>
    You tried to launch two different Java EE applications within the same Java Virtual Machine (JVM). The Application Client runtime only allows one application, represented by an Enterprise Archive File (EAR), to be launched within the same JVM. That EAR file can be launched multiple times with different parameters, but it must be the same EAR file. This is because you can only have one JNDI name space active at a time. If you were to launch two applications, they would both use the last JNDI name space to be in initialized. Since this would cause confusion in the programming model, the Application Client runtime only allows one application to be launched per JVM.
  </Explanation>
  <UserResponse>
    This is a programming error. The application you are running must be changed to only launch one Java EE application.
  </UserResponse>
</Message>
<Message ID="WSCL1206E" severity="E" prefix="yes">
  <MsgText pgmKey="injection.resref.error" varFormat="Java">
    injection.resref.error=WSCL1206E: The NamingException occurred while trying to resolve a resource reference for: {0}
  </MsgText>
  <Explanation>
    An exception occurred and a resource reference cannot be resolved.
  </Explanation>
  <UserResponse>
    Ensure that the resource name can be found in the JNDI lookup.
  </UserResponse>
</Message>
<Message ID="WSCL0031I" severity="I" prefix="yes">
  <MsgText pgmKey="cc.bindingsuccess" varFormat="Java">
    cc.bindingsuccess=WSCL0031I: The object was bound successfully.
  </MsgText>
  <Explanation>
    The object was bound into the local namespace successfully.
  </Explanation>
  <UserResponse>
    No action is required. The -CCverbose flag was specified on the launchClient command, and this message is a result of setting that flag. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0024I" severity="I" prefix="yes">
  <MsgText pgmKey="ccrct.addlookupentry" varFormat="Java">
    ccrct.addlookupentry=WSCL0024I: Adding {0}  {1} to the JNDI table.
  </MsgText>
  <Explanation>
    The Application Client Resource Configuration Tool has added the stated entry to the JNDI resource table.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0280W" severity="W" prefix="yes">
  <MsgText pgmKey="ccejb.ejbnull" varFormat="Java">
    ccejb.ejbnull=WSCL0280W: An EJB object could not be created because the name is null.
  </MsgText>
  <Explanation>
    The application client runtime was unable to create a reference to an EJB because the value specified on the &lt;ejb-ref-name&gt; entry in the application client deployment descriptor is not valid. This can happen if the deployment descriptor was created without using the Application Assembly tool.
  </Explanation>
  <UserResponse>
    Verify the value specified on the &lt;ejb-ref-name&gt; entry in the application client deployment descriptor contains a valid name or use the Application Assembly tool to configure this EJB resource.
  </UserResponse>
</Message>
<Message ID="WSCL0123E" severity="E" prefix="yes">
  <MsgText pgmKey="jdbc.illegalaccessProperty" varFormat="Java">
    jdbc.illegalaccessProperty=WSCL0123E: Received an IllegalAccessException while attempting to access Property {0} on DataSource {1}: {2}
  </MsgText>
  <Explanation>
    The application client runtime received an IllegalAccessException when attempting to access the JDBC data source access or method to obtain the data source property.
  </Explanation>
  <UserResponse>
    Change the JDBC data source access or method to be publicly available. For additional help enable debug by specifying the -CCtrace flag on the launchClient command.
  </UserResponse>
</Message>
<Message ID="WSCL0601E" severity="E" prefix="yes">
  <MsgText pgmKey="cchdl.bindingfailed" varFormat="Java">
    cchdl.bindingfailed=WSCL0601E: The HandleDelegate could not be bound because:
  </MsgText>
  <Explanation>
    The HandleDelegate object could not be bound into the JNDI name space.
  </Explanation>
  <UserResponse>
    Correct the listed errors and try your request again.
  </UserResponse>
</Message>
<Message ID="WSCL0209E" severity="E" prefix="yes">
  <MsgText pgmKey="metadata.failedtocreatedir" varFormat="Java">
    metadata.failedtocreatedir=WSCL0209E: Failed to create archive directory {0}.
  </MsgText>
  <Explanation>
    The Application Client system property com.ibm.websphere.client.applicationclient.archivedir was set to the stated directory value, and the Application Client runtime failed to create the directory.
  </Explanation>
  <UserResponse>
    This is usually caused by specifying a directory value that has multiple subdirectories that don&apos;t exist. The Application Client runtime will only create the last subdirectory specified. For example, if you specify &quot;/A/B/C&quot; and subdirectories A or B do not exist, you will receive this failure. With this example, the Application Client runtime will only create the subdirectory C. 
 The other possible failure is you don&apos;t have authority to write to the specified directory. If this is the case, you need to specify a different directory or change the directory permissions.
  </UserResponse>
</Message>
<Message ID="WSCL1204E" severity="E" prefix="yes">
  <MsgText pgmKey="unable.create.emf.JPAI0023E" varFormat="Java">
    unable.create.emf.JPAI0023E=WSCL1204E: The container cannot create an EntityManagerFactory object in the {0} persistence unit for dependency injection. The persistence unit is in the {2} client module of the {1} application.
  </MsgText>
  <Explanation>
    Check the specified persistence unit and the dependency injection annotation are defined properly.
  </Explanation>
  <UserResponse>
    Correct the problem and try again.
  </UserResponse>
</Message>
<Message ID="WSCL0600I" severity="I" prefix="yes">
  <MsgText pgmKey="cchdl.binding" varFormat="Java">
    cchdl.binding=WSCL0600I: Binding HandleDelegate object.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0500I" severity="I" prefix="yes">
  <MsgText pgmKey="ccsec.callbackinfo" varFormat="Java">
    ccsec.callbackinfo=WSCL0500I: Creating security callback handler class: {0}
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0026I" severity="I" prefix="yes">
  <MsgText pgmKey="ccejb.processingprop" varFormat="Java">
    ccejb.processingprop=WSCL0026I: Adding EJB references defined in the properties file.
  </MsgText>
  <Explanation>
    The application client runtime has added the EJB references defined in the properties file. EJB references specified in a properties file are optional.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0153W" severity="W" prefix="yes">
  <MsgText pgmKey="resource.noBindingCtor" varFormat="Java">
    resource.noBindingCtor=WSCL0153W: The required constructor for the JNDI binding mechanism {0}(java.util.Properties) was not found: {1}
  </MsgText>
  <Explanation>
    The application client runtime was unable to instantiate an instance of the stated JMS binding mechanism. The JMS binding mechanism is required to have a class constructor that has one parameter of type java.util.Properties. This binding mechanism class is a user written class and is not supplied by WebSphere.
  </Explanation>
  <UserResponse>
    Ensure that the JMS binding mechanism has a constructor with one parameter of type java.util.Properties.
  </UserResponse>
</Message>
<Message ID="WSCL0902I" severity="I" prefix="yes">
  <MsgText pgmKey="cccomp.fail" varFormat="Java">
    cccomp.fail=WSCL0902I: Component initialization completed, however some components failed to initialize.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0220E" severity="E" prefix="yes">
  <MsgText pgmKey="ccrct.noconfig" varFormat="Java">
    ccrct.noconfig=WSCL0220E: An unsuccessful attempt was made to find the resource configuration information for {0}.
  </MsgText>
  <Explanation>
    The application client runtime was unable to locate the resource configuration information for the stated resource because the name of the resource does not match the JNDI name used when the resource was configured using the Application Client Resource Configuration Tool.
  </Explanation>
  <UserResponse>
    Use the Application Client Resource Configuration Tool to change the JNDI name to equal the resource name value that was stated in the message. The resource name value was configured using the Application Assembly Tool.
  </UserResponse>
</Message>
<Message ID="WSCL0027I" severity="I" prefix="yes">
  <MsgText pgmKey="ccejb.noentries" varFormat="Java">
    ccejb.noentries=WSCL0027I: No EJB references defined in the properties file.
  </MsgText>
  <Explanation>
    The properties file contains no EJB references.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0015I" severity="I" prefix="yes">
  <MsgText pgmKey="metadata.processfile" varFormat="Java">
    metadata.processfile=WSCL0015I: Processing the Application Client archive file: {0}.
  </MsgText>
  <Explanation>
    The application client runtime is reading and loading the stated application client archive file.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0100E" severity="E" prefix="yes">
  <MsgText pgmKey="client.exception" varFormat="Java">
    client.exception=WSCL0100E: Exception received: {0}
  </MsgText>
  <Explanation>
    An exception was received by the application client runtime.
  </Explanation>
  <UserResponse>
    Analyze the exception and correct the problem. For additional help enable debug by specifying the -CCtrace flag on the launchClient command.
  </UserResponse>
</Message>
<Message ID="WSCL0503E" severity="E" prefix="yes">
  <MsgText pgmKey="ccsec.callbackconverterror" varFormat="Java">
    ccsec.callbackconverterror=WSCL0503E: The configured callback handler class {0} cannot be used because it does not implement the {1} interface.
  </MsgText>
  <Explanation>
    The security callback handler class must implement the specified interface. This is a programming error in the security callback handler class.
  </Explanation>
  <UserResponse>
    Either have the developer of the specified security callback handler class modify the class so that it implements the specified interface or remove the callback configuration from the application client&apos;s deployment descriptor.
  </UserResponse>
</Message>
<Message ID="WSCL0158W" severity="W" prefix="yes">
  <MsgText pgmKey="resource.mailerror" varFormat="Java">
    resource.mailerror=WSCL0158W: Unable to create a mail resource with properties: {0} because:
  </MsgText>
  <Explanation>
    The application client runtime received an unexpected exception while creating the stated mail resource.
  </Explanation>
  <UserResponse>
    Analyze the stated exception received and correct the problem.
  </UserResponse>
</Message>
<Message ID="WSCL0301W" severity="W" prefix="yes">
  <MsgText pgmKey="ccenv.invalidtype" varFormat="Java">
    ccenv.invalidtype=WSCL0301W: An environment object could not be created for {0} because the type {1} is not supported.
  </MsgText>
  <Explanation>
    The application client runtime was unable to create an object defined by the &lt;env-entry&gt; in the application client deployment descriptor because the type specified for the &lt;env-entry-type&gt; is not valid. This can occur if the deployment descriptor was created without using the Application Assembly Tool.
  </Explanation>
  <UserResponse>
    Change the type specified on the &lt;env-entry-type&gt; in the application client deployment descriptor to a valid type or use the Application Assembly Tool to modify the type. The valid types are: java.lang.Boolean, java.lang.String, java.lang.Integer, java.lang.Double, java.lang.Byte, java.lang.Short, java.lang.Long, and java.lang.Float.
  </UserResponse>
</Message>
<Message ID="WSCL0211E" severity="E" prefix="yes">
  <MsgText pgmKey="metadata.duplicateclientjars" varFormat="Java">
    metadata.duplicateclientjars=WSCL0211E: The specified client jar file {0} is configured with multiple deployment descriptors.  Use the -CCaltDD parameter to specify which one should be used.
  </MsgText>
  <Explanation>
    The specified application client jar file is configured to use alternate deployment descriptors.
  </Explanation>
  <UserResponse>
    Use the -CCaltDD parameter to specify the path to the alternate deployment descriptor. To use the standard deployment descriptor specify the value null on the -CCaltDD parameter.
  </UserResponse>
</Message>
<Message ID="WSCL0370W" severity="W" prefix="yes">
  <MsgText pgmKey="cceex.bindingerror" varFormat="Java">
    cceex.bindingerror=WSCL0370W: An unexpected error occurred while trying to bind an Enterprise Extension resource.
  </MsgText>
  <Explanation>
    The application client runtime encountered an unexpected exception while binding an Enterprise Extension resource. The message that follows provides detailed information about the exception.
  </Explanation>
  <UserResponse>
    Analyze the exception and correct the problem.
  </UserResponse>
</Message>
<Message ID="WSCL0009I" severity="I" prefix="yes">
  <MsgText pgmKey="ccres.nobinders" varFormat="Java">
    ccres.nobinders=WSCL0009I: No binders were found in the properties file.
  </MsgText>
  <Explanation>
    The properties file contains no resource binders. Resource binders defined in the properties file are optional and are used to extend or override the default behavior of the application client runtime.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0030I" severity="I" prefix="yes">
  <MsgText pgmKey="ccres.noproviderref" varFormat="Java">
    ccres.noproviderref=WSCL0030I: No resource provider references configured for this provider.
  </MsgText>
  <Explanation>
    No resource provider references were configured for this provider.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0802W" severity="W" prefix="yes">
  <MsgText pgmKey="ccsm.alreadyenabled" varFormat="Java">
    ccsm.alreadyenabled=WSCL0802W: A security manager is already enabled for this process. The specified security manager {0} will not be used.
  </MsgText>
  <Explanation>
    The application client runtime attempted to set the specified security manager for the Java process, however a security manager is already enabled for this process.  The application client runtime will continue to use the security manager that is already set and will not use the specified security manager.
  </Explanation>
  <UserResponse>
    Either run the application client runtime without a security manager or set the -CCsecurityManager to disable.
  </UserResponse>
</Message>
<Message ID="WSCL1001E" severity="E" prefix="yes">
  <MsgText pgmKey="rar.badjca" varFormat="Java">
    rar.badjca=WSCL1001E: The Java EE Connector Architecture specification version must be, at a minimum, 1.5 for the resource adapter.  The resource adapter is not installed
  </MsgText>
  <Explanation>
    The resource adapter is for a version of the specification that is not supported.  The archive is not installed.
  </Explanation>
  <UserResponse>
    Install a resource adapter for a supported version of the Java EE Connector Architecture.
  </UserResponse>
</Message>
<Message ID="WSCL0033I" severity="I" prefix="yes">
  <MsgText pgmKey="metadata.classloaderused" varFormat="Java">
    metadata.classloaderused=WSCL0033I: The main class was loaded with: {0}
  </MsgText>
  <Explanation>
    The stated class loader was used to load the main class.  This is intended to help determine why a different class may fail to load later.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0501I" severity="I" prefix="yes">
  <MsgText pgmKey="ccsec.callbacksuccess" varFormat="Java">
    ccsec.callbacksuccess=WSCL0501I: Security callback handler created successfully.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0006I" severity="I" prefix="yes">
  <MsgText pgmKey="resource.JMSBindingIndirect" varFormat="Java">
    resource.JMSBindingIndirect=WSCL0006I: JMS resource using an indirectly supplied JNDI binding mechansim: {0}.
  </MsgText>
  <Explanation>
    The application client runtime is using the stated JNDI binding mechanism for the JMS resource. This binding mechanism was configured as a link to a JNDI reference located in a remote JNDI namespace and allows the client application to use JMS services. The JNDI binding mechanism can be configured using the Application Client Resource Configuration Tool.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0210E" severity="E" prefix="yes">
  <MsgText pgmKey="metadata.archivenotfound" varFormat="Java">
    metadata.archivenotfound=WSCL0210E: The Enterprise archive file {0} could not be found.
  </MsgText>
  <Explanation>
    The specified Enterprise archive file could not be found because either the file name or path are incorrect.
  </Explanation>
  <UserResponse>
    Correct the path or the file name and try your request again.  If the file name contains spaces, then enclose the file name within quotes, for example, launchClient &quot;my client app.ear&quot;.
  </UserResponse>
</Message>
<Message ID="WSCL0029I" severity="I" prefix="yes">
  <MsgText pgmKey="ccres.binding" varFormat="Java">
    ccres.binding=WSCL0029I: Binding resource reference object:
           JNDI name: {0}
           Type: {1}
           Description: {2}
  </MsgText>
  <Explanation>
    The application client runtime is binding the object for the resource reference entry to the local namespace using the stated JNDI name. Resource references are configured using the Application Assembly Tool.
  </Explanation>
  <UserResponse>
    No action is required. The -CCverbose flag was specified on the launchClient command, and this message is a result of setting that flag. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL1102W" severity="W" prefix="yes">
  <MsgText pgmKey="instConn.notDirectory" varFormat="Java">
    instConn.notDirectory=WSCL1102W: The specified installed connectors directory {0} is not a directory.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    Ensure that the correct installed connectors directory is specified.
  </UserResponse>
</Message>
<Message ID="WSCL0903E" severity="E" prefix="yes">
  <MsgText pgmKey="cccomp.error" varFormat="Java">
    cccomp.error=WSCL0903E: Component initialization failed for the following reason:
  </MsgText>
  <Explanation>
    A error occurred initializing a component.
  </Explanation>
  <UserResponse>
    Correct the listed errors and try your request again.
  </UserResponse>
</Message>
<Message ID="WSCL0900I" severity="I" prefix="yes">
  <MsgText pgmKey="cccomp.init" varFormat="Java">
    cccomp.init=WSCL0900I: Initializing and starting components.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0160W" severity="W" prefix="yes">
  <MsgText pgmKey="resource.wrongclassloader" varFormat="Java">
    resource.wrongclassloader=WSCL0160W: An unexpected classloader {0} was used to load class {1} for resource {2}.
  </MsgText>
  <Explanation>
    A class path was specified in the resource configuration file for the stated resource, however the Application Client runtime loaded the stated class using a different classloader than the one created by the Application Client runtime. In most cases, this indicates the stated class was found in the system class path. This may later cause exceptions such as java.lang.ClassNotFoundExceptionandjava.lang.NoClassDefFoundError when the stated class attempts to load other classes. This is a warning only and the stated class was successfully loaded, but the class path specified in the resource configuration file will not be used.
  </Explanation>
  <UserResponse>
    Search through the class path&apos;s specified with the -CCclasspath option and locate the .class file or the jar file that contains the stated class. If you are not using the launchClient command file, you will have to search the system class path as well. Once you locate the class, remove it and rerun launchClient. You can use the Application Client Resource Configuration Tool to configure class path information for this resource.
  </UserResponse>
</Message>
<Message ID="WSCL0130E" severity="E" prefix="yes">
  <MsgText pgmKey="jdbc.notreference" varFormat="Java">
    jdbc.notreference=WSCL0130E: The specified object reference for creating of the DataSource is not of the required type javax.naming.Reference.
  </MsgText>
  <Explanation>
    The object reference for the JDBC data source is required to be of type javax.naming.Reference.
  </Explanation>
  <UserResponse>
    Change the object reference for the JDBC data source to be of type javax.naming.Reference.
  </UserResponse>
</Message>
<Message ID="WSCL1201E" severity="E" prefix="yes">
  <MsgText pgmKey="injection.postconstruct.error" varFormat="Java">
    injection.postconstruct.error=WSCL1201E: The following injection exception occurred for the handling PostConstruct method: {0}
  </MsgText>
  <Explanation>
    An exception occurs when the container invokes the PostConstruct method.
  </Explanation>
  <UserResponse>
    Ensure that the PostConstruct method is defined correctly in the deployment descriptor or annotated correctly in the class.
  </UserResponse>
</Message>
<Message ID="WSCL0901I" severity="I" prefix="yes">
  <MsgText pgmKey="cccomp.success" varFormat="Java">
    cccomp.success=WSCL0901I: Component initialization completed successfully.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0203E" severity="E" prefix="yes">
  <MsgText pgmKey="metadata.noreadjar" varFormat="Java">
    metadata.noreadjar=WSCL0203E: Unable to locate the Application Client jar file {0} in the Enterprise Archive file {1}.
  </MsgText>
  <Explanation>
    The application client runtime was unable to locate the stated application client jar file in the stated Enterprise Archive file. This error occurs when the -CCjar filename parameter is used, and the specified jar file does not exist in the Enterprise Archive file.
  </Explanation>
  <UserResponse>
    Change the value for the -CCjar filename parameter to a jar file that exists in the Enterprise Archive file. If the jar file you need is not in the Enterprise Archive file, use the Application Assembly Tool to add the application client jar file to the Enterprise Archive file.
  </UserResponse>
</Message>
<Message ID="WSCL0332E" severity="E" prefix="yes">
  <MsgText pgmKey="ccres.wrongversion" varFormat="Java">
    ccres.wrongversion=WSCL0332E: The resource configuration file is at the incorrect version. Use the Application Client Resource Configuration Tool (clientConfig command) to migrate the resources.
  </MsgText>
  <Explanation>
    The resource configuration information contained in the application client module was created with a previous version of WebSphere.
  </Explanation>
  <UserResponse>
    Run the clientConfig command to have your resources migrated to a format that can be used by this version of WebSphere.
  </UserResponse>
</Message>
<Message ID="WSCL0162W" severity="W" prefix="yes">
  <MsgText pgmKey="resource.badClassPath" varFormat="Java">
    resource.badClassPath=WSCL0162W: The following classpath entries do not exist on the local system: {0}
  </MsgText>
  <Explanation>
    The listed class path entries specify directories/files that do not exist on the local system.
  </Explanation>
  <UserResponse>
    Ensure that the class path entries are valid.  Ensure that any resource adapters are properly installed on this system.
  </UserResponse>
</Message>
<Message ID="WSCL0126E" severity="E" prefix="yes">
  <MsgText pgmKey="jdbc.invocationerror" varFormat="Java">
    jdbc.invocationerror=WSCL0126E: Received an InvocationTargetException while attempting to set the value for DataSource Property {0} on DataSource {1}: {2}
  </MsgText>
  <Explanation>
    The application client runtime received an InvocationTargetException when attempting to set a property on the JDBC data source. Each JDBC data source property requires a method to enable setting the property with the only parameter being the property value.
  </Explanation>
  <UserResponse>
    Ensure that the JDBC data source property set method exists and only expects one parameter containing the property value. Analyze the message data for the InvocationTargetException to determine the cause of the problem. For additional help enable debug by specifying the -CCtrace flag on the launchClient command.
  </UserResponse>
</Message>
<Message ID="WSCL1205W" severity="W" prefix="yes">
  <MsgText pgmKey="duplicate.binding.entry.warning" varFormat="Java">
    duplicate.binding.entry.warning=WSCL1205W: A duplicate binding entry found for {0} name {1}.
  </MsgText>
  <Explanation>
    A duplicate binding name has been found in the application client binding file.
  </Explanation>
  <UserResponse>
    Modify the application client binding file to remove the duplicate binding entry.
  </UserResponse>
</Message>
<Message ID="WSCL0022I" severity="I" prefix="yes">
  <MsgText pgmKey="ccrct.findrepository" varFormat="Java">
    ccrct.findrepository=WSCL0022I: Searching for the resource respository.
  </MsgText>
  <Explanation>
    The Application Client Resource Configuration Tool is searching for an existing resource repository.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0207E" severity="E" prefix="yes">
  <MsgText pgmKey="metadata.notclientjar" varFormat="Java">
    metadata.notclientjar=WSCL0207E: Jar file {0} in Enterprise Archive file {1} is not an Application Client jar file.
  </MsgText>
  <Explanation>
    The stated jar file name was passed to launchClient with the -CCjar parameter. The jar file exists in the stated Enterprise Archive (EAR) file, but it is not an Application Client jar file.
  </Explanation>
  <UserResponse>
    If you remove the -CCjar parameter from the launchClient invocation, the Application Client runtime will automatically locate the Application Client jar file in your EAR file. If you have more than one Application Client jar file in your EAR file, however, you will need to use the -CCjar parameter.
 If you would like the stated jar file to be an Application Client jar file, perform the following steps in the Application Assembly Tool:
 1. Create an Application Client module and add your jar file&apos;s contents
 2. Delete the existing jar file from your EAR and add the new Application Client module.
  </UserResponse>
</Message>
<Message ID="WSCL0101E" severity="E" prefix="yes">
  <MsgText pgmKey="ccparms.invalidparm" varFormat="Java">
    ccparms.invalidparm=WSCL0101E: An invalid or missing parameter on launchClient. See help message on launchClient.
  </MsgText>
  <Explanation>
    A parameter is missing or not valid for the launchClient command.
  </Explanation>
  <UserResponse>
    Determine which parameters were incorrect or missing and correct the error. Specify the -help or -? flag on the launchClient command for additional help.
  </UserResponse>
</Message>
<Message ID="WSCL0702E" severity="E" prefix="yes">
  <MsgText pgmKey="jmsfac.missingsettermethod" varFormat="Java">
    jmsfac.missingsettermethod=WSCL0702E: Unable to establish a setter method for Property {0} on object {1}.
  </MsgText>
  <Explanation>
    The application client runtime attempted to set a property, however that property could not be set because it does not exist on the specified object. This is usually caused when a custom property is incorrectly specified for the resource.  Custom properties for a resource are configured by the Application Client Resource Configuration Tool.
  </Explanation>
  <UserResponse>
    Run the clientConfig command to correct the custom property for the specified resource.
  </UserResponse>
</Message>
<Message ID="WSCL1002E" severity="E" prefix="yes">
  <MsgText pgmKey="rar.nooutbound" varFormat="Java">
    rar.nooutbound=WSCL1002E: The resource adapter does not contain any outbound resource adapter definitions. The resource adapter is not installed.
  </MsgText>
  <Explanation>
    The resource adapter must specify outbound resource adapter definitions.  The archive is not installed.
  </Explanation>
  <UserResponse>
    Install a resource adapter that contains outbound resource adapter definitions.
  </UserResponse>
</Message>
<Message ID="WSCL0016I" severity="I" prefix="yes">
  <MsgText pgmKey="metadata.usingtempdir" varFormat="Java">
    metadata.usingtempdir=WSCL0016I: Using temporary directory {0}.
  </MsgText>
  <Explanation>
    The application client runtime has created the stated temporary directory for use in storing temporary files.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0502E" severity="E" prefix="yes">
  <MsgText pgmKey="ccsec.callbackfailed" varFormat="Java">
    ccsec.callbackfailed=WSCL0502E: Security callback handler class could not be created because:
  </MsgText>
  <Explanation>
    A error occurred when creating the security callback handler class. The most likely cause of this error is the security callback handler class specified could not be found either because the name is incorrect or it could not be loaded by the WebSphere classloaders.
  </Explanation>
  <UserResponse>
    Verify the classname is a fully qualified classname using Java class notation, for example, com.mypackage.mysecclass.  Also verify the actual class code is accessible by the WebSphere classloaders.  You may have to specify -CCclasspath parameter to have the WebSphere application client runtime find your class.
  </UserResponse>
</Message>
<Message ID="WSCL0703E" severity="E" prefix="yes">
  <MsgText pgmKey="jmsfac.illegalaccessProperty" varFormat="Java">
    jmsfac.illegalaccessProperty=WSCL0703E: Received an IllegalAccessException while attempting to access Property {0} on object {1}: {2}
  </MsgText>
  <Explanation>
    The application client runtime attempted to set the specified property, however the application client runtime does not have access to the definition of the specified class, because the class is not public and in another package. This is usually caused when a custom property is incorrectly specified for the resource.  Custom properties for a resource are configured by the Application Client Resource Configuration Tool.
  </Explanation>
  <UserResponse>
    Run the clientConfig command to correct or remove the custom property for the specified resource.
  </UserResponse>
</Message>
<Message ID="WSCL0011I" severity="I" prefix="yes">
  <MsgText pgmKey="client.stacktrace" varFormat="Java">
    client.stacktrace=WSCL0011I: Stack Trace: {0}
  </MsgText>
  <Explanation>
    An exception was received by the application client runtime. The stack trace was made available to assist in the problem determination.
  </Explanation>
  <UserResponse>
    Analyze the exception and stack trace and correct the problem. For additional help, enable debug by specifying the -CCtrace flag on the launchClient command.
  </UserResponse>
</Message>
<Message ID="WSCL0017I" severity="I" prefix="yes">
  <MsgText pgmKey="metadata.loadmain" varFormat="Java">
    metadata.loadmain=WSCL0017I: Loading the Main class {0} for the Application Client jar file {1}.
  </MsgText>
  <Explanation>
    The application client runtime is using a class loader to load the stated main class from the stated application client archive file.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0910I" severity="I" prefix="yes">
  <MsgText pgmKey="cccomp.initcomp" varFormat="Java">
    cccomp.initcomp=WSCL0910I: Initializing component: {0}
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0161E" severity="E" prefix="yes">
  <MsgText pgmKey="resource.wrongtype" varFormat="Java">
    resource.wrongtype=WSCL0161E: The resource configuration information is not compatible with the resource type {0}.  The object was not bound into the namespace.
  </MsgText>
  <Explanation>
    This resource was configured as the stated type when assembling the Application Client using the Application Assembly Tool. The Application Client runtime found a resource with the same name in the client resource configuration file, however, the client resource configuration information is not compatible with the stated resource type.
  </Explanation>
  <UserResponse>
    If the stated type is correct, then use the Application Client Resource Configuration Tool to find the resource with the matching name and delete it, then configure the resource for the appropriate type.
If the stated type is incorrect, then use the Application Assembly Tool to configure the correct type.
  </UserResponse>
</Message>
<Message ID="WSCL0010I" severity="I" prefix="yes">
  <MsgText pgmKey="ccres.bindersuccess" varFormat="Java">
    ccres.bindersuccess=WSCL0010I: Resource binders loaded successfully.
  </MsgText>
  <Explanation>
    The application client runtime has successfully loaded the resource binders.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0705E" severity="E" prefix="yes">
  <MsgText pgmKey="jmsfac.invocationerror" varFormat="Java">
    jmsfac.invocationerror=WSCL0705E: Received an InvocationTargetException while attempting to set the value for Property {0} on JMS object {1} : {2}
  </MsgText>
  <Explanation>
    The application client runtime attempted to set the specified custom property, however the method on the JMS resource object used to set the property threw an exception. Custom properties for a resource are configured by the Application Client Resource Configuration Tool.
  </Explanation>
  <UserResponse>
    Run the clientConfig command and verify the value for the custom property is valid for the specified property on the JMS resource object. Refer to the JMS provider&apos;s documentation for a list of valid properties and their values.
  </UserResponse>
</Message>
<Message ID="WSCL0200E" severity="E" prefix="yes">
  <MsgText pgmKey="metadata.noclient" varFormat="Java">
    metadata.noclient=WSCL0200E: The Enterprise Archive file {0} does not contain an Application Client jar file.
  </MsgText>
  <Explanation>
    The application client runtime was unable to locate the client application jar file in the stated client application Enterprise Archive File (EAR). This may happen for several reasons:
 - The specified file is not an EAR file. 
 - The specified file is a valid EAR file but does not contain an application client. 
 - The specified EAR file does not match the Java EE version of the application client runtime. 
 - The specified EAR file was not built by the WebSphere Application Assembly Tool.
  </Explanation>
  <UserResponse>
    Use the Application Assembly Tool to reassemble the EAR file and be sure to include the application client.
  </UserResponse>
</Message>
<Message ID="WSCL1202E" severity="E" prefix="yes">
  <MsgText pgmKey="injection.postdestroy.error" varFormat="Java">
    injection.postdestroy.error=WSCL1202E: The following injection exception occurred for the handling PreDestroy method: {0}
  </MsgText>
  <Explanation>
    An exception occurs when the container invokes the PreDestroy method.
  </Explanation>
  <UserResponse>
    Ensure that the PreDestroy method is defined correctly in the deployment descriptor or annotated correctly in the class.
  </UserResponse>
</Message>
<Message ID="WSCL0007I" severity="I" prefix="yes">
  <MsgText pgmKey="ccres.loadingdefaultbinders" varFormat="Java">
    ccres.loadingdefaultbinders=WSCL0007I: Loading the default resource binders.
  </MsgText>
  <Explanation>
    The application client runtime is loading the default resource binders. The resource binders allow the application client runtime to load and configure resources used by the client application.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0150W" severity="W" prefix="yes">
  <MsgText pgmKey="resource.unknownJMSresource" varFormat="Java">
    resource.unknownJMSresource=WSCL0150W: Unknown JMS resource type: {0}
  </MsgText>
  <Explanation>
    The stated JMS Resource is of an unknown type. The JMS Resource is required to be of type Destination or Connection.
  </Explanation>
  <UserResponse>
    Ensure that the JMS Resource is of type Destination or Connection. Use the Application Client Resource Configuration Tool to make the necessary modifications to the JMS Resource. For additional help enable debug by specifying the -CCtrace flag on the launchClient command.
  </UserResponse>
</Message>
<Message ID="WSCL0803E" severity="E" prefix="yes">
  <MsgText pgmKey="ccsm.unknownerror" varFormat="Java">
    ccsm.unknownerror=WSCL0803E: Unable to continue because the specified security manager could not be created for the following reason:
  </MsgText>
  <Explanation>
    The -CCsecurityManager parameter was set to enable and a security manager class was specifed using -CCsecurityManagerClass parameter, however the application client runtime could not create the security manager class. The most likely cause of this error is the security manager class specifed could not be found either because the name is incorrect or it could not be loaded by the WebSphere classloaders.
  </Explanation>
  <UserResponse>
    Verify the classname is a fully qualified classname using Java class notation, for example, com.mypackage.mysecclass.  Also verify the actual class code is accessible by the WebSphere classloaders.  You may have to specify -CCclasspath parameter to have the WebSphere application client runtime load your class.
  </UserResponse>
</Message>
<Message ID="WSCL0035I" severity="I" prefix="yes">
  <MsgText pgmKey="launchclient.statusMsg4" varFormat="Java">
    launchclient.statusMsg4=WSCL0035I: Initialization of the Java EE Application Client Environment has completed.
  </MsgText>
  <Explanation>
    This is a status message.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0014I" severity="I" prefix="yes">
  <MsgText pgmKey="launchclient.statusMsg3" varFormat="Java">
    launchclient.statusMsg3=WSCL0014I: Invoking the Application Client {0}
  </MsgText>
  <Explanation>
    This is a status message that indicates which class is being started by the launchClient command.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0013I" severity="I" prefix="yes">
  <MsgText pgmKey="launchclient.statusMsg2" varFormat="Java">
    launchclient.statusMsg2=WSCL0013I: Initializing the Java EE Application Client Environment.
  </MsgText>
  <Explanation>
    This is a status message.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0012I" severity="I" prefix="yes">
  <MsgText pgmKey="launchclient.statusMsg1" varFormat="Java">
    launchclient.statusMsg1=WSCL0012I: Processing command line arguments.
  </MsgText>
  <Explanation>
    This is a status message.
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0401I" severity="I" prefix="yes">
  <MsgText pgmKey="ccmsgdst.binding" varFormat="Java">
    ccmsgdst.binding=WSCL0401I: Binding message destination reference object:
           JNDI name: {0}
           Type: {1}
           Description: {2}
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0025I" severity="I" prefix="yes">
  <MsgText pgmKey="ccejb.binding" varFormat="Java">
    ccejb.binding=WSCL0025I: Binding EJB reference object:
           JNDI name: {0}
           Description: {1}
  </MsgText>
  <Explanation>
    The application client runtime is binding the EJB to the local namespace using the stated JNDI name. EJB references are configured using the Application Assembly Tool.
  </Explanation>
  <UserResponse>
    No action is required. The -CCverbose flag was specified on the launchClient command, and this message is a result of setting that flag. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0205W" severity="W" prefix="yes">
  <MsgText pgmKey="metadata.wrongclassloaderused" varFormat="Java">
    metadata.wrongclassloaderused=WSCL0205W: The incorrect class loader was used to load {0}
  </MsgText>
  <Explanation>
    The Application Client runtime attempted to load the stated main class from the Enterprise Archive (EAR) file, but another version of the main class was found in the application class path first. This resulted in the main class being loaded from the hard drive instead of the EAR file. In most cases, this is a severe error that will cause the user program to fail later with exceptions such as java.lang.ClassNotFoundException and java.lang.NoClassDefFoundError when attempting to load EJB&apos;s or other classes from the EAR file.
  </Explanation>
  <UserResponse>
    Search through the class path specified with the -CCclasspath option and the class path configured with the Application Client Resource Configuration Tool to locate the .class file or the jar file that contains the main class. If you are not using the launchClient command file, you will have to search the system class path as well. Once you locate the class, remove it and rerun launchClient.
  </UserResponse>
</Message>
<Message ID="WSCL0002I" severity="I" prefix="yes">
  <MsgText pgmKey="jdbc.setDSproperty" varFormat="Java">
    jdbc.setDSproperty=WSCL0002I: Setting DataSource Property {0} to value {1} on DataSource {2}.
  </MsgText>
  <Explanation>
    The application client runtime set the stated property to the stated value on the JDBC data source. Data source properties are configured using the Application Client Resource Configuration Tool
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0127W" severity="W" prefix="yes">
  <MsgText pgmKey="jdbc.nosupportproperty" varFormat="Java">
    jdbc.nosupportproperty=WSCL0127W: Encountered an unsupported DataSource Property {0}: {1}
  </MsgText>
  <Explanation>
    The defined JDBC data source property is not supported. The application client runtime has ignored this property and continued processing.
  </Explanation>
  <UserResponse>
    No action is required. Warning message only. To prevent this warning message in the future, remove the defined property from the JDBC data source. Use the Application Client Resource Configuration Toolt to make the necessary modifications to the JDBC data source.
  </UserResponse>
</Message>
<Message ID="WSCL0800I" severity="I" prefix="yes">
  <MsgText pgmKey="ccsm.enable" varFormat="Java">
    ccsm.enable=WSCL0800I: Creating security manager: {0}
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0911I" severity="I" prefix="yes">
  <MsgText pgmKey="cccomp.initcompsuccess" varFormat="Java">
    cccomp.initcompsuccess=WSCL0911I: Component initialized successfully.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL0912E" severity="E" prefix="yes">
  <MsgText pgmKey="cccomp.initfailed" varFormat="Java">
    cccomp.initfailed=WSCL0912E: Component failed to initialize.
  </MsgText>
  <Explanation>
    The application client runtime could not initialize a component.
  </Explanation>
  <UserResponse>
    See the previously listed errors for the cause of the failure.  To see which component failed, rerun the application client runtime with -CCverbose=true option.
  </UserResponse>
</Message>
<Message ID="WSCL0001I" severity="I" prefix="yes">
  <MsgText pgmKey="launchclient.parmsout" varFormat="Java">
    launchclient.parmsout=WSCL0001I: Command line, property file, and system property arguments resolved to: 
        File to launch          = {0}
        CC Property File        = {1}
        Client Jar File         = {2}
        Alternate DD            = {3}
        BootstrapHost           = {4}
        BootstrapPort           = {5}
        Trace enabled           = {6}
        Tracefile               = {7}
        Init only               = {8}
        Classpath Parameter     = {9}
  </MsgText>
  <Explanation>
    The parameter values listed were retrieved from three places:
 1. the command line (for example,-CCverbose=true)
 2. a properties file (for example,-CCpropfile=myapp.properties)
 3. system properties (for example,java -Dcom.ibm.CORBA.BootstrapHost=myserver.a.b.com...)
 The parameters are resolved in the order listed above, with command line values having the highest priority and system properties the lowest.
  </Explanation>
  <UserResponse>
    No action is required. The -CCverbose flag was specified on the launchClient command, and this message is a result of setting that flag. It is for information only.
  </UserResponse>
</Message>
<Message ID="WSCL1101I" severity="I" prefix="yes">
  <MsgText pgmKey="instConn.notExist" varFormat="Java">
    instConn.notExist=WSCL1101I: The specified installed connectors directory {0} does not exist.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    Ensure that the correct installed connectors directory is specified.
  </UserResponse>
</Message>
<Message ID="WSCL0201E" severity="E" prefix="yes">
  <MsgText pgmKey="metadata.nomanifest" varFormat="Java">
    metadata.nomanifest=WSCL0201E: No manifest entry found in Application Client jar file {0}.
  </MsgText>
  <Explanation>
    The application client runtime was unable to locate a manifest file in the stated application client jar file. The manifest contains meta data for the Java EE application client and is required.
  </Explanation>
  <UserResponse>
    Use the Application Assembly Tool to reassemble the application client jar file. This will add the manifest to the proper path in the application client jar file. Then use the Application Assembly Tool to reassemble the Enterprise Archive file.
  </UserResponse>
</Message>
<Message ID="WSCL0206E" severity="E" prefix="yes">
  <MsgText pgmKey="metadata.invalidarchive" varFormat="Java">
    metadata.invalidarchive=WSCL0206E: File {0} is not a valid Enterprise Archive file.
  </MsgText>
  <Explanation>
    The stated file was passed to the Application Client runtime, but it does not conform to the Enterprise Archive (EAR) file format.
  </Explanation>
  <UserResponse>
    This may happen for one of the following reasons:
 - The file does not exist. Specify a different file on the launchClient command 
 - The file you specified is not an Enterprise Archive (EAR) file. Your application must be packaged within an Application Client jar file, and this jar file must be packaged within an EAR file. Use the Application Assembly Tool to add your application to an Application Client jar file. Then add your Application Client jar file to an EAR file and rerun launchClient with the EAR file 
 - Your EAR file may be corrupted or built incorrectly. Use the Application Assembly Tool to resave the EAR file. This may correct the error.
  </UserResponse>
</Message>
<Message ID="WSCL0129E" severity="E" prefix="yes">
  <MsgText pgmKey="jdbc.notsqldatasource" varFormat="Java">
    jdbc.notsqldatasource=WSCL0129E: The DataSource classname {0} is not of the required type javax.sql.DataSource.
  </MsgText>
  <Explanation>
    The JDBC data source is required to be of type javax.sql.DataSource.
  </Explanation>
  <UserResponse>
    Change the JDBC data source to be of type javax.sql.DataSource.
  </UserResponse>
</Message>
<Message ID="WSCL0300W" severity="W" prefix="yes">
  <MsgText pgmKey="ccenv.invalidval" varFormat="Java">
    ccenv.invalidval=WSCL0300W: An environment object could not be created for {0} because the value of {1} is not valid for type {2}.
  </MsgText>
  <Explanation>
    The application client runtime was unable to create an environment object because the value specified on the &lt;env-entry-value&gt; entry in the application client deployment descriptor does not contain a valid value for the type specified on the &lt;env-entry-type&gt; entry. This can occur if the deployment descriptor was created without using the Application Assembly Tool.
  </Explanation>
  <UserResponse>
    Change the value specified on the &lt;env-entry-value&gt; entry in the application client deployment descriptor to a valid value for the type specified on the &lt;env-entry-type&gt; entry. Or use the Application Assembly Tool to configure a value that is valid for the type specified.
  </UserResponse>
</Message>
<Message ID="WSCL0124E" severity="E" prefix="yes">
  <MsgText pgmKey="jdbc.instantiation" varFormat="Java">
    jdbc.instantiation=WSCL0124E: Received an InstantiationException while attempting to create DataSource {0}: {1}
  </MsgText>
  <Explanation>
    The application client runtime received an InstantiationException when attempting to instantiate the JDBC data source. The JDBC data source is defined as either abstract or an interface.
  </Explanation>
  <UserResponse>
    Change the JDBC data source to be a concrete class.
  </UserResponse>
</Message>
<Message ID="WSCL0400I" severity="I" prefix="yes">
  <MsgText pgmKey="ccresenv.binding" varFormat="Java">
    ccresenv.binding=WSCL0400I: Binding resource environment reference object:
           JNDI name: {0}
           Type: {1}
           Description: {2}
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    No action is required. This is for information only.
  </UserResponse>
</Message>
<!-- END MESSAGES -->
</TMSSource>
