<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="../../resources/stylesheets/wasmsgxml.css"?>
<TMSSource name="TivoliMessages" tmsVersion="1.0" xml:lang="en">
<!-- CMVC MSG File Name = SERV1/ws/code/memoryleak/src/com/ibm/ws/runtime/component/memleak.nlsprops -->
<!-- DO NOT EDIT THIS FILE - This file was generated by the XML/Html & Property emitter -->
<!-- BEGIN MESSAGES -->
<Message ID="CWMML0010E" severity="E" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.warnThread" varFormat="Java">
    leakDetectionAndAction.warnThread=CWMML0010E: The web application [{0}] appears to have started a thread named [{1}] but has failed to stop it.
  </MsgText>
  <Explanation>
    This is very likely to create a memory leak.
  </Explanation>
  <UserResponse>
    Implement a cancellation policy that will take effect once the application is stopped.
  </UserResponse>
</Message>
<Message ID="CWMML0020W" severity="W" prefix="yes">
  <MsgText pgmKey="memoryLeakMgr.appCLLeak" varFormat="Java">
    memoryLeakMgr.appCLLeak=CWMML0020W: Application class loader leak: [{0}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0028I" severity="I" prefix="yes">
  <MsgText pgmKey="MemoryLeakMBean.findleaksList" varFormat="Java">
    MemoryLeakMBean.findleaksList=CWMML0028I: The following web applications were stopped (reloaded, undeployed), but their classes from previous runs are still loaded in memory, thus causing a memory leak.[{0}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    Please use a profiler to confirm the memory leak.
  </UserResponse>
</Message>
<Message ID="CWMML0017E" severity="E" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.checkThreadLocalsForLeaks.badValue" varFormat="Java">
    leakDetectionAndAction.checkThreadLocalsForLeaks.badValue=CWMML0017E: Unable to determine string representation of value of type [{0}].  Exception [{1}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0027W" severity="W" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.noThreadPool" varFormat="Java">
    leakDetectionAndAction.noThreadPool=CWMML0027W: Could NOT locate thread pool [{0}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0039I" severity="I" prefix="yes">
  <MsgText pgmKey="memoryLeakMgr.disabled.server" varFormat="Java">
    memoryLeakMgr.disabled.server=CWMML0039I: Classloader memory Leak detection service does not run on this server type.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0007E" severity="E" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.clearJdbc" varFormat="Java">
    leakDetectionAndAction.clearJdbc=CWMML0007E: The web application [{0}] registered the JDBC driver [{1}] but failed to unregister it when the web application stopped.
  </MsgText>
  <Explanation>
    To prevent a memory leak, the JDBC Driver has been forcibly unregistered.
  </Explanation>
  <UserResponse>
    To prevent this behavior please undo the automatic JDBC leak clearing configuration using wsadmin scripting or the administrative console.
  </UserResponse>
</Message>
<Message ID="CWMML0032I" severity="I" prefix="yes">
  <MsgText pgmKey="MemoryLeakMBean.enableLeakFixing" varFormat="Java">
    MemoryLeakMBean.enableLeakFixing=CWMML0032I: Classloader memory leak fixing is currently disabled.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    Consider enabling Classloader leak fixing by setting the com.ibm.ws.runtime.component.MemoryLeakConfig.clearAppCLLeaks JVM system property to true and restarting the server.
  </UserResponse>
</Message>
<Message ID="CWMML0033E" severity="E" prefix="yes">
  <MsgText pgmKey="MemoryLeakMBean.fixLeaksFail" varFormat="Java">
    MemoryLeakMBean.fixLeaksFail=CWMML0033E: FAIL - No matching application  found with name  [{0}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0004E" severity="E" prefix="yes">
  <MsgText pgmKey="jreLeakListener.ldapPoolManagerFail" varFormat="Java">
    jreLeakListener.ldapPoolManagerFail=CWMML0004E: Failed to trigger creation of the com.sun.jndi.ldap.LdapPoolManager class during server start to prevent possible memory leaks [{0}]
  </MsgText>
  <Explanation>
    This is expected on non-Sun JVM environments
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0037I" severity="I" prefix="yes">
  <MsgText pgmKey="memoryLeakMgr.disabled" varFormat="Java">
    memoryLeakMgr.disabled=CWMML0037I: Memory Leak Service disabled because the com.ibm.ws.runtime.component.disableMemoryLeakService JVM system property is set to true.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0034E" severity="E" prefix="yes">
  <MsgText pgmKey="MemoryLeakMBean.stopApp" varFormat="Java">
    MemoryLeakMBean.stopApp=CWMML0034E: Please stop application [{0}] before issuing the fixLeaks mbean operation.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    Please stop the application  [{0}].
  </UserResponse>
</Message>
<Message ID="CWMML0026I" severity="I" prefix="yes">
  <MsgText pgmKey="memoryLeakMgr.appCLLeakActionSuccess" varFormat="Java">
    memoryLeakMgr.appCLLeakActionSuccess=CWMML0026I: ClassLoader memory leak is fixed. Clearing leak References succeeded for {0}.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0014W" severity="W" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.checkThreadLocalsForLeaksFail" varFormat="Java">
    leakDetectionAndAction.checkThreadLocalsForLeaksFail=CWMML0014W: Failed to check for ThreadLocal references for web application [{0}]. Exception [{1}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0022I" severity="I" prefix="yes">
  <MsgText pgmKey="memoryLeakMgr.SystemDump" varFormat="Java">
    memoryLeakMgr.SystemDump=CWMML0022I: System dump generated.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0011E" severity="E" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.warnTimerThread" varFormat="Java">
    leakDetectionAndAction.warnTimerThread=CWMML0011E: The web application [{0}] appears to have started a TimerThread named [{1}] via the java.util.Timer API but has failed to stop it.
  </MsgText>
  <Explanation>
    To prevent a memory leak, the timer (and the associated thread) has been forcibly canceled.
  </Explanation>
  <UserResponse>
    To prevent this behavior undo the automatic timer thread stopping via wsadmin scripting or the administrative console.
  </UserResponse>
</Message>
<Message ID="CWMML0031I" severity="I" prefix="yes">
  <MsgText pgmKey="MemoryLeakMBean.enableLeakDetection" varFormat="Java">
    MemoryLeakMBean.enableLeakDetection=CWMML0031I: Classloader memory leak detection is currently disabled.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    Enable Classloader leak detection by setting the com.ibm.ws.runtime.component.MemoryLeakConfig.detectAppCLLeaks JVM system property  to true and restart the server.
  </UserResponse>
</Message>
<Message ID="CWMML0016E" severity="E" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.checkThreadLocalsForLeaks.badKey" varFormat="Java">
    leakDetectionAndAction.checkThreadLocalsForLeaks.badKey=CWMML0016E: Unable to determine string representation of key of type [{0}].  Exception [{1}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0038I" severity="I" prefix="yes">
  <MsgText pgmKey="memoryLeakMgr.disabled.generic" varFormat="Java">
    memoryLeakMgr.disabled.generic=CWMML0038I: Memory Leak Service is disabled because [{0}].
  </MsgText>
  <Explanation>
    Memory Leak Service runs only on application servers that host applications.
  </Explanation>
  <UserResponse>
    Check if you are running the commands on the correct server or for any exceptions in the log.
  </UserResponse>
</Message>
<Message ID="CWMML0018I" severity="I" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.clearRmiInfo" varFormat="Java">
    leakDetectionAndAction.clearRmiInfo=CWMML0018I: Failed to find class sun.rmi.transport.Target to clear context class loader for web application [{0}].
  </MsgText>
  <Explanation>
    This is expected on non-Sun JVM environments.
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0019E" severity="E" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.clearReferencesResourceBundlesFail" varFormat="Java">
    leakDetectionAndAction.clearReferencesResourceBundlesFail=CWMML0019E: Failed to clear ResourceBundle references for web application [{0}]. Exception [{1}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0023I" severity="I" prefix="yes">
  <MsgText pgmKey="memoryLeakMgr.noLeak" varFormat="Java">
    memoryLeakMgr.noLeak=CWMML0023I: No application class loader leaks found.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0006I" severity="I" prefix="yes">
  <MsgText pgmKey="jreLeakListener.classLoaderPinning" varFormat="Java">
    jreLeakListener.classLoaderPinning=CWMML0006I: Using Classloader [{0}] for pinning JDK singletons.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0029I" severity="I" prefix="yes">
  <MsgText pgmKey="MemoryLeakMBean.noLeaks" varFormat="Java">
    MemoryLeakMBean.noLeaks=CWMML0029I: No memory leaks found
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0012W" severity="W" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.stopThreadFail" varFormat="Java">
    leakDetectionAndAction.stopThreadFail=CWMML0012W: Failed to terminate thread named [{0}] for web application [{1}]. Exception [{2}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0036I" severity="I" prefix="yes">
  <MsgText pgmKey="MemoryLeakMBean.fixAppWatchResults" varFormat="Java">
    MemoryLeakMBean.fixAppWatchResults=CWMML0036I: Please watch the SystemOut log for results of the fix leak operation.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0025I" severity="I" prefix="yes">
  <MsgText pgmKey="memoryLeakMgr.appCLLeakTakeAction" varFormat="Java">
    memoryLeakMgr.appCLLeakTakeAction=CWMML0025I: Preparing to take action to reduce the scope or eliminate the memory leak for module [{0}]. This may take up to 10 minutes.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0003E" severity="E" prefix="yes">
  <MsgText pgmKey="jreLeakListener.xmlParseFail" varFormat="Java">
    jreLeakListener.xmlParseFail=CWMML0003E: Error while attempting to prevent memory leaks during XML parsing [{0}]
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0015E" severity="E" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.checkThreadLocalsForLeaks" varFormat="Java">
    leakDetectionAndAction.checkThreadLocalsForLeaks=CWMML0015E: The web application [{0}] created a ThreadLocal with key of type [{1}] (value [{2}]) and a value of type [{3}] (value [{4}]) but failed to remove it when the web application stopped.
  </MsgText>
  <Explanation>
    Threads are going to be renewed over time to try and avoid a probable memory leak.
  </Explanation>
  <UserResponse>
    To prevent this behavior please undo the automatic thread pool renewal via wsadmin scripting or the administrative console.
  </UserResponse>
</Message>
<Message ID="CWMML0008W" severity="W" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.jdbcRemoveFailed" varFormat="Java">
    leakDetectionAndAction.jdbcRemoveFailed=CWMML0008W: JDBC driver de-registration failed for web application [{0}]. Exception [{1}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0009E" severity="E" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.warnRequestThread" varFormat="Java">
    leakDetectionAndAction.warnRequestThread=CWMML0009E: The web application [{0}] is still processing a request that has yet to finish.
  </MsgText>
  <Explanation>
    This is could potentially create a memory leak.
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0024W" severity="W" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.interruptThread" varFormat="Java">
    leakDetectionAndAction.interruptThread=CWMML0024W: Preparing to interrupt thread [{0}] which is currently executing 
 [{1}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0035I" severity="I" prefix="yes">
  <MsgText pgmKey="memoryLeakMgr.noLeaksForApp" varFormat="Java">
    memoryLeakMgr.noLeaksForApp=CWMML0035I: No memory leaks found for application [{0}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0030E" severity="E" prefix="yes">
  <MsgText pgmKey="MemoryLeakMBean.findleaksFail" varFormat="Java">
    MemoryLeakMBean.findleaksFail=CWMML0030E: FAIL - Classloader [{0}] not an instance of CompoundClassLoader.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0021I" severity="I" prefix="yes">
  <MsgText pgmKey="memoryLeakMgr.heapDump" varFormat="Java">
    memoryLeakMgr.heapDump=CWMML0021I: Heap dump generated.
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0001E" severity="E" prefix="yes">
  <MsgText pgmKey="jreLeakListener.gcDaemonFail" varFormat="Java">
    jreLeakListener.gcDaemonFail=CWMML0001E: Failed to trigger creation of the GC Daemon thread during server start to prevent possible memory leaks  [{0}]
  </MsgText>
  <Explanation>
    This is expected on non-Sun JVM environments
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0002E" severity="E" prefix="yes">
  <MsgText pgmKey="jreLeakListener.jarUrlConnCacheFail" varFormat="Java">
    jreLeakListener.jarUrlConnCacheFail=CWMML0002E: Failed to disable JAR URL connection caching by default [{0}]
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0013W" severity="W" prefix="yes">
  <MsgText pgmKey="leakDetectionAndAction.stopTimerThreadFail" varFormat="Java">
    leakDetectionAndAction.stopTimerThreadFail=CWMML0013W: Failed to terminate TimerThread named [{0}] for web application [{1}]. Exception [{2}].
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<Message ID="CWMML0005E" severity="E" prefix="yes">
  <MsgText pgmKey="jreLeakListener.classToInitializeFail" varFormat="Java">
    jreLeakListener.classToInitializeFail=CWMML0005E: Failed to load class [{0}] during server start to prevent possible memory leaks [{1}]
  </MsgText>
  <Explanation>
    None
  </Explanation>
  <UserResponse>
    None
  </UserResponse>
</Message>
<!-- END MESSAGES -->
</TMSSource>
