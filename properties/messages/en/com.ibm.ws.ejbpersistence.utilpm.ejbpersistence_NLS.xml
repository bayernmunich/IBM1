<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="../../resources/stylesheets/wasmsgxml.css"?>
<TMSSource name="TivoliMessages" tmsVersion="1.0" xml:lang="en">
<!-- CMVC MSG File Name = ws/code/runtime/src/com/ibm/ws/ejbpersistence/utilpm/ejbpersistence_NLS.nlsprops -->
<!-- DO NOT EDIT THIS FILE - This file was generated by the XML/Html & Property emitter -->
<!-- BEGIN MESSAGES -->
<Message ID="PMGR1108E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1108" varFormat="Java">
    PMGR1108=PMGR1108E: Get NULL AccessIntent.
  </MsgText>
  <Explanation>
    A NULL value for the AccessIntent &lt;type&gt; was received from the EntityContext &lt;type&gt;.
  </Explanation>
  <UserResponse>
    Check with the container component owner.
  </UserResponse>
</Message>
<Message ID="PMGR1107E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1107" varFormat="Java">
    PMGR1107=PMGR1107E: Find class level read only bean for update -- {0}.
  </MsgText>
  <Explanation>
    An exception occured when the ejbFind, ejbLoad a bean , which is class level read only. However, the AccessIntent is set as for update.
  </Explanation>
  <UserResponse>
    Check the ibm-ejb-jar-ext.xml file for the data cache setting. Also, check the AccessIntent setting for the method that loads the bean.
  </UserResponse>
</Message>
<Message ID="PMGR1106E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1106" varFormat="Java">
    PMGR1106=PMGR1106E: Update class level read only bean.
  </MsgText>
  <Explanation>
    An exception occured when the ejbCreate, ejbStore, ejbRemove a bean , which is class level read only
  </Explanation>
  <UserResponse>
    Check the ibm-ejb-jar-ext.xml file for the data cache setting.
  </UserResponse>
</Message>
<Message ID="PMGR1105E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1105" varFormat="Java">
    PMGR1105=PMGR1105E: Illegal state due to ejbActivate/ejbCreate called to a ready bean.
  </MsgText>
  <Explanation>
    An illegal state exists because the ejbActivate or ejbCreate have been called to a ready bean.
  </Explanation>
  <UserResponse>
    Check the deployed code or container for problems.
  </UserResponse>
</Message>
<Message ID="PMGR1104E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1104" varFormat="Java">
    PMGR1104=PMGR1104E: Illegal state due to ejbRemove/ejbLoad/ejbStore called before calling ejbPostCreateor ejbActivate.
  </MsgText>
  <Explanation>
    An illegal state exists because the ejbRemove, ejbLoad, or ejbStore are called before calling ejbPostCreate or ejbActivate.
  </Explanation>
  <UserResponse>
    Check the deployed code or container for problems.
  </UserResponse>
</Message>
<Message ID="PMGR1103E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1103" varFormat="Java">
    PMGR1103=PMGR1103E: update instance level read only bean -- {0}.
  </MsgText>
  <Explanation>
    An exception occured when the ejbCreate, ejbStore, or ejbRemove a bean , which load as read intent.
  </Explanation>
  <UserResponse>
    Check the AccessIntent setting for the method that loads the bean.
  </UserResponse>
</Message>
<Message ID="PMGR1102E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1102" varFormat="Java">
    PMGR1102=PMGR1102E: Error looking up AccessIntentService--{0}.
  </MsgText>
  <Explanation>
    An exception occurred when &lt;what does the look up?&gt; looked up the AccessIntenetService &lt;type&gt;.
  </Explanation>
  <UserResponse>
    Verify that the AccessIntentService &lt;type&gt; in the run time is defined. For more information, see &quot;AccessIntent&quot; in the documentation.
  </UserResponse>
</Message>
<Message ID="PMGR1101E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1101" varFormat="Java">
    PMGR1101=PMGR1101E: Illegal state.
  </MsgText>
  <Explanation>
    The state of the concrete bean is not correct for the specified life cycle method.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="PMGR6504E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6504" varFormat="Java">
    PMGR6504=PMGR6504E: Caused by BeanDeploymentDescriptorException
  </MsgText>
  <Explanation>
    This error clarifies the origin of the preceeding exception.
  </Explanation>
  <UserResponse>
    See the preceeding exeception to determine the appropriate action.
  </UserResponse>
</Message>
<Message ID="PMGR6503E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6503" varFormat="Java">
    PMGR6503=PMGR6503E: Caused by BeanGenerationException
  </MsgText>
  <Explanation>
    This error clarifies the origin of the preceeding exception.
  </Explanation>
  <UserResponse>
    See the preceeding exeception to determine the appropriate action.
  </UserResponse>
</Message>
<Message ID="PMGR6502E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6502" varFormat="Java">
    PMGR6502=PMGR6502E: Caused by PersistenceManagerInternalError
  </MsgText>
  <Explanation>
    This error clarifies the origin of the preceeding exception.
  </Explanation>
  <UserResponse>
    See the preceeding exeception to determine the appropriate action.
  </UserResponse>
</Message>
<Message ID="PMGR6501E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6501" varFormat="Java">
    PMGR6501=PMGR6501E: Caused by ErrorProcessingResultCollectionRow
  </MsgText>
  <Explanation>
    This error clarifies the origin of the preceeding exception.
  </Explanation>
  <UserResponse>
    See the preceeding exeception to determine the appropriate action.
  </UserResponse>
</Message>
<Message ID="PMGR6102E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6102" varFormat="Java">
    PMGR6102=PMGR6102E: SerializableDVFieldExtractor could not find the class for a Dependent Value, on behalf of an ejbSelect for a CMP field (the DV).
  </MsgText>
  <Explanation>
    When unserializing a column of data that results from a finder or select method, the Java class of the object that previously serialized into this column cannot be found.
  </Explanation>
  <UserResponse>
    Examine the Java class path, the Java archive (JAR) file and so on that is associated with your application to determine why this class cannot be found. This class is typically provided by you. As a test, attempt to create an instance of this class, or otherwise refer to it, within a servlet that you have written. The servlet needs to run on the application server just as the persistence manager runs.
  </UserResponse>
</Message>
<Message ID="PMGR6101E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6101" varFormat="Java">
    PMGR6101=PMGR6101E: SerializableDVFieldExtractor encountered error while extracting a Dependent Value on behalf of an ejbSelect for a CMP field (the DV).
  </MsgText>
  <Explanation>
    A low-level error occurred in retrieving data from your resource adapter or its data store as the result of a finder or select method. A common source of error is that the data in the given column is not a serialized or externalized Java object as it was asserted. Also, the error might occur due to a mapping of this back-end column to a bean attribute.
  </Explanation>
  <UserResponse>
    Verify that the value of this column in your data store is a serialized or externalized Java object. If it is a serialized or externalized Java object, examine the classes that are generated by the Deploy Tool especially the xxxAdapterBinding class for this bean type.
  </UserResponse>
</Message>
<Message ID="PMGR6057E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6057" varFormat="Java">
    PMGR6057=PMGR6057E: Error in generation of BeanAdapterBinding contents. Either an internal error in ejbdeploy or generated code was modified afterward &amp; an error was introduced.
  </MsgText>
  <Explanation>
    The format or content of the data in the generated BeanAdapterBinding subclass for a container-managed persistence (CMP) bean does not match the data that the persistence manager runtime expects. This error might result from an error in ejbdeploy command or in the persistence manager run time. The error might also result when the generated code is incorrectly edited.
  </Explanation>
  <UserResponse>
    If you changed the code that is generated by the Deploy Tool, check for errors in this code. Otherwise, report this error to IBM.&quot; Do not tell customers to report the error to IBM. If you cannot provide another solution, add the following information: &quot;See the problem determination information on the WebSphere Application Server Support Web page: http://www.ibm.com/software/webservers/appserv/was/support
  </UserResponse>
</Message>
<Message ID="PMGR6056E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6056" varFormat="Java">
    PMGR6056=PMGR6056E: This generated DataAccessSpec has a WholeRowExtractor with more than one extractor (which indicates other bean data will be read ahead) and yet has no ReadAheadHint to indicate what other bean data should be read ahead.
  </MsgText>
  <Explanation>
    The generated DataAccessSpec &lt;specification?&gt; has a WholeRowExtractor &lt;type?&gt; with more than one extractor, which indicates that other bean data will be read first. However, the &lt;specification?&gt; does not have a ReadAheadHint &lt;type?&gt; to specify which other bean data to read first.
  </Explanation>
  <UserResponse>
    If you changed the code that is generated by the Deploy Tool, especially the xxxAdapterBinding class, check for errors in this code.
  </UserResponse>
</Message>
<Message ID="PMGR6055E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6055" varFormat="Java">
    PMGR6055=PMGR6055E: Function not supported.
  </MsgText>
  <Explanation>
    Your application attempted to call a method that is not supported.
  </Explanation>
  <UserResponse>
    Change your application so it does not call methods that are not supported.
  </UserResponse>
</Message>
<Message ID="PMGR6054E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6054" varFormat="Java">
    PMGR6054=PMGR6054E: Cannot find local host IP address (by calling java.net.InetAddress.getLocalHost().getHostAddress()), used to generate unique key value.
  </MsgText>
  <Explanation>
    This IP address is used to generate unique key values for use with beans that are defined with the unknown primary key type. This IP address is used on distributed operating systems and not the z/OS operating system. Without the IP addresss, the persistence manager cannot support the unknown key type.
  </Explanation>
  <UserResponse>
    I understand that you are using CMSG0002 to point to the online problem determination information. If possible,  attempt to provide some type of help so that a customer can self-diagnose the problem.
  </UserResponse>
</Message>
<Message ID="PMGR6053E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6053" varFormat="Java">
    PMGR6053=PMGR6053E: INTERNAL ERROR: ResultCollection.fieldResultRawData is null
  </MsgText>
  <Explanation>
    The fieldResultRawData wrapper is a wrapper for the result set or the indexed record that is returned from a finder or select method. This wrapper is set to a non-null value. There must be an internal logic error in the code that initialized the ResultCollection collection.
  </Explanation>
  <UserResponse>
    I understand that you are using CMSG0002 to point to the online problem determination information. If possible,  attempt to provide some type of help so that a customer can self-diagnose the problem.
  </UserResponse>
</Message>
<Message ID="PMGR6052E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6052" varFormat="Java">
    PMGR6052=PMGR6052E: This generated extractor did not override the &apos;extractDiscriminationValues&apos; method, although it should have since its bean is part of an inheritance hierarchy.
  </MsgText>
  <Explanation>
    This generated extractor did not override the extractDiscriminationValues&apos; method. The extractor should have overridden the method because its bean is part of an inheritance hierarchy.
  </Explanation>
  <UserResponse>
    If you changed the code that is generated by the Deploy Tool, check for errors in this code.
  </UserResponse>
</Message>
<Message ID="PMGR6051E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6051" varFormat="Java">
    PMGR6051=PMGR6051E: This generated extractor did not override the &apos;discriminate&apos; method, although it should have since its bean is part of an inheritance hierarchy.
  </MsgText>
  <Explanation>
    The generated extractor did not override the discriminate method. The extractor should have overridden the method because its bean is part of an inheritance hierarchy.
  </Explanation>
  <UserResponse>
    If you changed the code that is generated by the Deploy Tool, check for errors in this code.
  </UserResponse>
</Message>
<Message ID="PMGR6050E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6050" varFormat="Java">
    PMGR6050=PMGR6050E: Collection is read-only, since it represents data from a backend data store.
  </MsgText>
  <Explanation>
    Collections that are returned from a finder or select method are read-only; they do not allow changes to their content. Your application attempted to call a collection method that attempts to update the content.
  </Explanation>
  <UserResponse>
    Change your application so it does not call collection methods that attempts to update the content. If you need a collection that has some, but not all, of the beans in the returned collection, copy the desired elements into a collection you can create.
  </UserResponse>
</Message>
<Message ID="PMGR5027E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR5027" varFormat="Java">
    PMGR5027=PMGR5027E: Exception while trying to receive a PM cache invalidation message
  </MsgText>
  <Explanation>
    The PMCacheInvalidationMessageHandler thread caught an exception while receiving invalidation messages.
  </Explanation>
  <UserResponse>
    I understand that you are using CMSG0002 to point to the online problem determination information. If possible, attempt to provide some type of help so that a customer can self-diagnose the problem.
  </UserResponse>
</Message>
<Message ID="PMGR5026E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR5026" varFormat="Java">
    PMGR5026=PMGR5026E: Exception during invalidate listener initialization
  </MsgText>
  <Explanation>
    The PM cache invalidation was not set up correctly during server startup. An internal error probably occurred in the installation of the Java Message Service (JMS) TopicConnectionFactory or TopicDestination topic.
  </Explanation>
  <UserResponse>
    I understand that you are using CMSG0002 to point to the online problem determination information. If possible, attempt to provide some type of help so that a customer can self-diagnose the problem.
  </UserResponse>
</Message>
<Message ID="PMGR5025E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR5025" varFormat="Java">
    PMGR5025=PMGR5025E: ClassNotFoundException while deserializing bean primary key object passed by client code. Key object is not of the correct class for bean type with JNDI home name = {0}.
  </MsgText>
  <Explanation>
    The client code sent an incorrect Java Message Service (JMS) message to the cache invalidate topic for the persistence manager.
  </Explanation>
  <UserResponse>
    Find the application code that sends the JMS message to the PM cache invalidate topic. Make sure that the application code follows the documented interface for Cache Invalidation. Especially, ensure that the key objects that you pass in the request are the correct type for the beanHomeJNDIName name that you pass in the request.
  </UserResponse>
</Message>
<Message ID="PMGR5024E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR5024" varFormat="Java">
    PMGR5024=PMGR5024E: IOException while accessing byte-array-ized key object {0}
  </MsgText>
  <Explanation>
    A PM cache invalidation request caused an error when a primary key object was serialized into a byte[]. If the key class for the bean is at fault, other errors should have ocurred elsewhere.
  </Explanation>
  <UserResponse>
    Confirm that the primary key class for you bean correctly serializes and deserializes itself as required by the Enterprise JavaBean (EJB) 2.x specification. If it does, report this error to IBM.
  </UserResponse>
</Message>
<Message ID="PMGR5023E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR5023" varFormat="Java">
    PMGR5023=PMGR5023E: Bean home JNDI name {0} was used for more than one bean currently installed on this application server. Bean home JNDI names must be unique for CMP beans.
  </MsgText>
  <Explanation>
    The container-managed persistence (CMP) entity beans did not ensure that each entity bean uses a unique Java Naming and Directory Interface (JNDI) name for the bean home.
  </Explanation>
  <UserResponse>
    Examine the JNDI name for the bean home that is used by installed beans and remove any duplicate names. You can find the installed beans in the deployment descriptor and other places.
  </UserResponse>
</Message>
<Message ID="PMGR5022E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR5022" varFormat="Java">
    PMGR5022=PMGR5022E: Bean home JNDI name {0} not found among the names for beans currently installed on this application server.
  </MsgText>
  <Explanation>
    The client code has sent an incorrect Java Message Service (JMS) message to the cache invalidate topic for the persistence manager.
  </Explanation>
  <UserResponse>
    Find the application code that sends &lt;sends what?&gt; to the PM cache invalidate topic. Set the beanHomeJNDIName parameter to a correct value.
  </UserResponse>
</Message>
<Message ID="PMGR5021E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR5021" varFormat="Java">
    PMGR5021=PMGR5021E: PM&apos;s invalidation listener received a message but the message parameter was not a PMCacheInvalidationRequest object as required.
  </MsgText>
  <Explanation>
    The client code has sent an incorrect Java Message Service (JMS) message to the cache invalidate topic for the persistence manager.
  </Explanation>
  <UserResponse>
    Find the application code that sends &lt;sends what?&gt; to the PM cache invalidate topic and verify that it follows the documented interface for Cache Invalidation.
  </UserResponse>
</Message>
<Message ID="PMGR5020E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR5020" varFormat="Java">
    PMGR5020=PMGR5020E: The given bean type has Lifetime In Cache Usage OFF, so there is no cache to invalidate. The invalidate request is ignored.
  </MsgText>
  <Explanation>
    The client code has sent a PMCacheInvalidationRequest request with abeanAbstractSchemaName name. Either configure the Lifetime In Cache Usage &lt;option?&gt; for this bean type or the beanAbstractSchemaName name for the request is associated with the wrong bean type.
  </Explanation>
  <UserResponse>
    Use an assembly tool to update the Entity Bean configuration. For more information on the assembly tools, see the information center. Within an assembly tool, click the IBM Extensions tab and set the Lifetime In Cache Usage &lt;option?&gt; to an appropriate value other than Off. As an alternative, find the application code that sends the PMCacheInvalidationRequest &lt;request?&gt; and correct the value for the beanAbstractSchemaName name.
  </UserResponse>
</Message>
<Message ID="PMGR6046E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6046" varFormat="Java">
    PMGR6046=PMGR6046E: Result is of an unknown type. See ResultCollection doc for Resource Adapter standards on results of type cci.Record.
  </MsgText>
  <Explanation>
    The resource adapter for this bean type returned the result of a finder or select method as an unknown type of object.
  </Explanation>
  <UserResponse>
    Review the documentation for the resource adapter that you are using to see if it is compatible for use as the data store for container-managed persistence (CMP) Version 2.0 beans. There might be an error or omission in the EJBToRAAdapter subclass that is supplied with or added to your resource adapter. If you are using the relational resource adapter, which is the default, this error is an internal error.
  </UserResponse>
</Message>
<Message ID="PMGR6045E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6045" varFormat="Java">
    PMGR6045=PMGR6045E: Result is MappedRecord, which is not supported. See ResultCollection doc for Resource Adapter standards on results of type cci.Record.
  </MsgText>
  <Explanation>
    The persistence manger requires that the resource adapters return the result of a finder or select method as either javax.resource.cci.ResultSet or javax.resource.cci.IndexedRecord. The javax.resource.cci.MappedRecord result is not supported.
  </Explanation>
  <UserResponse>
    Review the documentation for the resource adapter that you are using to see if it is compatible for use as the data store for container-managed persistence (CMP) Version 2.0 beans. There might be an error or omission in the EJBToRAAdapter subclass that is supplied with or added to your resource adapter. If you are using the relational resource adapter, which is the default, this error is an internal error.
  </UserResponse>
</Message>
<Message ID="PMGR6999E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6999" varFormat="Java">
    PMGR6999=PMGR6999E: INTERNAL USE ONLY: attempt to access DataStore when access is turned off
  </MsgText>
  <Explanation>
    The INTERNAL_USE_ONLY_throwOnDatastoreAccess flag, which is internal to the product, has been altered. Altering this flag is a user error and is not supported.
  </Explanation>
  <UserResponse>
    Remove the application code alters the INTERNAL_USE_ONLY_throwOnDatastoreAccess flag.
  </UserResponse>
</Message>
<Message ID="PMGR6043E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6043" varFormat="Java">
    PMGR6043=PMGR6043E: Problem closing connection after interaction.execute(...) normal completion. Throwable was: {0}
  </MsgText>
  <Explanation>
    A connection attempted to close when it was in use by a method other than a find or select method. These methods include the create, update or remove method.
  </Explanation>
  <UserResponse>
    Check for a dropped connection to your data store or another problem with database connections. Review the documentation for the resource adapter that you are using to see if it is compatible as the data store for container-managed persistence (CMP) Version 2.0 beans. If you are using the relational resource adapter, which is the default, this error is an internal error.
  </UserResponse>
</Message>
<Message ID="PMGR6042E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6042" varFormat="Java">
    PMGR6042=PMGR6042E: Non-SQL error on first call to resultSet.next(). ResultSet is: {0}
  </MsgText>
  <Explanation>
    An exception occurred that is not related to the PMGR6040 or PMGR6041 message when &lt;the Application Server&gt; iterated through a ResultSet result that has been returned from a finder or select method.
  </Explanation>
  <UserResponse>
    Review the documentation for the resource adapter that you are using to see if it is compatible for use as the data store for container-managed persistence (CMP) Version 2.0 beans. If you are using the relational resource adapter, which is the default, this error is an internal error.
  </UserResponse>
</Message>
<Message ID="PMGR6041E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6041" varFormat="Java">
    PMGR6041=PMGR6041E: SQLException on first call to resultSet.next(). ResultSet is: {0}
  </MsgText>
  <Explanation>
    An SQLException exception was created when &lt;the Application Server?&gt; iterated through a ResultSet result that has been returned from a finder or select method.
  </Explanation>
  <UserResponse>
    Review the documentation for the resource adapter that you are using to see if it is compatible for use as the data store for container-managed persistence (CMP) Version 2.0 beans. If you are using the relational resource adapter, which is the default, this error is an internal error.
  </UserResponse>
</Message>
<Message ID="PMGR6040E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6040" varFormat="Java">
    PMGR6040=PMGR6040E: resultSet was found to be closed on first call to resultSet.next(). ResultSet is: {0}
  </MsgText>
  <Explanation>
    The connection that is used to obtain the ResultSet result might be broken, which might trigger a close of ResultSets results. This error also results when the Java 2 Connection (J2C) connection manager has prematurely closed a connection.
  </Explanation>
  <UserResponse>
    Check for a dropped connection to your data store. Review the documentation for the resource adapter that you are using to see if it is compatible as the data store for container-managed persistence (CMP) Version 2.0 beans. f you are using the relational resource adapter, which is the default, this error is an internal error.
  </UserResponse>
</Message>
<Message ID="PMGR0001E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR0001" varFormat="Java">
    PMGR0001=PMGR0001E: Caused by: {0}
  </MsgText>
  <Explanation>
    Used to print the messageText of the exception(s) nested (a.k.a. chained) in the original exception.
  </Explanation>
  <UserResponse>
    Read the chain of exceptions to help determine the problem. The last exception is often the root cause of the problem.
  </UserResponse>
</Message>
<Message ID="PMGR0000E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR0000" varFormat="Java">
    PMGR0000=PMGR0000E: Call stack:
{0}
  </MsgText>
  <Explanation>
    The call stack exception that occured when the persistence manager created the original exception.
  </Explanation>
  <UserResponse>
    See the preceeding error message, which caused this call stack exception to occur.
  </UserResponse>
</Message>
<Message ID="PMGR5010E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR5010" varFormat="Java">
    PMGR5010=PMGR5010E: Bean (DataAccessSpec) was generated with complete associations in its list but without DataCacheEntry support for them.
  </MsgText>
  <Explanation>
    The DataAccessSpec &lt;type&gt; for a finder method included a CompleteAssociationList &lt;type&gt;. However,the xxxDataCacheEntry &lt;type&gt; was not generated to make use of it.
  </Explanation>
  <UserResponse>
    Check the xxxAdapterBinding class and the xxxCacheEntry class, which are generated by the Deploy tool, for the bean type that is being used. Examine the input that you gave to the Deploy Tool for this bean type.
  </UserResponse>
</Message>
<Message ID="PMGR6038E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6038" varFormat="Java">
    PMGR6038=PMGR6038E: In RawBeanData, both resultRecord and resultSet were null. This should never happen, internal logic error.
  </MsgText>
  <Explanation>
    An internal error resulted from the logic that creates and initializes a ResultCollection collection.
  </Explanation>
  <UserResponse>
    I understand that you are using CMSG0002 to point to the online problem determination information. If possible,  attempt to provide some type of help so that a customer can self-diagnose the problem.
  </UserResponse>
</Message>
<Message ID="PMGR6036E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6036" varFormat="Java">
    PMGR6036=PMGR6036E: Unexpected exception occurred while calling ResultSet.next(). ResultSet is: {0}
  </MsgText>
  <Explanation>
    The resource adapter returned the javax.resource.cci.ResultSet result. A call to the next method failed on the result.
  </Explanation>
  <UserResponse>
    Review the documentation for the resource adapter that you are using to see if it is compatible for use as the data store for container-managed persistence (CMP) Version 2.0 beans. If you are using the relational resource adapter, which is the default, this error is an internal error.
  </UserResponse>
</Message>
<Message ID="PMGR6035E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6035" varFormat="Java">
    PMGR6035=PMGR6035E: SQLException occurred while calling ResultSet.next(). ResultSet is: {0}
  </MsgText>
  <Explanation>
    As the result of a finder or select method, an error occurred in iterating through the javax.resource.cci.ResultSet result that was returned from your resource adapter or its data store.
  </Explanation>
  <UserResponse>
    Review the documentation for the resource adapter that you are using to see if it is compatible for use as the data store for container-managed persistence (CMP) Version 2.0 beans. If you are using the relational resource adapter, which is the default, this error is an internal error.
  </UserResponse>
</Message>
<Message ID="PMGR6034E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6034" varFormat="Java">
    PMGR6034=PMGR6034E: An error occured while extracting data from a row of finder results (for example, the value found in a discrimination column was not recognized by the Extractor processing it).
  </MsgText>
  <Explanation>
    The data that was retrieved from the data store for a bean does not match the generated extractor code for that bean type. Thus, the method cannot properly process the data for use as an entity bean.
  </Explanation>
  <UserResponse>
    An internal error occurred in the tool that generated the extractor for this bean type. This error does not occur as a result of user error during data mappping or other configuration.
  </UserResponse>
</Message>
<Message ID="PMGR6033E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6033" varFormat="Java">
    PMGR6033=PMGR6033E: Method cannot be called until after extractData() has been called.
  </MsgText>
  <Explanation>
    An attempt has been made to call a method that does not work until after the bean data is extracted from this result row. The data is extracted using the xxxExtractor.extractData method.
  </Explanation>
  <UserResponse>
    I understand that you are using CMSG0002 to point to the online problem determination information. If possible, attempt to provide some type of help so that a customer can self-diagnose the problem.
  </UserResponse>
</Message>
<Message ID="PMGR6032E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6032" varFormat="Java">
    PMGR6032=PMGR6032E: SQLException when trying to perform {0}: {1}
  </MsgText>
  <Explanation>
    As the result of a finder or select method, the data that was returned from your resource adapter or its data store resulted in an error.
  </Explanation>
  <UserResponse>
    Review the documentation for the resource adapter that you are using to see if it is compatible for use as the data store for container-managed persistence (CMP) Version 2.0 beans. If you are using the relational resource adapter, which is the default, this error is an internal error.
  </UserResponse>
</Message>
<Message ID="PMGR6031E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6031" varFormat="Java">
    PMGR6031=PMGR6031E: SQLException when trying to get resultSet column {0} as a {1}. RawBeanData={2}
  </MsgText>
  <Explanation>
    As the result of a finder or select method, an error occurred in retrieving data from the resource adapter or its data store.
  </Explanation>
  <UserResponse>
    Verify that the mapping information or the bean attribute types to data store types mapping is correct. If this information is correct, examine the xxxExtractor classes, which are generated by the Deploy Tool. In particular, examine the extractXXX() methods.
  </UserResponse>
</Message>
<Message ID="PMGR6030E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6030" varFormat="Java">
    PMGR6030=PMGR6030E: EJBCompositeExtractor does not contain an AbstractEJBExtractor for the current result row.
  </MsgText>
  <Explanation>
    The bean type that is used is part of an inheritance hierarchy. A finder method returned data for a bean subclass that is not recognized by the extractor subclasses, which are generated by the Deploy Tool.
  </Explanation>
  <UserResponse>
    Ensure that you have a deployment descriptor entry for all of the possible bean types in this inheritance hierarchy. Then, verify that the Deploy Tool generated an xxxExtractor class for all of these bean types.
  </UserResponse>
</Message>
<Message ID="PMGR1015E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1015" varFormat="Java">
    PMGR1015=PMGR1015E: Fail verification of read-only bean : (0).
  </MsgText>
  <Explanation>
    The data in the data source has changed for the read-only bean.
  </Explanation>
  <UserResponse>
    Re-drive the transaction or choose a different read-verification strategy.
  </UserResponse>
</Message>
<Message ID="PMGR1014E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1014" varFormat="Java">
    PMGR1014=PMGR1014E: Exception occured when getting connection factory: {0}
  </MsgText>
  <Explanation>
    An exception occurred that is related to the nested or chained exceptions.
  </Explanation>
  <UserResponse>
    Read the chain of exceptions to help determine the problem. This exception usually occurs because of an error in the data source configuration.
  </UserResponse>
</Message>
<Message ID="PMGR6025E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6025" varFormat="Java">
    PMGR6025=PMGR6025E: At attempted update under optimistic concurrency control failed because the bean data has changed in the data store since this transaction read it. Either a predicate field has changed value or the bean itself has been removed.
  </MsgText>
  <Explanation>
    Another application probably changed the data in the database while you were using it. Your application uses optimistic concurrency control, for example Access Intent = optimisticUpdate, and this error occurs despite the benefits of this control.
  </Explanation>
  <UserResponse>
    Write your application to handle this exception. Either retry the update or communicate the failure to your end user and let the user decide whether to retry the update.
  </UserResponse>
</Message>
<Message ID="PMGR1013E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1013" varFormat="Java">
    PMGR1013=PMGR1013E: Exception occured when verifying current backend id {0}: {1}
  </MsgText>
  <Explanation>
    An exception occurred that is related to the nested or chained exceptions.
  </Explanation>
  <UserResponse>
    Read the chain of exceptions to help determine the problem. The last exception is often the root cause of the problem.
  </UserResponse>
</Message>
<Message ID="PMGR6024E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6024" varFormat="Java">
    PMGR6024=PMGR6024E: DuplicateKeyException thrown during interaction.execute(...), inputRecord = {0}
  </MsgText>
  <Explanation>
    The resource adapter that is configured for this bean type indicates that the supplied key is a duplicate of a key that already exists in the data store. This error might occur during normal application execution.
  </Explanation>
  <UserResponse>
    Your application should accept this exception and communicate it to your end user.
  </UserResponse>
</Message>
<Message ID="PMGR1012E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1012" varFormat="Java">
    PMGR1012=PMGR1012E: The current backend id {0}, does not match the data source connected to.
  </MsgText>
  <Explanation>
    The current back-end &lt;server?&gt; ID in the ibm-ejb-jar-bnd.xml file does not match the data source to which it is connected.
  </Explanation>
  <UserResponse>
    Check the deploy process or the data source definition.
  </UserResponse>
</Message>
<Message ID="PMGR6023E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6023" varFormat="Java">
    PMGR6023=PMGR6023E: Possible conflict between this transaction and another while accessing the same data, probably due to application design.
  </MsgText>
  <Explanation>
    The most common cause for this exception is when Enterprise JavaBean (EJB) Version 2.0 applications deadlock with another transaction in this application or another application on this or another computer. In this context, Deadlock means that you are attempting to obtain a lock on data in the database when some other transaction already has a conflicting lock. Locks are obtained when you attempt to access the data for a bean or sometimes for a nearby bean in the same database table.
  </Explanation>
  <UserResponse>
    Correct the application logic or data access pattern for this application or the other application so that the conflict does not occur. For more information on when and how locks are obtained, see the documentation for your particular database or other data store. For more information on how to configure your applications to avoid a deadlock, see the Access Intent documentation.
  </UserResponse>
</Message>
<Message ID="PMGR1011E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1011" varFormat="Java">
    PMGR1011=PMGR1011E: The current backend id is null.
  </MsgText>
  <Explanation>
    The current back-end &lt;server?&gt; ID in the ibm-ejb-jar-bnd.xml file is null.
  </Explanation>
  <UserResponse>
    Check the deploy process.
  </UserResponse>
</Message>
<Message ID="PMGR6022E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6022" varFormat="Java">
    PMGR6022=PMGR6022E: Error using adapter to create or execute an Interaction. {0}
  </MsgText>
  <Explanation>
    The resource adapter created an exception when it received a request for a connection.
  </Explanation>
  <UserResponse>
    Verify that the Java Platform, Enterprise Edition (Java EE) Connector, or resource adapter, that is configured for use with the current bean type is a valid resource adapter. The error results from a failure with the connection.getInteraction method or the interaction itself.
  </UserResponse>
</Message>
<Message ID="PMGR1010E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1010" varFormat="Java">
    PMGR1010=PMGR1010E: The current backend id,{0}, does not have equivalent deployed code in the jar.
  </MsgText>
  <Explanation>
    The current back-end &lt;server?&gt; ID in the ibm-ejb-jar-bnd.xml file does not have a matching deployed xxxAdapterBinding class. The class is generated by the Deploy Tool.
  </Explanation>
  <UserResponse>
    Check the deploy process.
  </UserResponse>
</Message>
<Message ID="PMGR6020E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR6020" varFormat="Java">
    PMGR6020=PMGR6020E: Error connecting to adapter {0}
  </MsgText>
  <Explanation>
    The resource adapter created an exception when it received a request for a connection.
  </Explanation>
  <UserResponse>
    Verify that the Java Platform, Enterprise Edition (Java EE) Connector, or resource adapter, that is configured for use with the current bean type is a valid resource adapter. The error results from a failure with the connection factory.
  </UserResponse>
</Message>
<Message ID="PMGR1009E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1009" varFormat="Java">
    PMGR1009=PMGR1009E: Error Creating Data Access Spec from BAB: {0}.
  </MsgText>
  <Explanation>
    An exception occurred when creating the DataAccessSpec &lt;type&gt; from the generated xxxAdapterBinding class, which is generated by the Deploy Tool.
  </Explanation>
  <UserResponse>
    Check the generated xxxAdapterBinding class.
  </UserResponse>
</Message>
<Message ID="PMGR1008E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1008" varFormat="Java">
    PMGR1008=PMGR1008E: Related home not found for name: {0}.
  </MsgText>
  <Explanation>
    The PMHomeInfo &lt;type&gt; does not exist for a given name.
  </Explanation>
  <UserResponse>
    Check in the generated xxxAdapterBinding class, which is generated by the Deploy Tool, to determine whether the given name is the abstract schema name that is generated in this code.
  </UserResponse>
</Message>
<Message ID="PMGR1007E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1007" varFormat="Java">
    PMGR1007=PMGR1007E: Internal Error: Missing Finder for ExecuteFinderForLink. The deployed code may have errors.
  </MsgText>
  <Explanation>
    The finder method is missing in the executeFinderForLink &lt;type&gt;.
  </Explanation>
  <UserResponse>
    Check the code for the ConcretexxxBean bean, which is generated by the Deploy tool, to determine whether the given finder method is properly defined.
  </UserResponse>
</Message>
<Message ID="PMGR1006E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1006" varFormat="Java">
    PMGR1006=PMGR1006E: Transaction is null.
  </MsgText>
  <Explanation>
    The transaction from the context is null.
  </Explanation>
  <UserResponse>
    Verify whether the transaction is available in the context. The absence of a transaction usually indicates a logic error within the internal container component.
  </UserResponse>
</Message>
<Message ID="PMGR1005E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1005" varFormat="Java">
    PMGR1005=PMGR1005E: Record for load is null.
  </MsgText>
  <Explanation>
    The data is already deleted from the data store, for example, your relational database.
  </Explanation>
  <UserResponse>
    Verify whether the data is already deleted from data store.
  </UserResponse>
</Message>
<Message ID="PMGR1004E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1004" varFormat="Java">
    PMGR1004=PMGR1004E: The EJB Object is null.
  </MsgText>
  <Explanation>
    An Enterprise JavaBean (EJB) object does not exist in the context.
  </Explanation>
  <UserResponse>
    Verify whether the EJB object is available in the context.
  </UserResponse>
</Message>
<Message ID="PMGR1003E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1003" varFormat="Java">
    PMGR1003=PMGR1003E: No such LinkMetadata :{0}.
  </MsgText>
  <Explanation>
    A relationship is not defined for the specified relationship role name.
  </Explanation>
  <UserResponse>
    Check the code for the ConcretexxxBean bean, which is generated by the Deploy tool, to determine whether the specified role name is properly defined.
  </UserResponse>
</Message>
<Message ID="PMGR1002E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1002" varFormat="Java">
    PMGR1002=PMGR1002E: Error in code generation
  </MsgText>
  <Explanation>
    An error occurred in one or more of the .java source code files that are generated by the Deploy Tool.
  </Explanation>
  <UserResponse>
    Verify that the generated files do not contain errors. Also, verify that you specified the correct information when you used the Deploy Tool.
  </UserResponse>
</Message>
<Message ID="PMGR1001E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1001" varFormat="Java">
    PMGR1001=PMGR1001E: No such DataAccessSpec :{0}.
  </MsgText>
  <Explanation>
    The DataAccessSpec &lt;type&gt;, which is part of the Deploy Tool-generated xxxAdapterBinding.java file, cannot be found for the given data access specification name and given access intent. For example, optimistic versus pessimistic or read versus update &lt;access intentions?&gt;. This error occurs for one of the following reasons: The back-end data source does not support the SQL Statement that is needed for the access intent. The deployed code is an earlier version that does not contain the new functions.
  </Explanation>
  <UserResponse>
    Check in the generated xxxAdapterBinding class for the type of bean that is being used. The class contains the defintion for the data access specification. To resolve the issue, you might need to redeploy the enterprise archive (EAR) file.
  </UserResponse>
</Message>
<Message ID="PMGR1000E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR1000" varFormat="Java">
    PMGR1000=PMGR1000E: Exception occurred :{0}.
  </MsgText>
  <Explanation>
    An exception occurred that is related to the nested or chained exceptions.
  </Explanation>
  <UserResponse>
    For information about the error, see the nested or chained exceptions.
  </UserResponse>
</Message>
<Message ID="PMGR2010E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR2010" varFormat="Java">
    PMGR2010=PMGR2010E: Cascade delete produced RemoveException
  </MsgText>
  <Explanation>
    The container created a RemoveException error when the persistence manager attempted to cascade remove to an associated bean.
  </Explanation>
  <UserResponse>
    Determine the underlying cause of the RemoveException error.
  </UserResponse>
</Message>
<Message ID="PMGR2000E" severity="E" prefix="yes">
  <MsgText pgmKey="PMGR2000" varFormat="Java">
    PMGR2000=PMGR2000E: Link metadata does not contain a valid link type
  </MsgText>
  <Explanation>
    The associations framework did not find a legal link type in the associated metadata.
  </Explanation>
  <UserResponse>
    The associations framework and code that is generated by the Deploy Tool are probably not synchronized.
  </UserResponse>
</Message>
<!-- END MESSAGES -->
</TMSSource>
