<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="../../resources/stylesheets/wasmsgxml.css"?>
<TMSSource name="TivoliMessages" tmsVersion="1.0" xml:lang="en">
<!-- CMVC MSG File Name = ws/code/admin.jmx/src/com/ibm/ws/management/resources/connector.nlsprops -->
<!-- DO NOT EDIT THIS FILE - This file was generated by the XML/Html & Property emitter -->
<!-- BEGIN MESSAGES -->
<Message ID="ADMC0026I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0026I" varFormat="Java">
    ADMC0026I=ADMC0026I: The RMI Connector is available at port {0}
  </MsgText>
  <Explanation>
    This informational message indicates the availability of the RMI (Java Remote Method Invocation) connector.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0006E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0006E" varFormat="Java">
    ADMC0006E=ADMC0006E: No port is specified for the SOAP connector.
  </MsgText>
  <Explanation>
    The SOAP connector must listen to one specific port.
  </Explanation>
  <UserResponse>
    Edit the serverindex.xml file and add a named endpoint for the SOAP connector.
  </UserResponse>
</Message>
<Message ID="ADMC0045E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0045E" varFormat="Java">
    ADMC0045E=ADMC0045E: The system is unable to create a SOAP header to carry the security attributes.
  </MsgText>
  <Explanation>
    A SOAP connector calls the DOM (Document Object Model) API to create a SOAP header, but is unable to create the header.
  </Explanation>
  <UserResponse>
    Verify that the XML parsing engine is functioning.
  </UserResponse>
</Message>
<Message ID="ADMC0005E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0005E" varFormat="Java">
    ADMC0005E=ADMC0005E: A SOAP URI violation occurred. The correct URI is uri:AdminService.
  </MsgText>
  <Explanation>
    The SOAP connector defines its own URI (Uniform Resource Identifier) for SOAP calls, uri:AdminService. This error occurs only when the SOAP call is not made through the SOAP administrative client.
  </Explanation>
  <UserResponse>
    Connect through the AdminClient interface, which is the only supported mechanism for connecting to the AdminService interface from a separate process.
  </UserResponse>
</Message>
<Message ID="ADMC0044E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0044E" varFormat="Java">
    ADMC0044E=ADMC0044E: The system encountered an unsupported AdminClient operation: {0}
  </MsgText>
  <Explanation>
    The specified exception can occur if an unsupported administrative client (AdminClient) operation called the SOAP connector.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="ADMC0023W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0023W" varFormat="Java">
    ADMC0023W=ADMC0023W: The RMI (Java Remote Method Invocation) connector could not be stopped and NamingException: {0}
  </MsgText>
  <Explanation>
    A problem occurred attempting to stop the RMI (Java Remote Method Invocation) connector.
  </Explanation>
  <UserResponse>
    Examine the displayed exception for more details. Check the logs, trace, and the First Failure Data Capture (FFDC) to find the most relevant root cause for this connector error.
  </UserResponse>
</Message>
<Message ID="ADMC0079E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0079E" varFormat="Java">
    ADMC0079E=ADMC0079E: Node agent server failed to get the {0} connector configuration for the {1}/{2} server with a null connector type.
  </MsgText>
  <Explanation>
    The connector configuration for the connector in the relevant configuration file server.xml is either missing or corrupted.
  </Explanation>
  <UserResponse>
    Check that &quot;connectors&quot; elements exist and are correctly defined for the connector in the server.xml file.
  </UserResponse>
</Message>
<Message ID="ADMC0043E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0043E" varFormat="Java">
    ADMC0043E=ADMC0043E: An error occurred while deserializing the received exception.
  </MsgText>
  <Explanation>
    The SOAP administrative client failed to restore the exception object from the received SOAP response message.
  </Explanation>
  <UserResponse>
    Verify that the exception class is in the client side class path.
  </UserResponse>
</Message>
<Message ID="ADMC0019E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0019E" varFormat="Java">
    ADMC0019E=ADMC0019E: No Secure Sockets Layer (SSL) configuration is specified for the secure SOAP connector.
  </MsgText>
  <Explanation>
    When security is enabled, the SOAP connector needs to obtain the SSL configuration to intialize the SSL server socket.
  </Explanation>
  <UserResponse>
    Check the server.xml file and verify that a property named sslConfig exists, which points to an entry in the security.xml file.
  </UserResponse>
</Message>
<Message ID="ADMC0022W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0022W" varFormat="Java">
    ADMC0022W=ADMC0022W: The RMI (Java Remote Method Invocation) connector could not start and RemoteException: {0}
  </MsgText>
  <Explanation>
    A problem occurred attempting to start the RMI (Java Remote Method Invocation) connector.
  </Explanation>
  <UserResponse>
    Examine the displayed exception for more details. Check the logs, trace, and the First Failure Data Capture (FFDC) to find the most relevant root cause for this connector error.
  </UserResponse>
</Message>
<Message ID="ADMC0078I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0078I" varFormat="Java">
    ADMC0078I=ADMC0078I: A remote JVM returned a {0} error during a JMX operation.
  </MsgText>
  <Explanation>
    An MBean invocation returned a java.lang.Error instance as a fault.  If this error causes a processing problem, more messages are logged.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0038W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0038W" varFormat="Java">
    ADMC0038W=ADMC0038W: No keystore file has been specified to create a secure SOAP administrative client.
  </MsgText>
  <Explanation>
    The keystore file might be a required attribute for client certificate authentication.
  </Explanation>
  <UserResponse>
    Specify the keystore file either in the properties file or through parameters passed to the AdminClientFactory class.
  </UserResponse>
</Message>
<Message ID="ADMC0058I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0058I" varFormat="Java">
    ADMC0058I=ADMC0058I: The JMX JSR160RMI connector is available at port {0}
  </MsgText>
  <Explanation>
    This informational message indicates the availability of the JSR160 RMI (Java Remote Method Invocation - javax.management.remote.rmi ) connector.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0042E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0042E" varFormat="Java">
    ADMC0042E=ADMC0042E: A SOAP connector port number is not specified.
  </MsgText>
  <Explanation>
    The port is a required property for creating a SOAP connector.
  </Explanation>
  <UserResponse>
    Verify that a port number is provided. Make sure the properties passed in to create an AdminClient instance contains the key value for the port. The property key for port is AdminClient.CONNECTOR_PORT.
  </UserResponse>
</Message>
<Message ID="ADMC0002E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0002E" varFormat="Java">
    ADMC0002E=ADMC0002E: The system failed to initialize the SOAP connector with the exception: {0}
  </MsgText>
  <Explanation>
    The administrative run time cannot bring up the SOAP connector. Generally this error occurs because of a port conflict.
  </Explanation>
  <UserResponse>
    Verify that you do not have two configurations specifying the same port.
  </UserResponse>
</Message>
<Message ID="ADMC0018E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0018E" varFormat="Java">
    ADMC0018E=ADMC0018E: the system is unable to get the valid bootstrap port.
  </MsgText>
  <Explanation>
    The RMI connector needs to obtain the bootstrap port as part of its initialization properties.
  </Explanation>
  <UserResponse>
    Check the serverindex.xml file for the current node and verify that the BOOTSTRAP_ADDRESS endpoint is specified for this server.
  </UserResponse>
</Message>
<Message ID="ADMC0021W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0021W" varFormat="Java">
    ADMC0021W=ADMC0021W: The RMI connector failed to start with NamingException: {0}
  </MsgText>
  <Explanation>
    The RMI (Java Remote Method Invocation) connector failed to create an InitialContext object and bind itself to the name space.
  </Explanation>
  <UserResponse>
    Check the server logs and look for message NMSV0018I which is Name server available on bootstrapport. Examine the displayed exception and the First Failure Data Capture (FFDC) log to find the most relevant root cause for naming error.
  </UserResponse>
</Message>
<Message ID="ADMC0037W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0037W" varFormat="Java">
    ADMC0037W=ADMC0037W: No truststore file has been specified to create a secure SOAP administrative client.
  </MsgText>
  <Explanation>
    In most cases, the truststore file is a required attribute for the SOAP secure administrative client.
  </Explanation>
  <UserResponse>
    Specify the truststore file either in the properties file or through parameters passed to the AdminClientFactory class.
  </UserResponse>
</Message>
<Message ID="ADMC0077E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0077E" varFormat="Java">
    ADMC0077E=ADMC0077E: Invalid credential
  </MsgText>
  <Explanation>
    The Kerberos login failed. Two possible reasons for this failure exist: The username or the password is not valid. The credential cache expired.
  </Explanation>
  <UserResponse>
    Check whether the user name and password are correct, and correct them if they are not. If the Kerberos credential cache is used, check whether the cache has expired and renew the cache if it has expired.
  </UserResponse>
</Message>
<Message ID="ADMC0057I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0057I" varFormat="Java">
    ADMC0057I=ADMC0057I: The JMX JSR160RMI connector has been disabled.
  </MsgText>
  <Explanation>
    This informational message indicates the availability of the Java Management Extensions (JMX) Remote Method Invocation (RMI) connector.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0041E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0041E" varFormat="Java">
    ADMC0041E=ADMC0041E: The SOAP connector host name is not specified.
  </MsgText>
  <Explanation>
    The host name is a required property for creating the SOAP connector.
  </Explanation>
  <UserResponse>
    Verify that a host name is provided. Make sure the properties passed in to create an AdminClient instance contains the key value for the host name. The property key for the host name is AdminClient.CONNECTOR_HOST.
  </UserResponse>
</Message>
<Message ID="ADMC0001E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0001E" varFormat="Java">
    ADMC0001E=ADMC0001E: Unable to serialize object: {0}
  </MsgText>
  <Explanation>
    The object needs to implement the java.io.Serializable class to be marshalled.
  </Explanation>
  <UserResponse>
    Check your class definition and verify that all classes being passed implement the Serializable class.
  </UserResponse>
</Message>
<Message ID="ADMC0017E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0017E" varFormat="Java">
    ADMC0017E=ADMC0017E: Could not create an RMI connector to connect to host {0} at port {1}
  </MsgText>
  <Explanation>
    In most cases, the wrong host and port have been provided. If the remote process runs in secure mode, an appropriate userID and password are required.
  </Explanation>
  <UserResponse>
    Verify that the correct data is provided to create an RMI connector.
  </UserResponse>
</Message>
<Message ID="ADMC0076E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0076E" varFormat="Java">
    ADMC0076E=ADMC0076E: Failed to get security token due to {0}
  </MsgText>
  <Explanation>
    The client is a server process, yet the security token was not available.
  </Explanation>
  <UserResponse>
    Verify the security service is initialized correctly.
  </UserResponse>
</Message>
<Message ID="ADMC0040I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0040I" varFormat="Java">
    ADMC0040I=ADMC0040I: Tivoli HTTPAdapter is disabled in the secure mode.
  </MsgText>
  <Explanation>
    As a simple JMX (Java Management Extensions) adapter, the Tivoli HTTP adapter is not protected by WebSphere security. To avoid a security exposure, the JMX adapter is intentionally disabled if security is enabled.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0056I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0056I" varFormat="Java">
    ADMC0056I=ADMC0056I: The JMX RMI connector has been disabled.
  </MsgText>
  <Explanation>
    This informational message indicates the availability of the Java Management Extensions (JMX) Remote Method Invocation (RMI) connector.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0020E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0020E" varFormat="Java">
    ADMC0020E=ADMC0020E: The system failed to initialize the Java Remote Method Invocation (RMI) connector with the exception: {0}
  </MsgText>
  <Explanation>
    The administration run time cannot bring up the RMI (Java Remote Method Invocation) connector because of the displayed exception; the naming service must be running to use the RMI connector.
  </Explanation>
  <UserResponse>
    Check the server logs and look for message NMSV0018I which is Name server available on bootstrapport. Examine the displayed exception and the First Failure Data Capture (FFDC) log to find the most relevant root cause for naming error.
  </UserResponse>
</Message>
<Message ID="ADMC0036E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0036E" varFormat="Java">
    ADMC0036E=ADMC0036E: No password has been specified to create a secure SOAP administrative client.
  </MsgText>
  <Explanation>
    The password is a required attribute for the SOAP secure administrative client.
  </Explanation>
  <UserResponse>
    Specify the password either in the properties file or through parameters passed to the AdminClientFactory class.
  </UserResponse>
</Message>
<Message ID="ADMC0016E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0016E" varFormat="Java">
    ADMC0016E=ADMC0016E: The system cannot create a SOAP connector to connect to host {0} at port {1}.
  </MsgText>
  <Explanation>
    In most cases, the wrong host and port have been provided. If the remote process runs in a secure mode, an appropriate user ID and password are required. On the z/OS operating systems in a secure mode, you must register the CA certificate for the remote process in the keyring for your client user ID. On other operating systems in a secure mode, you must specify the self-signed certificate for the remote process in the truststore for your client user ID.
  </Explanation>
  <UserResponse>
    Verify that the correct data is provided to create a SOAP connector.
  </UserResponse>
</Message>
<Message ID="ADMC0075E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0075E" varFormat="Java">
    ADMC0075E=ADMC0075E: Failed to get ChannelFrameworkService due to {0}; IPC connector will not be available
  </MsgText>
  <Explanation>
    At the point the IPC connector is to get initialized and started, the channel framework is not available yet.
  </Explanation>
  <UserResponse>
    Verify the channel framework is initialized correctly.
  </UserResponse>
</Message>
<Message ID="ADMC0015W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0015W" varFormat="Java">
    ADMC0015W=ADMC0015W: The SOAP connector failed to start with exception: {0}.
  </MsgText>
  <Explanation>
    The AdminService cannot start the SOAP connector because of the stated exception.
  </Explanation>
  <UserResponse>
    Examine the exception in this message for problem determination. Check the logs, trace, and the First Failure Data Capture (FFDC) to find the most relevant root cause for this connector error.
  </UserResponse>
</Message>
<Message ID="ADMC0055I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0055I" varFormat="Java">
    ADMC0055I=ADMC0055I: The JMX SOAP connector has been disabled.
  </MsgText>
  <Explanation>
    This informational message indicates the availability of the SOAP connector.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0035E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0035E" varFormat="Java">
    ADMC0035E=ADMC0035E: No user name has been specified to create a secure SOAP administrative client.
  </MsgText>
  <Explanation>
    The user name is a required attribute for the SOAP secure administrative client.
  </Explanation>
  <UserResponse>
    Specify the user name either in the properties file or through parameters passed to the AdminClientFactory class.
  </UserResponse>
</Message>
<Message ID="ADMC0034W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0034W" varFormat="Java">
    ADMC0034W=ADMC0034W: The system cannot obtain WSSecurityContext.
  </MsgText>
  <Explanation>
    The system cannot obtain the WSSecurityContext instance. The SOAP connector and SWAM (Simple WebSphere Authentication Mechanism) combination are not supported in the Network Deployment environment.
  </Explanation>
  <UserResponse>
    Do not use SWAM with the SOAP connector.
  </UserResponse>
</Message>
<Message ID="ADMC0074E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0074E" varFormat="Java">
    ADMC0074E=ADMC0074E: Connection will be closed due to unrecoverable error {0}
  </MsgText>
  <Explanation>
    A non-recoverable error occurred, connection will be closed and data may be lost.
  </Explanation>
  <UserResponse>
    Check to see if there are incorrect changes made to the system configuration, or whether network connection is functioning properly.
  </UserResponse>
</Message>
<Message ID="ADMC0054E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0054E" varFormat="Java">
    ADMC0054E=ADMC0054E: You have set the security policy to use only FIPS approved cryptographic algorithms; however, the JSSE provider in this SSL configuration may not be FIPS approved. Make any necessary modifications.
  </MsgText>
  <Explanation>
    The JSSE (Java Secure Socket Extension) provider must support FIPS (the Federal Information Processing Standard) on both the client and server.
  </Explanation>
  <UserResponse>
    Verify that the server is configured for FIPS support. Verify that the JSSE provider on the client supports FIPS.
  </UserResponse>
</Message>
<Message ID="ADMC0014E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0014E" varFormat="Java">
    ADMC0014E=ADMC0014E: A failure occurred starting connector {0}.
  </MsgText>
  <Explanation>
    The AdminService interface cannot start the JMX (Java Management Extensions) connector with the specified type.
  </Explanation>
  <UserResponse>
    Check the logs, trace, and the First Failure Data Capture (FFDC) to find the most relevant root cause for this connector error.
  </UserResponse>
</Message>
<Message ID="ADMC0073E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0073E" varFormat="Java">
    ADMC0073E=ADMC0073E: Failed to stop channel chain {0} due to exception {1}
  </MsgText>
  <Explanation>
    A channel framework chain for the IPC connector failed to stop.
  </Explanation>
  <UserResponse>
    Verify the channel framework is functioning correctly.
  </UserResponse>
</Message>
<Message ID="ADMC0053E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0053E" varFormat="Java">
    ADMC0053E=ADMC0053E: The system cannot create a SOAP connector to connect to host {0} at port {1} with SOAP connector security enabled.
  </MsgText>
  <Explanation>
    In most cases, the wrong host and port have been provided. If the remote process runs in secure mode, appropriate userID and password are required. If Federal Information Processing Standard (FIPS) is enabled on the remote process, client side properties files need to be updated as well.
  </Explanation>
  <UserResponse>
    Verify that the correct data is provided to create a SOAP connector. Supply a user name and password in a soap.client.props file or at the command line. Ensure that soap.client.props, ssl.client.props and java.security file on the client side are appropriately updated if running in FIPS enabled mode.
  </UserResponse>
</Message>
<Message ID="ADMC0069E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0069E" varFormat="Java">
    ADMC0069E=ADMC0069E: The endpoint definition is empty for the IPC connector; the IPC connector will not be available
  </MsgText>
  <Explanation>
    There is no endpoint entry for the IPC connector in the relevant configuration file serverindex.xml.
  </Explanation>
  <UserResponse>
    Check whether the configuration is corrupted.
  </UserResponse>
</Message>
<Message ID="ADMC0049E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0049E" varFormat="Java">
    ADMC0049E=ADMC0049E: The deployment manager failed to ping the node agent at node &quot;{0}&quot; because of a null administrative client. The ping thread is terminated.
  </MsgText>
  <Explanation>
    The deployment manager failed to obtain a valid administrative client from the node agent when the node was discovered. There is no way to ping the node agent.
  </Explanation>
  <UserResponse>
    Verify that all the Java Management Extensions (JMX) connectors are running inside the targeted node agent when the node agent starts. Check the server logs file for this node agent process.
  </UserResponse>
</Message>
<Message ID="ADMC0013I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0013I" varFormat="Java">
    ADMC0013I=ADMC0013I: The SOAP connector is available at port {0}
  </MsgText>
  <Explanation>
    This informational message indicates the availability of the SOAP connector.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0052W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0052W" varFormat="Java">
    ADMC0052W=ADMC0052W: Failed to send out the discovery message to the process: {0}
  </MsgText>
  <Explanation>
    The Discovery MBean on the process it is connecting to is not found or problem invoking the method on the Discovery MBean.
  </Explanation>
  <UserResponse>
    Verify the JMX SOAP connector is running.  Examine the exception in this message for problem determination. Check the logs, trace, and the First Failure Data Capture (FFDC) to find the most relevant root cause for this discovery error. CMSG0002
  </UserResponse>
</Message>
<Message ID="ADMC0029E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0029E" varFormat="Java">
    ADMC0029E=ADMC0029E: Unable to initialize the discovery adapter for the deployment manager: {0}
  </MsgText>
  <Explanation>
    The deployment manager process failed to initialize the discovery service.
  </Explanation>
  <UserResponse>
    Examine the serverindex.xml file to check the port number defined for deployment manager discovery. Verify that there is no port conflict.
  </UserResponse>
</Message>
<Message ID="ADMC0032W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0032W" varFormat="Java">
    ADMC0032W=ADMC0032W: The incoming request does not have valid credentials.
  </MsgText>
  <Explanation>
    The credential cannot be found in the SOAP header.
  </Explanation>
  <UserResponse>
    Provide a userID and password or set the thread credential before creating a SOAP client.
  </UserResponse>
</Message>
<Message ID="ADMC0009E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0009E" varFormat="Java">
    ADMC0009E=ADMC0009E: The system failed to make the SOAP RPC call: {0}
  </MsgText>
  <Explanation>
    This generic exception indicates that the SOAP RPC (remote procedure call) failed. Either the remote process is not reachable, or there is a marshalling problem.
  </Explanation>
  <UserResponse>
    Verify that the remote process is reachable and that the SOAP connector is running on the remote process. Examine the exception in this message for problem determination. Check the logs, trace, and the First Failure Data Capture (FFDC) to find the most relevant root cause for this connector error.
  </UserResponse>
</Message>
<Message ID="ADMC0072E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0072E" varFormat="Java">
    ADMC0072E=ADMC0072E: Failed to initialize or start channel chain {0} due to exception {1}
  </MsgText>
  <Explanation>
    A channel framework chain for the IPC connector failed to initialize or start.
  </Explanation>
  <UserResponse>
    Verify the channel framework is functioning correctly.
  </UserResponse>
</Message>
<Message ID="ADMC0068I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0068I" varFormat="Java">
    ADMC0068I=ADMC0068I: The JMX IPC connector is available at port {0}
  </MsgText>
  <Explanation>
    This informational message indicates the availability of the IPC connector.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0028W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0028W" varFormat="Java">
    ADMC0028W=ADMC0028W: Error starting the Tivoli HTTPAdapter: {0}
  </MsgText>
  <Explanation>
    A problem occurred attempting to start the HTTP adapter.
  </Explanation>
  <UserResponse>
    Examine the displayed exception for more details. Check the logs, trace, and the First Failure Data Capture (FFDC) to find the most relevant root cause for this connector error.
  </UserResponse>
</Message>
<Message ID="ADMC0048I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0048I" varFormat="Java">
    ADMC0048I=ADMC0048I: The system established the connection to a previously disconnected node agent at node {0}.
  </MsgText>
  <Explanation>
    The deployment manager keeps pinging each previously disconnected node agent at fixed intervals. Normally the connection can be reestablished if the network failure is recovered.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0051W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0051W" varFormat="Java">
    ADMC0051W=ADMC0051W: Failed to do a multicast-based process discovery; trying MBean discovery instead...
  </MsgText>
  <Explanation>
    This error occurs either because the environment consists of a stand-alone machine, or because multicast is malfuctioning or not supported in the local network.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="ADMC0047W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0047W" varFormat="Java">
    ADMC0047W=ADMC0047W: Lost connection to the node agent at node &quot;{0}&quot;. The routing table is updated to remove the entry for this node.
  </MsgText>
  <Explanation>
    The deployment manager contacts each discovered node agent at fixed intervals. The lost connection can result from a network connectivity failure or a stopped node agent.
  </Explanation>
  <UserResponse>
    If the node agent is not intentionally stopped, make sure the network is up; for instance, try performing a ping &lt;nodeagent host name&gt;.
  </UserResponse>
</Message>
<Message ID="ADMC0008E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0008E" varFormat="Java">
    ADMC0008E=ADMC0008E: The system failed to marshall the object of type {0}: {1}
  </MsgText>
  <Explanation>
    The SOAP connector failed to marshall the Java (TM) object, which probably does not implement the java.io.Serializable interface.
  </Explanation>
  <UserResponse>
    Verify that the Java Class implements the java.io.Serializable interface.
  </UserResponse>
</Message>
<Message ID="ADMC0071E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0071E" varFormat="Java">
    ADMC0071E=ADMC0071E: ChannelFrameworkService is unavailable at this point; IPC connector will not be available
  </MsgText>
  <Explanation>
    At the point the IPC connector is to get initialized and started, the channel framework is not available yet.
  </Explanation>
  <UserResponse>
    Verify the channel framework is initialized correctly.
  </UserResponse>
</Message>
<Message ID="ADMC0067I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0067I" varFormat="Java">
    ADMC0067I=ADMC0067I: The JMX IPC connector has been disabled.
  </MsgText>
  <Explanation>
    This informational message indicates the availability of the Java Management Extensions (JMX) Remote Method Invocation (RMI) connector.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0031E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0031E" varFormat="Java">
    ADMC0031E=ADMC0031E: The system is unable to initialize the discovery adapter for the managed process: {0}
  </MsgText>
  <Explanation>
    The ManagedProcess failed to initialize the discovery service.
  </Explanation>
  <UserResponse>
    Open the serverindex.xml file to check the CELL_DISCOVERY_ADDRESS port number; make sure there is no port conflict.
  </UserResponse>
</Message>
<Message ID="ADMC0027I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0027I" varFormat="Java">
    ADMC0027I=ADMC0027I: The Tivoli HTTPAdapter is available on port {0}
  </MsgText>
  <Explanation>
    This informational message indicates the availability of the Tivoli HTTPAdapter.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0011E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0011E" varFormat="Java">
    ADMC0011E=ADMC0011E: The SOAP remote procedure call (RPC) cannot be unmarshalled.
  </MsgText>
  <Explanation>
    The SOAP connector fails to extract the SOAP Call object from a received SOAP message; some other general exceptions have occurred.
  </Explanation>
  <UserResponse>
    Check the logs, trace, and the First Failure Data Capture (FFDC) to find the most relevant root cause for this error.
  </UserResponse>
</Message>
<Message ID="ADMC0070I" severity="I" prefix="yes">
  <MsgText pgmKey="ADMC0070I" varFormat="Java">
    ADMC0070I=ADMC0070I: The IPC connector is available at port {0}
  </MsgText>
  <Explanation>
    This informational message indicates the availability of the IPC connector.
  </Explanation>
  <UserResponse>
    No action is required.
  </UserResponse>
</Message>
<Message ID="ADMC0046W" severity="W" prefix="yes">
  <MsgText pgmKey="ADMC0046W" varFormat="Java">
    ADMC0046W=ADMC0046W: The system failed to load properties from com.ibm.SOAP.configURL: {0}
  </MsgText>
  <Explanation>
    The AdminClientFactory class failed to load the file as specified by com.ibm.SOAP.configURL system property.  Security related data could not be obtained.
  </Explanation>
  <UserResponse>
    The com.ibm.Soap.ConfigUrl property can be set on the command line, programatically in your Java client or by default it is set in setupCmdLine script of your Application Server bin directory.  Make sure the soap.client.props file exists in the directory it point to inside the setupCmdLine script.
  </UserResponse>
</Message>
<Message ID="ADMC0007E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0007E" varFormat="Java">
    ADMC0007E=ADMC0007E: An unknown error occurs while invoking the AdminService methods.
  </MsgText>
  <Explanation>
    The MBean methods are either not defined or are not accessible because of security issues.
  </Explanation>
  <UserResponse>
    Check the MBean definition and the Java 2 security permission granted to the MBean class.
  </UserResponse>
</Message>
<Message ID="ADMC0050E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0050E" varFormat="Java">
    ADMC0050E=ADMC0050E: Exception occurred while reading the node discovery protocol.
  </MsgText>
  <Explanation>
    The administrative run time failed to obtain the node discovery protocol.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="ADMC0030E" severity="E" prefix="yes">
  <MsgText pgmKey="ADMC0030E" varFormat="Java">
    ADMC0030E=ADMC0030E: Unable to initialize the discovery adapter for the node agent: {0}
  </MsgText>
  <Explanation>
    The NodeAgent process failed to initialize the discovery service.
  </Explanation>
  <UserResponse>
    Open the serverindex.xml file to check the NODE_DISCOVERY_ADDRESS port number; make sure there is no port conflict.
  </UserResponse>
</Message>
<!-- END MESSAGES -->
</TMSSource>
