<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="../../resources/stylesheets/wasmsgxml.css"?>
<TMSSource name="TivoliMessages" tmsVersion="1.0" xml:lang="en">
<!-- CMVC MSG File Name = ws/code/security.crypto/src/com/ibm/ws/ssl/resources/ssl.nlsprops -->
<!-- DO NOT EDIT THIS FILE - This file was generated by the XML/Html & Property emitter -->
<!-- BEGIN MESSAGES -->
<Message ID="CWPKI0004I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.init.svcstartcomplete.CWPKI0004I" varFormat="Java">
    ssl.init.svcstartcomplete.CWPKI0004I=CWPKI0004I: SSL service started successfully
  </MsgText>
  <Explanation>
    SSL service started.
  </Explanation>
  <UserResponse>
    None. Informational only
  </UserResponse>
</Message>
<Message ID="CWPKI0026E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.reinitialize.config.error.CWPKI0026E" varFormat="Java">
    ssl.reinitialize.config.error.CWPKI0026E=CWPKI0026E: Error reinitializing the SSL configuration after a change to security.xml.  The extended error message is &quot;{0}&quot;.
  </MsgText>
  <Explanation>
    An exception occurred reading the SSL configurations from the security.xml after a change occurred.
  </Explanation>
  <UserResponse>
    Review the exception message text and verify the SSL configuration parameters are valid.
  </UserResponse>
</Message>
<Message ID="CWPKI0037I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.notification.send.info.CWPKI0037I" varFormat="Java">
    ssl.notification.send.info.CWPKI0037I=CWPKI0037I: Expiration monitor reports the following information: {0}.
  </MsgText>
  <Explanation>
    This is information regarding certificate expiration.
  </Explanation>
  <UserResponse>
    May need to manage certificates to resolve the reported problems.
  </UserResponse>
</Message>
<Message ID="CWPKI0030E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.signer.exchange.error.CWPKI0030E" varFormat="Java">
    ssl.signer.exchange.error.CWPKI0030E=CWPKI0030E: Error occurred exchanging signers between cell and node.  The exception that occurred is: {0}.
  </MsgText>
  <Explanation>
    The DefaultKeyStores between cell and node will have exchange signers with corresponding DefaultTrustStores.  An error occurred during this process.
  </Explanation>
  <UserResponse>
    A manual signer exchange may need to take place.
  </UserResponse>
</Message>
<Message ID="CWPKI0025E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.load.https.stream.handler.CWPKI0025E" varFormat="Java">
    ssl.load.https.stream.handler.CWPKI0025E=CWPKI0025E: Could not load the https Handler class &quot;{0}&quot;.  The extended error message is {1}.
  </MsgText>
  <Explanation>
    There was a classloading error trying to load the HTTPS URLStreamHandler class.
  </Explanation>
  <UserResponse>
    Check the SSL configuration to ensure the context provider is correct for the platform.
  </UserResponse>
</Message>
<Message ID="CWPKI0023E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.client.alias.not.found.CWPKI0023E" varFormat="Java">
    ssl.client.alias.not.found.CWPKI0023E=CWPKI0023E: The certificate alias &quot;{0}&quot; specified by the property com.ibm.ssl.keyStoreClientAlias is not found in KeyStore &quot;{1}&quot;.
  </MsgText>
  <Explanation>
    The certificate alias specified for this SSL configuration is not in the specified KeyStore.
  </Explanation>
  <UserResponse>
    Either add a certificate into the KeyStore with the specified certificate alias or change the specified certificate alias to match an alias found in the client KeyStore.
  </UserResponse>
</Message>
<Message ID="CWPKI0305E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.signer.alias.not.found.CWPKI0305E" varFormat="Java">
    ssl.signer.alias.not.found.CWPKI0305E=CWPKI0305E: The &lt;aliasFromRemoteStore&gt; specified as &quot;{0}&quot; was not found in truststore &quot;{1}&quot; on the server.
  </MsgText>
  <Explanation>
    The alias specified was not found in the truststore.
  </Explanation>
  <UserResponse>
    Try issuing -listRemoteKeyStoreNames command to get the list of names.
  </UserResponse>
</Message>
<Message ID="CWPKI0008E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.init.error.CWPKI0008E" varFormat="Java">
    ssl.init.error.CWPKI0008E=CWPKI0008E: Error during SSL initialization. The exception is {0}.
  </MsgText>
  <Explanation>
    An unexpected error occurred during security initialization.
  </Explanation>
  <UserResponse>
    This is a general error.  Look for previous messages that may be related to the failure or a configuration problem.  Enabling SSL=all=enabled debug trace may yield additional information.
  </UserResponse>
</Message>
<Message ID="CWPKI0018W" severity="W" prefix="yes">
  <MsgText pgmKey="ssl.keystore.type.invalid.CWPKI0018W" varFormat="Java">
    ssl.keystore.type.invalid.CWPKI0018W=CWPKI0018W: The keystore type of {0} is not valid for SSL config alias {1}.
  </MsgText>
  <Explanation>
    The keystore type configured is not correct.
  </Explanation>
  <UserResponse>
    Change the keystore type in the SSL configuration.
  </UserResponse>
</Message>
<Message ID="CWPKI0002I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.init.startcomplete.CWPKI0002I" varFormat="Java">
    ssl.init.startcomplete.CWPKI0002I=CWPKI0002I: SSL service initialization completed successfully
  </MsgText>
  <Explanation>
    SSL service initialization completed successfully..
  </Explanation>
  <UserResponse>
    None. Informational only
  </UserResponse>
</Message>
<Message ID="CWPKI0309I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.signer.no.signers.added.CWPKI0309I" varFormat="Java">
    ssl.signer.no.signers.added.CWPKI0309I=CWPKI0309I: All signers from remote keystore already exist in local keystore.
  </MsgText>
  <Explanation>
    Indicates no signers needed to be added to the local keystore.
  </Explanation>
  <UserResponse>
    None.
  </UserResponse>
</Message>
<Message ID="CWPKI0024E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.server.alias.not.found.CWPKI0024E" varFormat="Java">
    ssl.server.alias.not.found.CWPKI0024E=CWPKI0024E: The certificate alias &quot;{0}&quot; specified by the property com.ibm.ssl.keyStoreServerAlias is not found in KeyStore &quot;{1}&quot;.
  </MsgText>
  <Explanation>
    The certificate alias specified for this SSL configuration is not in the specified KeyStore.
  </Explanation>
  <UserResponse>
    Either add a certificate into the KeyStore with the specified certificate alias or change the specified certificate alias to match an alias found in the server KeyStore.
  </UserResponse>
</Message>
<Message ID="CWPKI0029E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.invalid.context.provider.CWPKI0029E" varFormat="Java">
    ssl.invalid.context.provider.CWPKI0029E=CWPKI0029E: SSL context provider &quot;{0}&quot; is not valid.  This provider is specified in the SSL configuration alias &quot;{1}&quot; loaded from SSL configuration file &quot;{2}&quot;.  The extended error message is: &quot;{3}&quot;.
  </MsgText>
  <Explanation>
    The SSL context provider specified is not recognized as a valid context provider.
  </Explanation>
  <UserResponse>
    Check the SSL configuration to ensure the correct SSL context provider is specified.
  </UserResponse>
</Message>
<Message ID="CWPKI0308I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.signer.add.to.local.truststore.CWPKI0308I" varFormat="Java">
    ssl.signer.add.to.local.truststore.CWPKI0308I=CWPKI0308I: Adding signer alias &quot;{0}&quot; to local keystore &quot;{1}&quot; with the following SHA digest: {2}
  </MsgText>
  <Explanation>
    Indicates the signer being added to the local keystore.
  </Explanation>
  <UserResponse>
    None.
  </UserResponse>
</Message>
<Message ID="CWPKI0013W" severity="W" prefix="yes">
  <MsgText pgmKey="ssl.checkProviderList.warning.CWPKI0013W" varFormat="Java">
    ssl.checkProviderList.warning.CWPKI0013W=CWPKI0013W: FIPS is enabled but the IBMJCEFIPS provider is not active in the java.security file.  To ensure FIPS algorithms usage for all WAS process types, uncomment the IBMJCEFIPS provider in the java.security file, ahead of the IBMJCE, and renumber the provider list in sequential order.
  </MsgText>
  <Explanation>
    When the server is running in FIPS mode the IBMJCEFIPS provider should be in the java.security file.
  </Explanation>
  <UserResponse>
    The java.security file needs to be changed to include the IBMJCEFIPS provider in the provider list before the IBMJCE provider.
  </UserResponse>
</Message>
<Message ID="CWPKI0022E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.client.handshake.error.CWPKI0022E" varFormat="Java">
    ssl.client.handshake.error.CWPKI0022E=CWPKI0022E: SSL HANDSHAKE FAILURE:  A signer with SubjectDN &quot;{0}&quot; was sent from target host:port &quot;{1}&quot;.  The signer may need to be added to local trust store &quot;{2}&quot; located in SSL configuration alias &quot;{3}&quot; loaded from SSL configuration file &quot;{4}&quot;.  The extended error message from the SSL handshake exception is: &quot;{5}&quot;.
  </MsgText>
  <Explanation>
    An error occurred during the SSL handshake.  It may require a signer export/import from the target host to the client TrustStore.
  </Explanation>
  <UserResponse>
    Review the extended error message coming from the TrustManager to help determine what needs to change between the target SSL configuration and the client SSL configuration.
  </UserResponse>
</Message>
<Message ID="CWPKI0033E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.keystore.load.error.CWPKI0033E" varFormat="Java">
    ssl.keystore.load.error.CWPKI0033E=CWPKI0033E: The keystore located at &quot;{0}&quot; failed to load due to the following error: {1}.
  </MsgText>
  <Explanation>
    An error occurred while creating or opening the keystore.
  </Explanation>
  <UserResponse>
    Check that the properties in the keystore configuration and ensure the keystore exists.
  </UserResponse>
</Message>
<Message ID="CWPKI0200E" severity="E" prefix="yes">
  <MsgText pgmKey="crypto.key.generate.configuration.error.CWPKI0200E" varFormat="Java">
    crypto.key.generate.configuration.error.CWPKI0200E=CWPKI0200E: An attempt to generate keys using KeySet {0} occurred when the KeySet is not configured to generate keys.  The detailed message is: {1}.
  </MsgText>
  <Explanation>
    The KeySet either does not have a keyGenerationClass defined, it cannot find the keyGenerationClass, a read-only KeyStore is associated with the KeySet, or the KeyStore does not allow the writing of secret keys.
  </Explanation>
  <UserResponse>
    Modify the configuration so a proper keyGenerationClass is configured and a KeyStore type is configured with allows the writing of secret keys.
  </UserResponse>
</Message>
<Message ID="CWPKI0010E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.init.nullprocesstype.CWPKI0010E" varFormat="Java">
    ssl.init.nullprocesstype.CWPKI0010E=CWPKI0010E: Cannot obtain the WAS process type during initialization.
  </MsgText>
  <Explanation>
    This exception is unexpected. The cause is not immediately known.
  </Explanation>
  <UserResponse>
    If the problem persists, additional information might be available if you search for the message ID on the following Web sites: WebSphere Application Server Support page: http://www.ibm.com/software/webservers/appserv/was/support/ WebSphere Application Server for z/OS Support page: http://www.ibm.com/software/webservers/appserv/zos_os390/support/ .
  </UserResponse>
</Message>
<Message ID="CWPKI0310E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.signer.local.truststore.not.found.CWPKI0310E" varFormat="Java">
    ssl.signer.local.truststore.not.found.CWPKI0310E=CWPKI0310E: The &lt;localKeyStoreName&gt; specified as &quot;{0}&quot; was not found on the client.
  </MsgText>
  <Explanation>
    The local truststore is not found.
  </Explanation>
  <UserResponse>
    Try issuing -listLocalKeyStoreNames command to get the list of names.
  </UserResponse>
</Message>
<Message ID="CWPKI0019E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.client.config.parse.CWPKI0019E" varFormat="Java">
    ssl.client.config.parse.CWPKI0019E=CWPKI0019E: Error parsing the SSL client configuration file {0}.  The error returned is {1}.
  </MsgText>
  <Explanation>
    There may be a problem with the syntax of the ssl.client.props file or the location of the file is invalid.
  </Explanation>
  <UserResponse>
    Review the error returned and check the syntax and location of the ssl.client.props file.
  </UserResponse>
</Message>
<Message ID="CWPKI0303I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.signer.retrieval.logfile.location.CWPKI0303I" varFormat="Java">
    ssl.signer.retrieval.logfile.location.CWPKI0303I=CWPKI0303I: Trace is being logged to the following location: {0}
  </MsgText>
  <Explanation>
    Indicates where the mode is being logged.
  </Explanation>
  <UserResponse>
    None.
  </UserResponse>
</Message>
<Message ID="CWPKI0306I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.signer.remote.truststore.list.CWPKI0306I" varFormat="Java">
    ssl.signer.remote.truststore.list.CWPKI0306I=CWPKI0306I: The following remote keystores exist on the specified server: {0}
  </MsgText>
  <Explanation>
    Indicates a list of the remote keystores.
  </Explanation>
  <UserResponse>
    None.
  </UserResponse>
</Message>
<Message ID="CWPKI0035E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.schedule.read.error.CWPKI0035E" varFormat="Java">
    ssl.schedule.read.error.CWPKI0035E=CWPKI0035E: Schedule &quot;{0}&quot; could not read the next scheduled date.  Initializing alarm for the following date: {1}.
  </MsgText>
  <Explanation>
    An error occurred reading the date from the schedule file in /etc.
  </Explanation>
  <UserResponse>
    Ensure the /etc directory is writable or the file has not been modified.
  </UserResponse>
</Message>
<Message ID="CWPKI0027I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.disable.url.hostname.verification.CWPKI0027I" varFormat="Java">
    ssl.disable.url.hostname.verification.CWPKI0027I=CWPKI0027I: Disabling default hostname verification for HTTPS URL connections.
  </MsgText>
  <Explanation>
    Hostname verification will be disabled by default for URL connections.  Hostname verification checks that the X509 Certificate Common Name (CN) matches the hostname it is from.
  </Explanation>
  <UserResponse>
    To enable default JSSE URL hostname verification, set the com.ibm.ssl.performURLHostNameVerification property to true.
  </UserResponse>
</Message>
<Message ID="CWPKI0202E" severity="E" prefix="yes">
  <MsgText pgmKey="crypto.key.generate.class.load.error.CWPKI0202E" varFormat="Java">
    crypto.key.generate.class.load.error.CWPKI0202E=CWPKI0202E: An error occurred trying to instantiate the key generation class {0} configured in KeySet {1}.  The detailed message is: {2}.
  </MsgText>
  <Explanation>
    Either the runtime could not find the key generation class configured for the KeySet or the class does not implement com.ibm.websphere.crypto.KeyGenerator or com.ibm.websphere.crypto.KeyPairGenerator.
  </Explanation>
  <UserResponse>
    Check to ensure the key generation class configured is specified in a location which can be found by the WebSphere runtime.  Check the InfoCenter on where to specify custom classes for the runtime to find them.
  </UserResponse>
</Message>
<Message ID="CWPKI0017E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.expiration.expired.CWPKI0017E" varFormat="Java">
    ssl.expiration.expired.CWPKI0017E=CWPKI0017E: The certificate with alias {1} from keyStore {2} is expired.
  </MsgText>
  <Explanation>
    A certificate is expired in the keystore.
  </Explanation>
  <UserResponse>
    Open the keystore and validate the expiration dates on all certificates in the keystore.  Remove any expired certs.
  </UserResponse>
</Message>
<Message ID="CWPKI0015E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.stop.error.CWPKI0015E" varFormat="Java">
    ssl.stop.error.CWPKI0015E=CWPKI0015E: Error stopping SSL component. The exception is {0}.
  </MsgText>
  <Explanation>
    An unexpected error occurred stopping the SSL component.
  </Explanation>
  <UserResponse>
    This is a general error.  Look for previous messages that may be related to the failure or a configuration problem.  Enabling SSL=all=enabled debug trace may yield additional information.
  </UserResponse>
</Message>
<Message ID="CWPKI0003I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.init.svcstart.CWPKI0003I" varFormat="Java">
    ssl.init.svcstart.CWPKI0003I=CWPKI0003I: SSL service is starting
  </MsgText>
  <Explanation>
    SSL service is starting.
  </Explanation>
  <UserResponse>
    None. Informational only
  </UserResponse>
</Message>
<Message ID="CWPKI0021E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.load.keymanager.error.CWPKI0021E" varFormat="Java">
    ssl.load.keymanager.error.CWPKI0021E=CWPKI0021E: Error loading custom key manager class {0}.  The exception message is {1}.
  </MsgText>
  <Explanation>
    A class loading error occurred loading the custom key manager configured.
  </Explanation>
  <UserResponse>
    Ensure the class can be found in the environment.
  </UserResponse>
</Message>
<Message ID="CWPKI0302E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.signer.retrieval.logfile.error.CWPKI0302E" varFormat="Java">
    ssl.signer.retrieval.logfile.error.CWPKI0302E=CWPKI0302E: Cannot write to the trace logfile at the following location: {0}
  </MsgText>
  <Explanation>
    Indicates there&apos;s a problem writing to the specified logfile.
  </Explanation>
  <UserResponse>
    Change the logfile path or make sure the file specified is not in use.
  </UserResponse>
</Message>
<Message ID="CWPKI0201E" severity="E" prefix="yes">
  <MsgText pgmKey="crypto.key.getkey.error.CWPKI0201E" varFormat="Java">
    crypto.key.getkey.error.CWPKI0201E=CWPKI0201E: Error retrieving key alias {0} from KeySet {1}.  The exception that occurred is: {2}.
  </MsgText>
  <Explanation>
    An error occurred while retrieving keys from the KeyStore for the specified KeySet.
  </Explanation>
  <UserResponse>
    Check that the KeySet configuration is correct.
  </UserResponse>
</Message>
<Message ID="CWPKI0039E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.cannot.find.node.from.hostlist.CWPKI0039E" varFormat="Java">
    ssl.cannot.find.node.from.hostlist.CWPKI0039E=CWPKI0039E: Cannot find Node connector properties for the hostname {0} in the hostlist for keystore {1}.
  </MsgText>
  <Explanation>
    Make sure the hostname entered is in the canonical format as it appears in serverindex.xml.
  </Explanation>
  <UserResponse>
    Edit the hostlist to convert it to the proper canonical format.
  </UserResponse>
</Message>
<Message ID="CWPKI0312E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.certificate.end.date.invalid.CWPKI0312E" varFormat="Java">
    ssl.certificate.end.date.invalid.CWPKI0312E=CWPKI0312E: The certificate with subject DN {0} has an end date {1} which is no longer valid.
  </MsgText>
  <Explanation>
    The certificate has expired.
  </Explanation>
  <UserResponse>
    Replace the certificate with a valid certificate.
  </UserResponse>
</Message>
<Message ID="CWPKI0307I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.signer.local.truststore.list.CWPKI0307I" varFormat="Java">
    ssl.signer.local.truststore.list.CWPKI0307I=CWPKI0307I: The following local keystores exist on the client: {0}
  </MsgText>
  <Explanation>
    Indicates a list of the local keystores.
  </Explanation>
  <UserResponse>
    None.
  </UserResponse>
</Message>
<Message ID="CWPKI0005I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.init.startfail.CWPKI0005I" varFormat="Java">
    ssl.init.startfail.CWPKI0005I=CWPKI0005I: SSL service initialization failed
  </MsgText>
  <Explanation>
    SSL service initialization failed
  </Explanation>
  <UserResponse>
    None. Informational only
  </UserResponse>
</Message>
<Message ID="CWPKI0036E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.notification.send.error.CWPKI0036E" varFormat="Java">
    ssl.notification.send.error.CWPKI0036E=CWPKI0036E: Error sending email to &quot;{0}&quot; using smtp server &quot;{1}&quot;.  The exception message is: &quot;{2}&quot;.
  </MsgText>
  <Explanation>
    An error occuring sending email to the specified SMTP server.
  </Explanation>
  <UserResponse>
    Ensure the SMTP server specified is valid and that your companies firewall policy allows sending to SMTP ports.
  </UserResponse>
</Message>
<Message ID="CWPKI0028E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.no.such.algorithm.CWPKI0028E" varFormat="Java">
    ssl.no.such.algorithm.CWPKI0028E=CWPKI0028E: SSL handshake protocol &quot;{0}&quot; is not valid.  This protocol is specified in the SSL configuration alias &quot;{1}&quot; loaded from SSL configuration file &quot;{2}&quot;.  The extended error message is: &quot;{3}&quot;.
  </MsgText>
  <Explanation>
    The handshake protocol specified is not recognized as a valid handshake protocol.
  </Explanation>
  <UserResponse>
    Check the SSL configuration to ensure the right handshake protocol is specified.
  </UserResponse>
</Message>
<Message ID="CWPKI0040I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.handshake.failure.info.CWPKI0040I" varFormat="Java">
    ssl.handshake.failure.info.CWPKI0040I=CWPKI0040I: An SSL handshake failure occurred from a secure client.  The server&apos;s SSL signer has to be added to the client&apos;s trust store.  A retrieveSigners utility is provided to download signers from the server but requires administrative permission.  Check with your administrator to have this utility run to setup the secure enviroment before running the client.  Alternatively, the com.ibm.ssl.enableSignerExchangePrompt can be enabled in ssl.client.props for &quot;DefaultSSLSettings&quot; in order to allow acceptance of the signer during the connection attempt.
  </MsgText>
  <Explanation>
    This message is for providing options for the client to retrieve signers needed for a successful SSL connection.
  </Explanation>
  <UserResponse>
    Either run retrieveSigners or enable the signer exchange prompt to correct the problem.
  </UserResponse>
</Message>
<Message ID="CWPKI0011E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.loadresource.error.CWPKI0011E" varFormat="Java">
    ssl.loadresource.error.CWPKI0011E=CWPKI0011E: Failed to load {0} resource from cell.  The exception is {1}
  </MsgText>
  <Explanation>
    The specified resource could not be loaded due to an exception.
  </Explanation>
  <UserResponse>
    The failure may be related to a configuration problem related to the resource.
  </UserResponse>
</Message>
<Message ID="CWPKI0001I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.init.startinit.CWPKI0001I" varFormat="Java">
    ssl.init.startinit.CWPKI0001I=CWPKI0001I: SSL service is initializing the configuration
  </MsgText>
  <Explanation>
    SSL service is initializing the configuration.
  </Explanation>
  <UserResponse>
    None. Informational only
  </UserResponse>
</Message>
<Message ID="CWPKI0041W" severity="W" prefix="yes">
  <MsgText pgmKey="ssl.default.password.in.use.CWPKI0041W" varFormat="Java">
    ssl.default.password.in.use.CWPKI0041W=CWPKI0041W: One or more key stores are using the default password.
  </MsgText>
  <Explanation>
    Default key store passwords should be changed when possible.
  </Explanation>
  <UserResponse>
    Change all key store passwords either using AdminConsole or IKeyMan.
  </UserResponse>
</Message>
<Message ID="CWPKI0031E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.client.keystore.create.error.CWPKI0031E" varFormat="Java">
    ssl.client.keystore.create.error.CWPKI0031E=CWPKI0031E: Error creating a client keystore or truststore during initialization.  The exception that occurred is: {0}.
  </MsgText>
  <Explanation>
    An error occurred while creating the file-based keystore or truststore during process initialization.  Check that the keystore or truststore settings are valid.
  </Explanation>
  <UserResponse>
    Verify the keystore or truststore settings in the ssl.client.props.
  </UserResponse>
</Message>
<Message ID="CWPKI0006E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.init.mbeanerror.CWPKI0006E" varFormat="Java">
    ssl.init.mbeanerror.CWPKI0006E=CWPKI0006E: Error creating or registering {0} mBean. The exception is {1}
  </MsgText>
  <Explanation>
    An unexpected exception occurred when trying to create or register an mBean.
  </Explanation>
  <UserResponse>
    There may be a problem with the configuration.  The exception may include details.
  </UserResponse>
</Message>
<Message ID="CWPKI0304E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.signer.remote.truststore.not.found.CWPKI0304E" varFormat="Java">
    ssl.signer.remote.truststore.not.found.CWPKI0304E=CWPKI0304E: The &lt;remoteKeyStoreName&gt; specified as &quot;{0}&quot; was not found on the server.
  </MsgText>
  <Explanation>
    The remote truststore is not found.
  </Explanation>
  <UserResponse>
    Try issuing -listRemoteKeyStoreNames command to get the list of names.
  </UserResponse>
</Message>
<Message ID="CWPKI0314E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.signer.general.error.CWPKI0314E" varFormat="Java">
    ssl.signer.general.error.CWPKI0314E=CWPKI0314E: The following error is returned from an exception: {0}
  </MsgText>
  <Explanation>
    Check the command line to ensure the options are correct.
  </Explanation>
  <UserResponse>
    Check the usage help and retry after correcting the option.
  </UserResponse>
</Message>
<Message ID="CWPKI0007I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.init.svcstartfail.CWPKI0007I" varFormat="Java">
    ssl.init.svcstartfail.CWPKI0007I=CWPKI0007I: SSL service failed to start successfully
  </MsgText>
  <Explanation>
    SSL service did not start.
  </Explanation>
  <UserResponse>
    None. Informational only
  </UserResponse>
</Message>
<Message ID="CWPKI0203E" severity="E" prefix="yes">
  <MsgText pgmKey="crypto.key.import.error.CWPKI0203E" varFormat="Java">
    crypto.key.import.error.CWPKI0203E=CWPKI0203E: An attempt to import keys to KeySet {0} failed.  The detailed message is: {1}.
  </MsgText>
  <Explanation>
    The keys passed in may not have been correctly formed or the keystore could not be accessed to store them.
  </Explanation>
  <UserResponse>
    Attempt to determine the cause based on the exception and adjust the configuration as needed.
  </UserResponse>
</Message>
<Message ID="CWPKI0301I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.signer.retrieval.tracemodeon.CWPKI0301I" varFormat="Java">
    ssl.signer.retrieval.tracemodeon.CWPKI0301I=CWPKI0301I: Trace mode is on.
  </MsgText>
  <Explanation>
    Indicates trace mode is on.
  </Explanation>
  <UserResponse>
    None.
  </UserResponse>
</Message>
<Message ID="CWPKI0311E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.certificate.before.date.invalid.CWPKI0311E" varFormat="Java">
    ssl.certificate.before.date.invalid.CWPKI0311E=CWPKI0311E: The certificate with subject DN {0} has a start date {1} which is valid after the current date/time.  This will can happen if the client&apos;&apos;s clock is set earlier than the server&apos;&apos;s clock.   Please verify the clocks are in sync between this client and server and retry the request.
  </MsgText>
  <Explanation>
    The start date of the certificate is not valid.
  </Explanation>
  <UserResponse>
    Ensure that the client&apos;s clock matches up with the server&apos;s clock.   Otherwise, create a certificate with the proper start date.
  </UserResponse>
</Message>
<Message ID="CWPKI0038E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.expiration.monitor.start.error.CWPKI0038E" varFormat="Java">
    ssl.expiration.monitor.start.error.CWPKI0038E=CWPKI0038E: Expiration monitor failed to start with the following error: {0}.
  </MsgText>
  <Explanation>
    A problem occurred starting the expiration monitor command task.
  </Explanation>
  <UserResponse>
    Try starting the expiration monitor explicitly to determine more information about the error.
  </UserResponse>
</Message>
<Message ID="CWPKI0032E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.self.signed.create.error.CWPKI0032E" varFormat="Java">
    ssl.self.signed.create.error.CWPKI0032E=CWPKI0032E: Error creating a self-signed certificate.  The exception that occurred is: {0}.
  </MsgText>
  <Explanation>
    An error occurred while creating a self-signed certificate during process startup.
  </Explanation>
  <UserResponse>
    Check that the default self-signed certificate property values (com.ibm.ssl.defaultCertReq*) are valid.
  </UserResponse>
</Message>
<Message ID="CWPKI0009E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.init.nullsecobject.CWPKI0009E" varFormat="Java">
    ssl.init.nullsecobject.CWPKI0009E=CWPKI0009E: Cannot create security object during initialization.
  </MsgText>
  <Explanation>
    Cannot create the security object from repository. Internal Error.
  </Explanation>
  <UserResponse>
    The security.xml might be corrupted or missing. Contact your service representative.
  </UserResponse>
</Message>
<Message ID="CWPKI0204E" severity="E" prefix="yes">
  <MsgText pgmKey="crypto.key.auto.generate.error.CWPKI0204E" varFormat="Java">
    crypto.key.auto.generate.error.CWPKI0204E=CWPKI0204E: An error occurred during a scheduled key generation for KeySetGroup {0}.  The detailed error message is: {1}.
  </MsgText>
  <Explanation>
    A problem occurred while a new key reference was created for the KeySetGroup specified.  After the key reference was created in the configuration the key was generated.  One of these steps failed.
  </Explanation>
  <UserResponse>
    Attempt to determine the cause based on the exception and adjust the configuration as needed.
  </UserResponse>
</Message>
<Message ID="CWPKI0014I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.init.ssldm.init.CWPKI0014I" varFormat="Java">
    ssl.init.ssldm.init.CWPKI0014I=CWPKI0014I: The SSL component&apos;&apos;s FFDC Diagnostic Module {0} registered successfully: {1}.
  </MsgText>
  <Explanation>
    Describes whether or not the SSL component&apos;s FFDC Diagnostic module was successfully registered.
  </Explanation>
  <UserResponse>
    None. Informational only.
  </UserResponse>
</Message>
<Message ID="CWPKI0300I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.signer.retrieval.usage.CWPKI0300I" varFormat="Java">
    ssl.signer.retrieval.usage.CWPKI0300I=CWPKI0300I: Use the -listRemoteKeyStoreNames and -listLocalKeyStoreNames options to get list of names for &lt;remoteKeyStoreName&gt; and &lt;localKeyStoreName&gt;, respectively.

Usage: retrieveSigners &lt;remoteKeyStoreName&gt; &lt;localKeyStoreName&gt; [options]
        options: [-profileName &lt;profileName&gt;] [-remoteAlias &lt;aliasFromRemoteStore&gt;] [-localAlias &lt;storeAsAlias&gt;] [-listRemoteKeyStoreNames] [-listLocalKeyStoreNames] [-autoAcceptBootstrapSigner] [-uploadSigners] [-host &lt;host&gt;] [-port &lt;port&gt;] [-conntype &lt;RMI|SOAP&gt;] [-user &lt;user&gt;] [-password &lt;password&gt;] [-trace] [-logfile &lt;filename&gt;] [-replacelog] [-quiet] [-help]
  </MsgText>
  <Explanation>
    Usage information on the parameters for executing this script.
  </Explanation>
  <UserResponse>
    None.
  </UserResponse>
</Message>
<Message ID="CWPKI0020E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.load.trustmanager.error.CWPKI0020E" varFormat="Java">
    ssl.load.trustmanager.error.CWPKI0020E=CWPKI0020E: Error loading custom trust manager class {0}.  The exception message is {1}.
  </MsgText>
  <Explanation>
    A class loading error occurred loading the custom trust manager configured.
  </Explanation>
  <UserResponse>
    Ensure the class can be found in the environment.
  </UserResponse>
</Message>
<Message ID="CWPKI0034E" severity="E" prefix="yes">
  <MsgText pgmKey="ssl.schedule.init.error.CWPKI0034E" varFormat="Java">
    ssl.schedule.init.error.CWPKI0034E=CWPKI0034E: Schedule &quot;{0}&quot; could not be initialized because of the following error: &quot;{1}&quot;.
  </MsgText>
  <Explanation>
    An error occurred initializing the schedule.
  </Explanation>
  <UserResponse>
    Check that the properties for the scheduler are valid.  Ensure the /etc directory is writable.
  </UserResponse>
</Message>
<Message ID="CWPKI0012I" severity="I" prefix="yes">
  <MsgText pgmKey="ssl.fips.enabled.CWPKI0012I" varFormat="Java">
    ssl.fips.enabled.CWPKI0012I=CWPKI0012I: FIPS is enabled.
  </MsgText>
  <Explanation>
    The server is running in FIPS mode, using the IBMJCEFIPS provider.
  </Explanation>
  <UserResponse>
    No user action is required.
  </UserResponse>
</Message>
<Message ID="CWPKI0313W" severity="W" prefix="yes">
  <MsgText pgmKey="ssl.signer.invalid.option.CWPKI0313W" varFormat="Java">
    ssl.signer.invalid.option.CWPKI0313W=CWPKI0313W: The following option is not valid: {0}
  </MsgText>
  <Explanation>
    Check the command line to ensure the options are correct.
  </Explanation>
  <UserResponse>
    Check the usage help and retry after correcting the option.
  </UserResponse>
</Message>
<Message ID="CWPKI0016W" severity="W" prefix="yes">
  <MsgText pgmKey="ssl.expiration.warning.CWPKI0016W" varFormat="Java">
    ssl.expiration.warning.CWPKI0016W=CWPKI0016W: The certificate with alias {0} from keyStore {1} will be expired in {2} days.
  </MsgText>
  <Explanation>
    A certificate is about to expire in the keystore.
  </Explanation>
  <UserResponse>
    Open the keystore and validate the expiration dates on all certificates in the keystore.  Prepare to generate new certificates, if necessary.
  </UserResponse>
</Message>
<!-- END MESSAGES -->
</TMSSource>
