<?xml version="1.0"?>
<!-- *********************************************************************** -->
<!-- THIS PRODUCT CONTAINS RESTRICTED MATERIALS OF IBM                       -->
<!-- 5724-J34(C) COPYRIGHT International Business Machines Corp., 2011       -->
<!-- All Rights Reserved * Licensed Materials - Property of IBM              -->
<!-- US Government Users Restricted Rights - Use, duplication or disclosure  -->
<!-- restricted by GSA ADP Schedule Contract with IBM Corp.                  -->
<!-- *********************************************************************** -->
<!-- Change activity:                                                        -->
<!-- Ver   Date   Description                                                -->
<!-- ===  ======  ========================================================== -->
<!-- 1.1  041211  23177 - Create the descriptor for VE 7 ifixes              -->
<!-- *********************************************************************** -->
<InstallPackage	 DescriptorVersion="3.1"  SelectionGroup="interimFix"  MaintenancePackage="userSelect"  PrereqPackage="UPDI70" >
	<PackageShortName> 	VE7Maintenance 					</PackageShortName>  
	<PackageLongName>  	Maintenance for WebSphere Virtual Enterprise   </PackageLongName>  
	<PackageMsgKeyPrefix>	ve.70.maintenance 				</PackageMsgKeyPrefix>  
	<PackageMsgBundleBaseName>	xdcimgr.messages.InstallPackageMsgs         </PackageMsgBundleBaseName>  
	
	<ProductShortNames> 	WXDOP 	</ProductShortNames>
	
	<!-- PackageDir is the name of the directory that holds the package files -->
	<PackageDir>            VE7Updates              </PackageDir>         
	<PackageVersionString>  7.0                   	</PackageVersionString>  
	<PackageProvider>	    IBM Corporation       	</PackageProvider>	    
	<PackageProviderURL>	http://www.ibm.com/support    	</PackageProviderURL>	
	
	<PackageURL>	http://www.ibm.com/software/webservers/appserv/extend/support/		</PackageURL>
	    
	<FileDownloadURLs>		
			ftp://public.dhe.ibm.com/software/websphere/extended/support/fixes/,
			ftp://public.dhe.ibm.com/software/websphere/extended/support/fixpacks/    	
	</FileDownloadURLs>	    

	<!-- Feature-specific License file, if present, supercedes the Package License file -->
	<PackageLicenseZipPrefix>         ${PREREQ_PACKAGE_DIR}/7.*-WS-UPDI-.*		</PackageLicenseZipPrefix>
	<PackageLicenseFile>     UpdateInstaller/updi.primary.pak/repository/updi.legal/lafiles/LA_${LANG}  </PackageLicenseFile>	    
	<PackageLicenseInfoFile> UpdateInstaller/updi.primary.pak/repository/updi.legal/lafiles/LI_${LANG}  </PackageLicenseInfoFile> 
	
	<PackageFileList>  </PackageFileList>	    

	<SpecialInstruction  Name="NodeCentric" />
	
	<SpecialInstallParameters HelperClass="com.ibm.ws.xd.cimgr.helper.PermissionToUpdateUPDI" 
							  MsgKeyRoot="specialParm.permission.to.update.updi" 
							  PromptType="CheckBox"  >
		<ParamName>		PERMISSION_TO_UPDATE_UPDI			</ParamName>
	</SpecialInstallParameters>
	
	<!-- Verify that the non-root AIX user can run "sudo slibclean" -->	
	<ParameterValidator Operation="install" HelperClass="com.ibm.ws.xd.cimgr.controller.SlibcleanByNonRootAixUser" />
		
	<InstallPrepCmd		HelperClass="com.ibm.ws.xd.cimgr.controller.StopMiddlewareAgentCmdHelperV2" >			
		<CommandStringUnix>      														</CommandStringUnix>
		<CommandStringWindows>   														</CommandStringWindows>
		<CommandPath>    		     													</CommandPath>
		<CommandLogs>   	                                       						</CommandLogs>
		<SuccessMsg>     				   												</SuccessMsg>
	</InstallPrepCmd>
	
	<UninstallPrepCmd	HelperClass="com.ibm.ws.xd.cimgr.controller.StopMiddlewareAgentCmdHelperV2" >
		<CommandStringUnix>      														</CommandStringUnix>
		<CommandStringWindows>   														</CommandStringWindows>
		<CommandPath>    		     													</CommandPath>
		<CommandLogs>                                             						</CommandLogs>
		<SuccessMsg>     				   												</SuccessMsg>
	</UninstallPrepCmd>
	
	<UninstallPrepCmd	HelperClass="com.ibm.ws.xd.cimgr.controller.SlibcleanByNonRootAixUser" />
		
	<InstallLocation> 	${WAS_INSTALL_ROOT}		</InstallLocation>

	<SummaryMessage
		HelperClass=""
		Operation="install"
		Platform="_ANY_"
		MessageKey="was.maintenance.update.warning.all"	/>

	<SummaryMessage
		HelperClass=""
		Operation="uninstall"
		Platform="_ANY_"
		MessageKey="was.maintenance.update.warning.all"	/>

	<!-- The normal success msg for the UPDI install is INSTCONFSUCCESS. However, there is a minor problem with 
	     the current installer on Windows that would result in a INSTCONFPARTIALSUCCESS. We therefor test for the
	     "SUCCESS" message as a temporary workaround. Also note that the -is:javahome switch is required for Windows. -->
	<InstallCmd>
		<CommandStringUnix>     install 	-silent -OPT silentInstallLicenseAcceptance="true" -OPT installLocation="${INSTALL_LOCATION}" -OPT disableOSPrereqChecking="true" -OPT allowNonRootSilentInstall="true"</CommandStringUnix>
		<CommandStringWindows>  install.exe -is:javahome "${WAS_INSTALL_ROOT}/java" -silent -OPT silentInstallLicenseAcceptance="true" -OPT installLocation="${INSTALL_LOCATION}" -OPT disableOSPrereqChecking="true" -OPT allowNonRootSilentInstall="true"</CommandStringWindows>
		<CommandPath>           ${WORKING_DIR}/UpdateInstaller				</CommandPath>
		<CommandLogs>           ${INSTALL_LOCATION}/logs/install/log.txt    </CommandLogs>
		<AlternateLog>          ${USER_HOME_DIR}/updilogs/log.txt           </AlternateLog>
		<SuccessMsg>            INSTCONFSUCCESS     						</SuccessMsg>
		<AlternateMsg>			INSTCONFPARTIALSUCCESS						</AlternateMsg>
	</InstallCmd>

	<!-- The uninstall command below uninstall the FixPaks in the reverse order -->
	<UninstallCmd>
		<CommandStringUnix>     update.sh  -silent -W backup.package="${WAS_FIXPAK}" -W product.location="${WAS_INSTALL_ROOT}" -W update.type="uninstall" </CommandStringUnix>
		<CommandStringWindows>  update\..* -silent -W backup.package="${WAS_FIXPAK}" -W product.location="${WAS_INSTALL_ROOT}" -W update.type="uninstall" </CommandStringWindows>
		<OptionalCommandParms>  -OPT rootUserHasRunSlibcleanCommandSuccessfully="${SLIBCLEAN_SUCCESSFUL}"	</OptionalCommandParms>
		<CommandPath>           ${WAS_INSTALL_ROOT}/UpdateInstaller								   </CommandPath>
		<CommandLogs>   ${WAS_INSTALL_ROOT}/logs/update/${WAS_FIXPAK_NAME}.uninstall/updatelog.txt </CommandLogs>
		<SuccessMsg>            INSTCONFSUCCESS                				  					   </SuccessMsg>
		<AlternateMsg>			INSTCONFPARTIALSUCCESS											   </AlternateMsg>
	</UninstallCmd>
	
	<!-- All-Platform maintenance paks (if any) are applied after the platform-specific ones -->
	<AllPlatformMaintenancePaks> 	</AllPlatformMaintenancePaks>

	<UpdateInstallerMinimumVersion> 7.0.0.3 </UpdateInstallerMinimumVersion>

	<Installer  Platform="aix"      Arch="32bit"  FromPrereq="true"  Lib=""  Filename="7.?*-WS-UPDI-AixPPC32.zip"/>
	<Installer  Platform="aix"      Arch="64bit"  FromPrereq="true"  Lib=""  Filename="7.?*-WS-UPDI-AixPPC64.zip"/>
	
	<Installer  Platform="windows"  Arch="32bit"  FromPrereq="true"  Lib=""  Filename="7.?*-WS-UPDI-WinIA32.zip" />
	<Installer  Platform="windows"  Arch="amd64"  FromPrereq="true"  Lib=""  Filename="7.?*-WS-UPDI-WinAMD64.zip"/>

	<Installer  Platform="hpux"     Arch="32bit"  FromPrereq="true"  Lib=""  Filename="7.?*-WS-UPDI-HpuxPaRISC.zip"/>
	<Installer  Platform="hpux"     Arch="64bit"  FromPrereq="true"  Lib=""  Filename="7.?*-WS-UPDI-HpuxIA64.zip"/>
	
	<Installer  Platform="linux"    Arch="i686"   FromPrereq="true"  Lib=""  Filename="7.?*-WS-UPDI-LinuxIA32.zip"/>
      <Installer  Platform="linux"    Arch="amd64"  FromPrereq="true"  Lib=""  Filename="7.?*-WS-UPDI-LinuxAMD64.zip"/>
	<Installer  Platform="linux"    Arch="s390"   FromPrereq="true"  Lib=""  Filename="7.?*-WS-UPDI-LinuxS390.zip"/>
      <Installer  Platform="linux"    Arch="s390x"  FromPrereq="true"  Lib=""  Filename="7.?*-WS-UPDI-LinuxS39064.zip"/>
	<Installer  Platform="linux"    Arch="ppc"    FromPrereq="true"  Lib=""  Filename="7.?*-WS-UPDI-LinuxPPC32.zip"/>
      <Installer  Platform="linux"    Arch="ppc64"  FromPrereq="true"  Lib=""  Filename="7.?*-WS-UPDI-LinuxPPC64.zip"/>       
    
	<Installer  Platform="solaris"  Arch="sparc"   FromPrereq="true" Lib=""  Filename="7.?*-WS-UPDI-SolarisSparc.zip"/>
	<Installer  Platform="solaris"  Arch="sparc64" FromPrereq="true" Lib=""  Filename="7.?*-WS-UPDI-SolarisSparc64.zip"/>
	<Installer  Platform="solaris"  Arch="x86_64"  FromPrereq="true" Lib=""  Filename="7.?*-WS-UPDI-SolarisX64.zip"/>
	
	<!-- The package dependencies listed are OR type dependencies -->
	<PackageDependency>	    
		<OsName>		  _DISTRIBUTED_	</OsName>					
		<OsVersionString>				</OsVersionString>
		<OsServicePackLevel>			</OsServicePackLevel>	
	    <ProductName>		   WXDOP	</ProductName>			
		<ProductVersionString>7.0.0.0   </ProductVersionString>	
	</PackageDependency>		

	<PostInstallCmd		HelperClass="com.ibm.ws.xd.cimgr.controller.SlibcleanByNonRootAixUser" />	
	
	<PostInstallCmd>
		<CommandStringUnix>     update.sh  -silent -W maintenance.package="${WORKING_DIR}/${WAS_FIXPAK}" -W product.location="${WAS_INSTALL_ROOT}" -W update.type="install"	</CommandStringUnix>
		<CommandStringWindows>  update\..* -silent -W maintenance.package="${WORKING_DIR}/${WAS_FIXPAK}" -W product.location="${WAS_INSTALL_ROOT}" -W update.type="install" </CommandStringWindows>
		<OptionalCommandParms>  -OPT rootUserHasRunSlibcleanCommandSuccessfully="${SLIBCLEAN_SUCCESSFUL}"	</OptionalCommandParms>
		<CommandPath>           ${INSTALL_LOCATION}     										 </CommandPath>
		<CommandLogs>   ${WAS_INSTALL_ROOT}/logs/update/${WAS_FIXPAK_NAME}.install/updatelog.txt </CommandLogs>
		<SuccessMsg>            INSTCONFSUCCESS                									 </SuccessMsg>
		<AlternateMsg>			INSTCONFPARTIALSUCCESS										   	 </AlternateMsg>
	</PostInstallCmd>

	<PostInstallCmd		HelperClass="com.ibm.ws.xd.cimgr.helper.WASNodeChecker" >
		<CommandStringUnix>   startNode.sh   </CommandStringUnix>
		<CommandStringWindows>startNode.bat  </CommandStringWindows>
		<CommandPath>         ${USER_INSTALL_ROOT}/bin     							</CommandPath>
		<CommandLogs>         ${USER_INSTALL_ROOT}/logs/nodeagent/startServer.log	</CommandLogs>
		<SuccessMsg>          ADMU3000I             </SuccessMsg>
	</PostInstallCmd>

	<PostInstallCmd		HelperClass="com.ibm.ws.xd.cimgr.helper.WASForeignNodeChecker" >
		<CommandStringUnix>     startAgent.sh   											</CommandStringUnix>
		<CommandStringWindows>  startAgent.bat  											</CommandStringWindows>
		<CommandPath>           ${WAS_INSTALL_ROOT}/bin     								</CommandPath>
		<CommandLogs>           ${WAS_INSTALL_ROOT}/logs/middlewareagent/startServer.log 	</CommandLogs>
		<SuccessMsg>            CWXDA0034I            										</SuccessMsg>
	</PostInstallCmd>

	<PostUninstallCmd	HelperClass="com.ibm.ws.xd.cimgr.helper.WASNodeChecker" >
		<CommandStringUnix>   startNode.sh   </CommandStringUnix>
		<CommandStringWindows>startNode.bat  </CommandStringWindows>
		<CommandPath>         ${USER_INSTALL_ROOT}/bin     							</CommandPath>
		<CommandLogs>         ${USER_INSTALL_ROOT}/logs/nodeagent/startServer.log	</CommandLogs>
		<SuccessMsg>          ADMU3000I             </SuccessMsg>
	</PostUninstallCmd>

	<PostUninstallCmd	HelperClass="com.ibm.ws.xd.cimgr.helper.WASForeignNodeChecker" >
		<CommandStringUnix>     startAgent.sh   											</CommandStringUnix>
		<CommandStringWindows>  startAgent.bat  											</CommandStringWindows>
		<CommandPath>           ${WAS_INSTALL_ROOT}/bin     								</CommandPath>
		<CommandLogs>           ${WAS_INSTALL_ROOT}/logs/middlewareagent/startServer.log 	</CommandLogs>
		<SuccessMsg>            CWXDA0034I            										</SuccessMsg>
	</PostUninstallCmd>
	
</InstallPackage>