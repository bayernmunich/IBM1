<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="com.ibm.ws.pmt" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="com.ibm.ws.pmt" id="widgetInfo" name="Widget Information"/>
      </appInfo>
      <documentation>
         This extension point defines the information used to construct the widgets within a GenericWizardFragment instance.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="widgetInfo" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="widgetInfo">
      <annotation>
         <appInfo>
            <meta.element labelAttribute="name"/>
         </appInfo>
         <documentation>
            Contains information used to build the widgets for a given panel.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="displayPrereq" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="validatorDependency" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="defaulterDependency" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="dataItem" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="button" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="fragmentId" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  Specifies an identifier for this widget information.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="order" type="string" use="required">
            <annotation>
               <documentation>
                  A numeric value that determines the order in which the widgetInfo will be processed relative to other widgetInfo elements for the same wizard fragment.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="type" use="required">
            <annotation>
               <documentation>
                  Specifies the type of the widget information element.The valid types are: panel, composite, group, end, caption, space, label, text, checkBox, comboBox, spinner and radioButtonSet.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="panel">
                  </enumeration>
                  <enumeration value="composite">
                  </enumeration>
                  <enumeration value="group">
                  </enumeration>
                  <enumeration value="end">
                  </enumeration>
                  <enumeration value="caption">
                  </enumeration>
                  <enumeration value="space">
                  </enumeration>
                  <enumeration value="label">
                  </enumeration>
                  <enumeration value="text">
                  </enumeration>
                  <enumeration value="checkBox">
                  </enumeration>
                  <enumeration value="comboBox">
                  </enumeration>
                  <enumeration value="spinner">
                  </enumeration>
                  <enumeration value="radioButtonSet">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="resourceBundleKey" type="string">
            <annotation>
               <documentation>
                  Specifies the name of the resource bundle key for the panel text associated with the widgetInfo.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="argumentKey" type="string">
            <annotation>
               <documentation>
                  Specifies the name of the key for the argument associated with the widgetInfo.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="checkBoxKey" type="string">
            <annotation>
               <documentation>
                  Specifies the name of the argument key of a checkbox upon which the widget represented by this widgetInfo is dependent or &quot;none&quot;, indicating this widgetInfo is not dependent upon a checkbox. The default value is &quot;none&quot;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="min" type="string">
            <annotation>
               <documentation>
                  The minimum value allowed for the associated spinnner widget. This value is required for spinner type widgetInfo elements and is ignored for all other types of widgetInfo elements.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="max" type="string">
            <annotation>
               <documentation>
                  The maximum value allowed for the associated spinnner widget. This value is required for spinner type widgetInfo elements and is ignored for all other types of widgetInfo elements.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="columns">
            <annotation>
               <documentation>
                  This attribute is optional for &quot;panel&quot; type widetInfo elements as well as for widgetInfo elements that define a widget. 

When used in a &quot;panel&quot;, &quot;composite&quot; or &quot;group&quot; type widgetInfo element this attribute contains the number of  columns in the associated composite. In this case, the valid values are 1-5, with the default being 1.

When used in a widgetInfo element that defines a widget this attribute defines the number of columns that the widget will span. In this case the valid values are 0-5, where 0 indicates the widget is to span all the columns of the containing composite. For &quot;caption&quot;, &quot;space&quot;, &quot;checkBox&quot; and &quot;radioButtonSet&quot; widgetInfo types the default is 0. For &quot;label&quot;, &quot;text&quot;, &quot;comboBox&quot; and &quot;spinner&quot; widgetInfo types the default is 1.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="0">
                  </enumeration>
                  <enumeration value="1">
                  </enumeration>
                  <enumeration value="2">
                  </enumeration>
                  <enumeration value="3">
                  </enumeration>
                  <enumeration value="4">
                  </enumeration>
                  <enumeration value="5">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="upperCase">
            <annotation>
               <documentation>
                  For text widgetInfo elements, indicates whether the input text should be converted to upper case. Valid values are true and false. The default is false.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="true">
                  </enumeration>
                  <enumeration value="false">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="indent">
            <annotation>
               <documentation>
                  Indicates the relative amount the associated widget should be indented within the column that it appears in. Valid values are 0, 1, and 2. The default is 0.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="0">
                  </enumeration>
                  <enumeration value="1">
                  </enumeration>
                  <enumeration value="2">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="use">
            <annotation>
               <documentation>
                  Indicates the use of a text widget. The valid values are &quot;password&quot;, &quot;confirmPassword&quot;, &quot;filePath&quot;, &quot;directoryPath&quot; and &quot;default&quot;, with the default being &quot;default&quot;.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="password">
                  </enumeration>
                  <enumeration value="confirmPassword">
                  </enumeration>
                  <enumeration value="filePath">
                  </enumeration>
                  <enumeration value="directoryPath">
                  </enumeration>
                  <enumeration value="default">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="internal">
            <annotation>
               <documentation>
                  Indicates whether the argument designated by the argumentKey value is an internal argument. (Internal arguments are not saved in response files and are not used during profile creation or augmentation.) The valid values are true and false with the default being false.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="true">
                  </enumeration>
                  <enumeration value="false">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="enabled">
            <annotation>
               <documentation>
                  Indicates whether the associated widget is to be enabled. The valid values are true and false, with the default being true.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="true">
                  </enumeration>
                  <enumeration value="false">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="assignmentKey" type="string">
            <annotation>
               <documentation>
                  The key name of an argument whose value is to be assigned to this widget. When specified, the enabled attribute must be set to false.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string">
            <annotation>
               <documentation>
                  The name of a class, which must extend com.ibm.ws.pmt.uiutilities.WidgetCustomizer, that is to be used to customize the associated widget or &quot;none&quot;. (A value of &quot;none&quot; indicates that a customizer class is not to be used for the associated widget.) The default value is &quot;none&quot;. If a value other than &quot;none&quot; is specified, an instance of the specified class will be created to customize the associated widget.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="displayPrereq">
      <annotation>
         <documentation>
            Contains an argument key, a sequence of test values and a comparison operator that is used to determine whether the associated panel will be displayed. When multiple displayPrereq elements are used the condition specified by each displayPrereq element must be satisfied for the associated panel to be displayed.

 When the &quot;equality&quot; comparison operator is used, the condition is satisfied if the current value associated with the specified argument is equal to any one of the test values. When the &quot;inequality&quot; comparison operator is used the condition is satisfied only if the current value for the specified argument is not equal to any of the test values.
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="testValue" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="argumentKey" type="string" use="required">
            <annotation>
               <documentation>
                  The key of the argument whose value is to be tested.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="operator" use="required">
            <annotation>
               <documentation>
                  The operator to use when comparing the argument key value with the test values. The valid values are &quot;equality&quot; and &quot;inequality&quot;.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="equality">
                  </enumeration>
                  <enumeration value="inequality">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
      </complexType>
   </element>

   <element name="validatorDependency">
      <annotation>
         <documentation>
            Specifies an argument that is a dependency for one or more of the validators for arguments that are collected on this panel.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="key" type="string" use="required">
            <annotation>
               <documentation>
                  The key of the validator dependency argument.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="defaulterDependency">
      <annotation>
         <documentation>
            Specifies an argument that is a dependency for one or more of the defaulters for arguments that are collected on this panel.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="key" type="string" use="required">
            <annotation>
               <documentation>
                  The key of the defaulter dependency argument.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="dataItem">
      <annotation>
         <documentation>
            Each dataItem element identifies an item in a combo-box selection list. The type attribute value must be set to &quot;comboBox&quot; when the dataItem sequence is specified.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="value" type="string">
            <annotation>
               <documentation>
                  The value to be assigned to the associated argument when this item is selected. The actual selection item text for this data item is specified by the resource bundle key that is in the form of resourceBundleKey.value.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="testValue">
      <annotation>
         <documentation>
            Contains a value to be compared against the value for the argumentKey attribute in the containing displayPrereq element.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  The value to be compared with the actual value for the associated argument.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="button">
      <annotation>
         <documentation>
            Each button element identifies a radio button within a set of radio buttons. The type value must be set to &quot;radioButtonSet&quot; when the button sequence is specified.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="value" type="string">
            <annotation>
               <documentation>
                  The value to be assigned to the associated argument when this button is selected. The text for this radio button is specified by the resource bundle key that is in the form of resourceBundleKey.value.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="fragmentId">
      <annotation>
         <documentation>
            Each fragmentId element contains the identifier of a fragment element that the widgetInfo element is associated with.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="id" type="string" use="required">
            <annotation>
               <documentation>
                  The identifier of a fragment element that this widgetInfo element is associated with.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         V7.0 defect 598440.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is an example of an instruction fragment extension:

    &lt;extension
         point=&quot;com.ibm.ws390.pmt.config.instructionFragments&quot;&gt;
      &lt;fragment
            pathname=&quot;zos-appserver-augment/augmentHeader&quot;
            id=&quot;augmentHeader&quot;
            order=&quot;1&quot;
            priority=&quot;1&quot;
            templateId=&quot;zos-appserver-augment&quot;/&gt;           
   &lt;/extension&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         Any plugin that provides instruction fragment extensions must provide two files for each instruction fragment. One file must have a file name suffix of &quot;.html&quot; and must contain the text to be included when generating HTML instructions. The other file must have a file name suffix of &quot;.txt&quot; and must contain the text to be included when generating text instructions. The relative path names of both files must be the same except for the file name suffix. The two files must be placed within a directory named &quot;instructionFragments&quot; (or a nested subdirectory of &quot;instructionFragments&quot;). The &quot;instructionFragments&quot; directory must be defined at the top level of the plugin file hierarchy.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         The com.ibm.ws390.pmt.config plugin implements this extension point. This enables HTML instructions to be created from instruction fragments when the PMT is used to create a customization definition. It also enables text instructions to be created from instruction fragments when 1) the PMT &quot;Process&quot; action is used to upload or export the customization data or 2) the zpmt.sh command is used to create customization data.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Licensed Materials - Property of IBM                      
5724-I63, 5724-H88, 5655-N01, 5733-W61 (C) Copyright IBM Corp. 1997, 2008
All Rights Reserved 
US Government Users Restricted Rights - Use, duplication or disclosure restricted by
GSA ADP Schedule Contract with  the IBM Corp.
      </documentation>
   </annotation>

</schema>
