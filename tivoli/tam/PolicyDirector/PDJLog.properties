# 3 43 1.3.1.11 src/com/tivoli/pd/jras/pdjlog/PDJLog.properties, pd.jras, am600, 050110a 5/29/03 16:38:43
#
# Licensed Materials - Property of IBM
# 5748-XX8
# (c) Copyright International Business Machines Corp. 2001, 2003
# All Rights Reserved
# US Government Users Restricted Rights - Use, duplicaion or disclosure
# restricted by GSA ADP Schedule Contract with IBM Corp.

#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJTraceLogger.  It is the parent of all of the other
# trace loggers.  The only value that should potentially be modified
# for this section is the isLogging value.
# To turn trace on for all the PDJRTE components: (1) Set the isLogging value
# for the PDJTraceLogger to true and (2) comment out below the isLogging
# value entry for the individual PDJRTE component trace loggers such as the
# PDJadminTraceLogger.
#-----------------------------------------------------------------------

baseGroup.PDJTraceLogger.isLogging=false


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJMessageLogger.  The only value that should potentially 
# be modified for this section is the isLogging value, which is set to true
# by default.  To turn on messaging for individual handlers attached to 
# this logger, set the isLogging value for each desired handler, such
# as PDJNoticeFileHandler. 
#
#-----------------------------------------------------------------------

baseGroup.PDJMessageLogger.isLogging=true

#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJTraceAllMaskFilter. 
# The mask key determines the level at which trace is captured. The valid
# trace levels are one of the numerals 1-9. The trace levels are nested.
# Specifying a value of 9 includes levels 1-8, specifying a value of 7
# includes levels 1-7, and so on. 
# To set the same mask for all the PDJRTE components:
# (1) Set the mask for the PDJTraceAllMaskFilter to the desired mask,
# and (2) comment out below the AllMaskFilter entries for the individual
# components such as the PDJadminAllMaskFilter.
#-----------------------------------------------------------------------

baseGroup.PDJTraceAllMaskFilter.mask=9

#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJTraceFileHandler.
#
# The fileName key specifies the fixed part of the name of the file to which 
# the trace output for all the PDJRTE components is written out.  
# The the first file will have the base part of this name with the 
# numeral 1 appended.  Each subsequent file (controlled by the maxFiles and
# maxFileSize keys below) will have their respective numbers appended to the
# base part of the name.  For instance, if maxFiles=3 and maxFileSize=10, 
# there will be 3 files of 10 blocks (512 bytes each) written before rollover 
# occurs.  
#
# The default fileName is trace__amj.log.
# The default maxFiles is 3
# The default maxFileSize is 512 blocks
#
# The fully-qualified file names for the default keys are:
# 
# For Windows
#       <pd-home>/log/trace__amj1.log
#       <pd-home>/log/trace__amj2.log
#       <pd-home>/log/trace__amj3.log
# For unix      
#       <var-dir>/PolicyDirector/log/trace__amj1.log
#       <var-dir>/PolicyDirector/log/trace__amj2.log
#       <var-dir>/PolicyDirector/log/trace__amj3.log

# If either PDJLog.properties or PD.properties is not found, no logging will  
# take place.
#-----------------------------------------------------------------------

#baseGroup.PDJTraceFileHandler.fileName=
#baseGroup.PDJTraceFileHandler.maxFileSize=
#baseGroup.PDJTraceFileHandler.maxFiles=

#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJFatalFileHandler.
#
# The fileName key specifies the fixed part of the name of the file to which 
# the fatal error output for all the PDJRTE components is written out.  
# The the first file will have the base part of this name with the 
# numeral 1 appended.  Each subsequent file (controlled by the maxFiles and
# maxFileSize keys below) will have their respective numbers appended to the
# base part of the name.  For instance, if maxFiles=3 and maxFileSize=10, 
# there will be 3 files of 10 blocks (512 bytes each) written before rollover 
# occurs.  
#
# The default fileName is msg__amj_fatal.log.
# The default maxFiles is 3
# The default maxFileSize is 512 blocks
#
# The fully-qualified file names for the default keys are:
#
# For Windows
#       <pd-home>/log/msg__amj_fatal1.log
#       <pd-home>/log/msg__amj_fatal2.log
#       <pd-home>/log/msg__amj_fatal3.log
# For unix
#       <var-dir>/PolicyDirector/log/msg__amj_fatal1.log
#       <var-dir>/PolicyDirector/log/msg__amj_fatal2.log
#       <var-dir>/PolicyDirector/log/msg__amj_fatal3.log


# If either PDJLog.properties or PD.properties is not found, no logging will 
# take place.
#-----------------------------------------------------------------------

#baseGroup.PDJFatalFileHandler.fileName=
#baseGroup.PDJFatalFileHandler.maxFileSize=
#baseGroup.PDJFatalFileHandler.maxFiles=
baseGroup.PDJFatalFileHandler.isLogging=true


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJErrorFileHandler.
#
# The fileName key specifies the fixed part of the name of the file to which 
# the error output for all the PDJRTE components is written out.  
# The the first file will have the base part of this name with the 
# numeral 1 appended.  Each subsequent file (controlled by the maxFiles and
# maxFileSize keys below) will have their respective numbers appended to the
# base part of the name.  For instance, if maxFiles=3 and maxFileSize=10, 
# there will be 3 files of 10 blocks (512 bytes each) written before rollover 
# occurs.  
#
# The default fileName is msg__amj_error.log.
# The default maxFiles is 3
# The default maxFileSize is 512 blocks
#
# The fully-qualified file names for the default keys are:
#
# For Windows
#       <pd-home>/log/msg__amj_error1.log
#       <pd-home>/log/msg__amj_error2.log
#       <pd-home>/log/msg__amj_error3.log
# For unix
#       <var-dir>/PolicyDirector/log/msg__amj_error1.log
#       <var-dir>/PolicyDirector/log/msg__amj_error2.log
#       <var-dir>/PolicyDirector/log/msg__amj_error3.log
#

# If either PDJLog.properties or PD.properties is not found, no logging will 
# take place.
#-----------------------------------------------------------------------

#baseGroup.PDJErrorFileHandler.fileName=
#baseGroup.PDJErrorFileHandler.maxFileSize=
#baseGroup.PDJErrorFileHandler.maxFiles=
baseGroup.PDJErrorFileHandler.isLogging=true


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJWarningFileHandler.
#
# The fileName key specifies the fixed part of the name of the file to which 
# the warning output for all the PDJRTE components is written out.  
# The the first file will have the base part of this name with the 
# numeral 1 appended.  Each subsequent file (controlled by the maxFiles and
# maxFileSize keys below) will have their respective numbers appended to the
# base part of the name.  For instance, if maxFiles=3 and maxFileSize=10, 
# there will be 3 files of 10 blocks (512 bytes each) written before rollover 
# occurs.  
#
# The default fileName is msg__amj_warning.log.
# The default maxFiles is 3
# The default maxFileSize is 512 blocks
#
# The fully-qualified file names for the default keys are:
#
# For Windows
#       <pd-home>/log/msg__amj_warning1.log
#       <pd-home>/log/msg__amj_warning2.log
#       <pd-home>/log/msg__amj_warning3.log
# For unix
#       <var-dir>/PolicyDirector/log/msg__amj_warning1.log
#       <var-dir>/PolicyDirector/log/msg__amj_warning2.log
#       <var-dir>/PolicyDirector/log/msg__amj_warning3.log
#

# If either PDJLog.properties or PD.properties is not found, no logging will 
# take place.
#-----------------------------------------------------------------------


#baseGroup.PDJWarningFileHandler.fileName=
#baseGroup.PDJWarningFileHandler.maxFileSize=
#baseGroup.PDJWarningFileHandler.maxFiles=
baseGroup.PDJWarningFileHandler.isLogging=true


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJNoticeFileHandler.
#
# The fileName key specifies the fixed part of the name of the file to which 
# the notice output for all the PDJRTE components is written out.  
# The first file will have the base part of this name with the numeral 1 
# appended.  Each subsequent file (controlled by the maxFiles and
# maxFileSize keys below) will have their respective numbers appended to the
# base part of the name.  For instance, if maxFiles=3 and maxFileSize=10, 
# there will be 3 files of 10 blocks (512 bytes each) written before rollover 
# occurs.  
#
# The default fileName is msg__amj_notice.log.
# The default maxFiles is 3
# The default maxFileSize is 512 blocks
#
# The fully-qualified file names for the default keys are:
#
# For Windows
#       <pd-home>/log/msg__amj_notice1.log
#       <pd-home>/log/msg__amj_notice2.log
#       <pd-home>/log/msg__amj_notice3.log
# For unix
#       <var-dir>/PolicyDirector/log/msg__amj_notice1.log
#       <var-dir>/PolicyDirector/log/msg__amj_notice2.log
#       <var-dir>/PolicyDirector/log/msg__amj_notice3.log
#

# If either PDJLog.properties or PD.properties is not found, no logging will 
# take place.
#-----------------------------------------------------------------------

#baseGroup.PDJNoticeFileHandler.fileName=
#baseGroup.PDJNoticeFileHandler.maxFileSize=
#baseGroup.PDJNoticeFileHandler.maxFiles=
baseGroup.PDJNoticeFileHandler.isLogging=false


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJNoticeVerboseFileHandler.
#
# The fileName key specifies the fixed part of the name of the file to which 
# the verbose notice output for all the PDJRTE components is written out.  
# The first file will have the base part of this name with the numeral 1 
# appended.  Each subsequent file (controlled by the maxFiles and
# maxFileSize keys below) will have their respective numbers appended to the
# base part of the name.  For instance, if maxFiles=3 and maxFileSize=10, 
# there will be 3 files of 10 blocks (512 bytes each) written before rollover 
# occurs.  
#
# The default fileName is msg__amj_noticeverbose.log.
# The default maxFiles is 3
# The default maxFileSize is 512 blocks
#
# The fully-qualified file names for the default keys are:
#
# For Windows
#       <pd-home>/log/msg__amj_noticeverbose1.log
#       <pd-home>/log/msg__amj_noticeverbose2.log
#       <pd-home>/log/msg__amj_noticeverbose3.log
# For unix
#       <var-dir>/PolicyDirector/log/msg__amj_noticeverbose1.log
#       <var-dir>/PolicyDirector/log/msg__amj_noticeverbose2.log
#       <var-dir>/PolicyDirector/log/msg__amj_noticeverbose3.log
#

# If either PDJLog.properties or PD.properties is not found, no logging will 
# take place.
#-----------------------------------------------------------------------

#baseGroup.PDJNoticeVerboseFileHandler.fileName=
#baseGroup.PDJNoticeVerboseFileHandler.maxFileSize=
#baseGroup.PDJNoticeVerboseFileHandler.maxFiles=
baseGroup.PDJNoticeVerboseFileHandler.isLogging=false



#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJConsoleHandler.
#
# To enable all trace and message output to the console: 
#   (1) set the isLogging attribute for the PDJConsoleHandler.islogging 
#       to true, and
#   (2) comment out the console handler entries for the other trace and 
#       message handler entries in this file.  
#
# Setting the isLogging property of the console handlers will add them in 
# with the other handlers, i.e. if the file handlers are turned on, turning 
# on the console handlers will not turn them off.
#    
#-----------------------------------------------------------------------

baseGroup.PDJConsoleHandler.isLogging=false


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJTraceConsoleHandler.  
#-----------------------------------------------------------------------

#baseGroup.PDJTraceConsoleHandler.isLogging=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJMessageConsoleHandler.  
#-----------------------------------------------------------------------

#baseGroup.PDJMessageConsoleHandler.isLogging=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJadminTraceLogger.
#-----------------------------------------------------------------------

#baseGroup.PDJadminTraceLogger.isLogging=

#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJauditTraceLogger.
#-----------------------------------------------------------------------

#baseGroup.PDJauditTraceLogger.isLogging=

#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJasn1TraceLogger.
#-----------------------------------------------------------------------

#baseGroup.PDJasn1TraceLogger.isLogging=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJutilTraceLogger.
#-----------------------------------------------------------------------

#baseGroup.PDJutilTraceLogger.isLogging=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJtsTraceLogger.
#-----------------------------------------------------------------------

#baseGroup.PDJtsTraceLogger.isLogging=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJauthzTraceLogger.
#-----------------------------------------------------------------------

#baseGroup.PDJauthzTraceLogger.isLogging=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure a PDJsvrsslcfgTraceLogger.
#-----------------------------------------------------------------------

#baseGroup.PDJsvrsslcfgTraceLogger.isLogging=

#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJAdminAllMaskFilter.  
#-----------------------------------------------------------------------

#baseGroup.PDJadminAllMaskFilter.mask=

#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJAuditAllMaskFilter.  
#-----------------------------------------------------------------------

#baseGroup.PDJauditAllMaskFilter.mask=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJutilAllMaskFilter.  
#-----------------------------------------------------------------------

#baseGroup.PDJutilAllMaskFilter.mask=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJasn1AllMaskFilter.  
#-----------------------------------------------------------------------

#baseGroup.PDJasn1AllMaskFilter.mask=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJtsAllMaskFilter.  
#-----------------------------------------------------------------------

#baseGroup.PDJtsAllMaskFilter.mask=



#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJauthzAllMaskFilter.  
#-----------------------------------------------------------------------

#baseGroup.PDJauthzAllMaskFilter.mask=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJsvrsslcfgAllMaskFilter.  
#-----------------------------------------------------------------------

#baseGroup.PDJsvrsslcfgAllMaskFilter.mask=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJadminClassFilter.  Classes in PDJLog are treated as
# subcomponents.  Modify the "classes" value to turn on/off the logging
# of different components.  A blank value or absent classes qualifier means 
# all components will be logged.
#-----------------------------------------------------------------------

#baseGroup.PDJadminClassFilter.classes=

#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJauditClassFilter.  Classes in PDJLog are treated as
# subcomponents.  Modify the "classes" value to turn on/off the logging
# of different components.  A blank value or absent classes qualifier means 
# all components will be logged.
#-----------------------------------------------------------------------

#baseGroup.PDJauditClassFilter.classes=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJutilClassFilter.  Classes in PDJLog are treated as
# subcomponents.  Modify the "classes" value to turn on/off the logging
# of different components.  A blank value or absent classes qualifier means 
# all components will be logged.
#-----------------------------------------------------------------------

#baseGroup.PDJutilClassFilter.classes=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJasn1ClassFilter.  Classes in PDJLog are treated as
# subcomponents.  Modify the "classes" value to turn on/off the logging
# of different components.  A blank value or absent classes qualifier means 
# all components will be logged.
#-----------------------------------------------------------------------

#baseGroup.PDJasn1ClassFilter.classes=


#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJtsClassFilter.  Classes in PDJLog are treated as
# subcomponents.  Modify the "classes" value to turn on/off the logging
# of different components.  Absence of this qualifier means all components
# will be logged.
#-----------------------------------------------------------------------

#baseGroup.PDJtsClassFilter.classes=

#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJauthzClassFilter.  Classes in PDJLog are treated as
# subcomponents.  Modify the "classes" value to turn on/off the logging
# of different components.  Absence of this qualifier means all components
# will be logged.
#-----------------------------------------------------------------------

#baseGroup.PDJauthzClassFilter.classes=

#-----------------------------------------------------------------------
# This section shows the key/value pairs that may be specified to
# configure an PDJsvrsslcfgClassFilter.  Classes in PDJLog are treated as
# subcomponents.  Modify the "classes" value to turn on/off the logging
# of different components.  Absence of this qualifier means all components
# will be logged.
#-----------------------------------------------------------------------

#baseGroup.PDJsvrsslcfgClassFilter.classes=





















